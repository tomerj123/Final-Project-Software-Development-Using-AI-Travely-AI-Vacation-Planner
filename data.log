2024-03-13 15:49:08,577 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-13 15:49:08,672 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-13 15:50:49,009 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-13 15:50:49,010 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-13 15:52:34,647 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-13 15:52:34,649 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-13 15:53:03,396 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-13 15:53:03,398 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 19:51:26,795 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 19:51:26,900 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 19:51:57,458 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 19:51:57,460 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 19:52:03,313 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 19:52:03,314 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 19:52:35,560 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 19:52:35,560 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 19:52:35,570 - DEBUG - connect_tcp.started host='serpapi.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 19:52:35,598 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000022E4D6E9C10>
2024-03-14 19:52:35,598 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000022E4D60DEC0> server_hostname='serpapi.com' timeout=5.0
2024-03-14 19:52:35,799 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000022E4D6E9D60>
2024-03-14 19:52:35,799 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 19:52:35,799 - DEBUG - send_request_headers.complete
2024-03-14 19:52:35,799 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 19:52:35,799 - DEBUG - send_request_body.complete
2024-03-14 19:52:35,799 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 19:52:37,648 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 17:52:37 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'86461e4e69bd09c5-HFA'), (b'CF-Cache-Status', b'MISS'), (b'Cache-Control', b'max-age=3600, public'), (b'ETag', b'W/"5dda92b161a0a20088c32ab22f41997d"'), (b'Vary', b'Accept-Encoding'), (b'referrer-policy', b'strict-origin-when-cross-origin'), (b'serpapi-search-id', b'65f339631d64ea0a7eef3c37'), (b'x-content-type-options', b'nosniff'), (b'x-download-options', b'noopen'), (b'x-frame-options', b'SAMEORIGIN'), (b'x-permitted-cross-domain-policies', b'none'), (b'x-request-id', b'81f7f535-1bbd-41d1-a429-440474c2f7d3'), (b'x-robots-tag', b'noindex, nofollow'), (b'x-runtime', b'1.407447'), (b'x-xss-protection', b'1; mode=block'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-14 19:52:37,648 - INFO - HTTP Request: GET https://serpapi.com/search?engine=google_flights&departure_id=TLV&arrival_id=CDG&outbound_date=2024-04-15&return_date=2024-04-20&currency=USD&hl=en&api_key=669f434e4ba2136c8626035972520de9b20e743726e97f32db7f33e748d2e561 "HTTP/1.1 200 OK"
2024-03-14 19:52:37,659 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 19:52:37,676 - DEBUG - receive_response_body.complete
2024-03-14 19:52:37,676 - DEBUG - response_closed.started
2024-03-14 19:52:37,676 - DEBUG - response_closed.complete
2024-03-14 19:52:37,676 - DEBUG - close.started
2024-03-14 19:52:37,676 - DEBUG - close.complete
2024-03-14 19:54:43,090 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 19:54:43,090 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 19:54:43,104 - DEBUG - connect_tcp.started host='serpapi.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 19:54:43,114 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000022E4D6FE220>
2024-03-14 19:54:43,114 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000022E4D6C40C0> server_hostname='serpapi.com' timeout=5.0
2024-03-14 19:54:43,154 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000022E4D74CFA0>
2024-03-14 19:54:43,154 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 19:54:43,154 - DEBUG - send_request_headers.complete
2024-03-14 19:54:43,154 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 19:54:43,154 - DEBUG - send_request_body.complete
2024-03-14 19:54:43,154 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 19:54:48,158 - DEBUG - receive_response_headers.failed exception=ReadTimeout(TimeoutError())
2024-03-14 19:54:48,158 - DEBUG - response_closed.started
2024-03-14 19:54:48,158 - DEBUG - response_closed.complete
2024-03-14 20:00:20,463 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:20,465 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:31,367 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:31,367 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:31,376 - DEBUG - connect_tcp.started host='serpapi.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:31,419 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266C824F0>
2024-03-14 20:00:31,419 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266C54940> server_hostname='serpapi.com' timeout=5.0
2024-03-14 20:00:31,459 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266C7CC70>
2024-03-14 20:00:31,459 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:31,459 - DEBUG - send_request_headers.complete
2024-03-14 20:00:31,459 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:31,459 - DEBUG - send_request_body.complete
2024-03-14 20:00:31,459 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:32,472 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:32 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'864629eb4aee09cb-HFA'), (b'CF-Cache-Status', b'MISS'), (b'Cache-Control', b'max-age=3600, public'), (b'ETag', b'W/"5b732c0af34ff17b97125bd6834e7968"'), (b'Vary', b'Accept-Encoding'), (b'referrer-policy', b'strict-origin-when-cross-origin'), (b'serpapi-search-id', b'65f339e3351764ab52b38f92'), (b'x-content-type-options', b'nosniff'), (b'x-download-options', b'noopen'), (b'x-frame-options', b'SAMEORIGIN'), (b'x-permitted-cross-domain-policies', b'none'), (b'x-request-id', b'ba1d9420-fe50-421a-9c6f-5a84e3ad8b78'), (b'x-robots-tag', b'noindex, nofollow'), (b'x-runtime', b'0.569600'), (b'x-xss-protection', b'1; mode=block'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-14 20:00:32,472 - INFO - HTTP Request: GET https://serpapi.com/search?engine=google_flights&departure_id=TLV&arrival_id=NRT&outbound_date=2024-05-01&return_date=2024-05-08&currency=USD&hl=en&api_key=669f434e4ba2136c8626035972520de9b20e743726e97f32db7f33e748d2e561 "HTTP/1.1 200 OK"
2024-03-14 20:00:32,472 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:32,472 - DEBUG - receive_response_body.complete
2024-03-14 20:00:32,472 - DEBUG - response_closed.started
2024-03-14 20:00:32,472 - DEBUG - response_closed.complete
2024-03-14 20:00:32,472 - DEBUG - close.started
2024-03-14 20:00:32,472 - DEBUG - close.complete
2024-03-14 20:00:32,472 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:32,472 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:32,478 - DEBUG - connect_tcp.started host='serpapi.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:32,495 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266C825E0>
2024-03-14 20:00:32,497 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266C793C0> server_hostname='serpapi.com' timeout=5.0
2024-03-14 20:00:32,522 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266C7C8E0>
2024-03-14 20:00:32,522 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:32,522 - DEBUG - send_request_headers.complete
2024-03-14 20:00:32,522 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:32,522 - DEBUG - send_request_body.complete
2024-03-14 20:00:32,522 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:36,805 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:36 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'864629f1ef4209c9-HFA'), (b'CF-Cache-Status', b'MISS'), (b'Cache-Control', b'max-age=3600, public'), (b'ETag', b'W/"f308d06e6138e4b7c22b5744bfec4adc"'), (b'Vary', b'Accept-Encoding'), (b'referrer-policy', b'strict-origin-when-cross-origin'), (b'serpapi-search-id', b'65f33b408ccee01533c590d4'), (b'x-content-type-options', b'nosniff'), (b'x-download-options', b'noopen'), (b'x-frame-options', b'SAMEORIGIN'), (b'x-permitted-cross-domain-policies', b'none'), (b'x-request-id', b'75252ccc-ed47-4d29-ab3f-4a81d0fff3b1'), (b'x-robots-tag', b'noindex, nofollow'), (b'x-runtime', b'3.668249'), (b'x-xss-protection', b'1; mode=block'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-14 20:00:36,805 - INFO - HTTP Request: GET https://serpapi.com/search?engine=google_hotels&q=central%20hotels%20in%20Tokyo&check_in_date=2024-05-01&check_out_date=2024-05-08&currency=USD&api_key=669f434e4ba2136c8626035972520de9b20e743726e97f32db7f33e748d2e561 "HTTP/1.1 200 OK"
2024-03-14 20:00:36,805 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:36,938 - DEBUG - receive_response_body.complete
2024-03-14 20:00:36,938 - DEBUG - response_closed.started
2024-03-14 20:00:36,938 - DEBUG - response_closed.complete
2024-03-14 20:00:36,938 - DEBUG - close.started
2024-03-14 20:00:36,938 - DEBUG - close.complete
2024-03-14 20:00:36,948 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'This is the hotels list I have gathered so far. Write me a list of the top hotels and the info on each hotel you got.\nName: Shinagawa Prince Hotel, Link: http://www.princehotels.co.jp/shinagawa/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $134, Total Rate (Lowest): $938, Nearby Places: Shinagawa Station, Haneda Airport, 中国料理 品川大飯店\nName: Tokyo Bay Shiomi Prince Hotel, Link: https://www.princehotels.com/shiomi/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $173, Total Rate (Lowest): $1,210, Nearby Places: Shiomi Station, Haneda Airport\nName: Shinjuku Granbell Hotel, Link: https://www.granbellhotel.jp/shinjuku/, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $135, Total Rate (Lowest): $944, Nearby Places: Shinjuku Golden Gai, Higashi-Shinjuku Station, Haneda Airport, ペキンリョウリギョクラン\nName: The Prince Park Tower Tokyo, Link: http://www.princehotels.co.jp/parktower/, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $259, Total Rate (Lowest): $1,810, Nearby Places: Tokyo Tower, Shibakoen Sta., Haneda Airport, Brise Verte\nName: APA Hotel & Resort Ryogoku Eki Tower, Link: https://www.apahotel.com/resort/ryogokueki/?utm_source=google&utm_medium=maps, Check-in Time: 3:00\u202fPM, Check-out Time: 10:00\u202fAM, Rate Per Night (Lowest): $73, Total Rate (Lowest): $514, Nearby Places: Edo-Tokyo Museum, Ryogoku Sta., Haneda Airport, Ryogoku Terrace\nName: Keio Plaza Hotel Tokyo, Link: https://www.keioplaza.co.jp/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $210, Total Rate (Lowest): $1,470, Nearby Places: Tokyo Metropolitan Government Building, Tochomae Station, Haneda Airport, Teppan-Yaki YAMANAMI\nName: Hamacho Hotel, Link: https://hamachohotel.jp/?utm_source=google&utm_medium=bp&utm_campaign=hamacho, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $172, Total Rate (Lowest): $1,202, Nearby Places: Imperial Palace, Suitengumae Sta., Haneda Airport, ガスト 日本橋浜町店\nName: KOKO HOTEL Ginza 1-chome, Link: https://koko-hotels.com/ginza_1/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $103, Total Rate (Lowest): $721, Nearby Places: Imperial Palace, Ginza-itchome Sta., Haneda Airport, Periniiyon Restaurant\nName: ONE@Tokyo, Link: https://onetokyo.com/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $172, Total Rate (Lowest): $1,205, Nearby Places: Tokyo Skytree, Oshiage Sta.(SKYTREE), Haneda Airport\nName: Rembrandt Hotel Tokyo Machida, Link: https://rembrandt-group.com/machida, Check-in Time: 2:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $58, Total Rate (Lowest): $408, Nearby Places: Sagami-Ono Station, Haneda Airport, 中国料理 龍皇\nName: APA Hotel Nishi Shinjuku Gochome Eki Tower, Link: https://www.apahotel.com/resort/nishishinjuku-tower/?utm_source=google&utm_medium=maps, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $93, Total Rate (Lowest): $652, Nearby Places: Meiji Jingu, Nishi-Shinjuku-Gochome Station, Haneda Airport, Lunette\nName: Citadines Central Shinjuku Tokyo, Link: https://www.discoverasr.com/en/citadines/japan/citadines-central-shinjuku-tokyo?utm_source=google&utm_medium=organic&utm_campaign=HQ-google-organic-alwayson-20230628-all-en-jp-jp-citadinescentralshinjukutokyo-eme-gbp, Check-in Time: 2:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $169, Total Rate (Lowest): $1,183, Nearby Places: Shinjuku Golden Gai, Seibu-Shinjuku Station, Haneda Airport, Miyabi\nName: Hotel Sunlite Shinjuku, Link: https://www.pearlhotels.jp/shinjuku/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $67, Total Rate (Lowest): $469, Nearby Places: Shinjuku Golden Gai, Higashi-Shinjuku Station, Haneda Airport\nName: Tokyo Prince Hotel, Link: http://www.princehotels.co.jp/tokyo/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $185, Total Rate (Lowest): $1,293, Nearby Places: Tokyo Tower, Onarimon Sta., Haneda Airport\nName: Hyatt Regency Tokyo, Link: https://www.hyatt.com/en-US/hotel/japan/hyatt-regency-tokyo/tyoty?src=corp_lclb_gmb_seo_tyoty, Check-in Time: 2:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $320, Total Rate (Lowest): $2,240, Nearby Places: Tokyo Metropolitan Government Building, Tochomae Station, Haneda Airport, Ningyocho Imahan Odakyū Dai-ichi Seimei Building\nName: Miyako, Link: https://www.bluepillow.com/search?p_id=589dfc3a7c00cb10c8dabfa5&dest=bkng&cat=House&accomodationids=5aa733987c00cb325cedd0ae, Check-in Time: 1:00\u202fPM, Check-out Time: 10:00\u202fAM, Rate Per Night (Lowest): $46, Total Rate (Lowest): $322, Nearby Places: \nName: Mitsui Garden Hotel Gotanda, Link: https://www.gardenhotels.co.jp/gotanda/?utm_source=googlebusinessprofile&utm_medium=google&utm_campaign=maps, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $157, Total Rate (Lowest): $1,098, Nearby Places: Osakihirokoji Station, Haneda Airport, Tanto Tanto Za Gadenzu Gotandaten\nName: Hotel East 21 Tokyo, Link: http://www.hotel-east21.co.jp/, Check-in Time: 2:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $115, Total Rate (Lowest): $807, Nearby Places: Haneda Airport, 鍛冶屋 文蔵 東陽町店\nName: Shiba Park Hotel, Link: https://www.shibaparkhotel.com/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $194, Total Rate (Lowest): $1,358, Nearby Places: Onarimon Sta., Haneda Airport, ザ ダイニング\nName: 日久の宿, Link: https://www.bluepillow.com/search?p_id=589df90c7c00cb10c8da9250&dest=bkng&cat=House&accomodationids=64861d597f7e24c1922fb7a9, Check-in Time: 3:00\u202fPM, Check-out Time: 10:30\u202fAM, Rate Per Night (Lowest): $78, Total Rate (Lowest): $543, Nearby Places: \n'}], 'model': 'gpt-3.5-turbo'}}
2024-03-14 20:00:36,988 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:37,032 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021266D4C5E0>
2024-03-14 20:00:37,032 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266B9A3C0> server_hostname='api.openai.com' timeout=5.0
2024-03-14 20:00:37,082 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021266D4C5B0>
2024-03-14 20:00:37,086 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-14 20:00:37,086 - DEBUG - send_request_headers.complete
2024-03-14 20:00:37,086 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-14 20:00:37,086 - DEBUG - send_request_body.complete
2024-03-14 20:00:37,086 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-14 20:00:48,532 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0125'), (b'openai-organization', b'reichman-university-wxioss'), (b'openai-processing-ms', b'10686'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'998493'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'90ms'), (b'x-request-id', b'req_991d5d5fdb4c29c537e5d75b599f9fb8'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=FSsiN2DhNS2F4bqnFXn.2Ody7uURqUp8B1_Pvj2fNMo-1710439248-1.0.1.1-ndCHk1Sp7VMou_pLr7VJ4oqYW_LTTimuD78FgoxZWqCsBkD5p6GwXZAe9z7CcNG2IOAoDHbVG._6AzkgFhqEdA; path=/; expires=Thu, 14-Mar-24 18:30:48 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=jVjPNE28lQnIGpimkcmlD5qV.7dSazU_G1QxQeOKwEA-1710439248309-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'86462a0e7f2909cb-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-14 20:00:48,532 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-03-14 20:00:48,532 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-14 20:00:48,542 - DEBUG - receive_response_body.complete
2024-03-14 20:00:48,542 - DEBUG - response_closed.started
2024-03-14 20:00:48,542 - DEBUG - response_closed.complete
2024-03-14 20:00:48,542 - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-03-14 20:00:48,542 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:48,542 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:48,549 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:49,048 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D56FA0>
2024-03-14 20:00:49,048 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266C79340> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:00:49,209 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266CA7D00>
2024-03-14 20:00:49,209 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:49,209 - DEBUG - send_request_headers.complete
2024-03-14 20:00:49,209 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:49,209 - DEBUG - send_request_body.complete
2024-03-14 20:00:49,209 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:49,778 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:49 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3756'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'618a56f0-2b0f-4caf-8ba8-bbda85bdb456'), (b'x-amz-apigw-id', b'UoY0tEEEIAMEC1Q='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b51-51d6e00f4368c7c5304f831b')])
2024-03-14 20:00:49,778 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/search?key=7D8FF18728F342E29B426D6D5946FA6C&searchQuery=Tokyo&category=attractions&language=en "HTTP/1.1 200 OK"
2024-03-14 20:00:49,778 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:49,778 - DEBUG - receive_response_body.complete
2024-03-14 20:00:49,778 - DEBUG - response_closed.started
2024-03-14 20:00:49,778 - DEBUG - response_closed.complete
2024-03-14 20:00:49,778 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:49,778 - DEBUG - send_request_headers.complete
2024-03-14 20:00:49,778 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:49,778 - DEBUG - send_request_body.complete
2024-03-14 20:00:49,778 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:50,234 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:49 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3804'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'2e51c70b-ca4e-42ea-a252-c6b44156c449'), (b'x-amz-apigw-id', b'UoY0zEz7IAMEIWA='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b51-722b797a23de804f7fce0d94')])
2024-03-14 20:00:50,234 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/search?key=7D8FF18728F342E29B426D6D5946FA6C&searchQuery=Tokyo&category=restaurants&language=en "HTTP/1.1 200 OK"
2024-03-14 20:00:50,234 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:50,234 - DEBUG - receive_response_body.complete
2024-03-14 20:00:50,234 - DEBUG - response_closed.started
2024-03-14 20:00:50,234 - DEBUG - response_closed.complete
2024-03-14 20:00:50,234 - DEBUG - close.started
2024-03-14 20:00:50,234 - DEBUG - close.complete
2024-03-14 20:00:50,234 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:50,234 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:50,244 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:50,395 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D6D1F0>
2024-03-14 20:00:50,395 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266C54940> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:00:50,545 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D4CF40>
2024-03-14 20:00:50,545 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:50,545 - DEBUG - send_request_headers.complete
2024-03-14 20:00:50,545 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:50,545 - DEBUG - send_request_body.complete
2024-03-14 20:00:50,545 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:51,688 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5577'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'6a2f2d3f-716f-4b59-ab90-6a33fdbdb3d1'), (b'x-amz-apigw-id', b'UoY07FY4oAMEt_Q='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b52-7d444c9a12b80c52217db16a')])
2024-03-14 20:00:51,688 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/14951238/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:00:51,688 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:51,688 - DEBUG - receive_response_body.complete
2024-03-14 20:00:51,688 - DEBUG - response_closed.started
2024-03-14 20:00:51,688 - DEBUG - response_closed.complete
2024-03-14 20:00:51,688 - DEBUG - close.started
2024-03-14 20:00:51,688 - DEBUG - close.complete
2024-03-14 20:00:51,688 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:51,688 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:51,698 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:51,848 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D761F0>
2024-03-14 20:00:51,848 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266D382C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:00:51,998 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D5FF70>
2024-03-14 20:00:51,998 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:51,998 - DEBUG - send_request_headers.complete
2024-03-14 20:00:51,998 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:51,998 - DEBUG - send_request_body.complete
2024-03-14 20:00:51,998 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:52,283 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'4359'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'8673eb66-9234-46b7-810e-dab7fc766471'), (b'x-amz-apigw-id', b'UoY1JFINoAMEUIg='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b53-27b9b4eb23dae2cb00285784')])
2024-03-14 20:00:52,283 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/144151/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:00:52,283 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:52,283 - DEBUG - receive_response_body.complete
2024-03-14 20:00:52,283 - DEBUG - response_closed.started
2024-03-14 20:00:52,283 - DEBUG - response_closed.complete
2024-03-14 20:00:52,283 - DEBUG - close.started
2024-03-14 20:00:52,283 - DEBUG - close.complete
2024-03-14 20:00:52,283 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:52,283 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:52,289 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:52,451 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D79790>
2024-03-14 20:00:52,451 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266D38340> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:00:52,600 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D76400>
2024-03-14 20:00:52,600 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:52,600 - DEBUG - send_request_headers.complete
2024-03-14 20:00:52,600 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:52,600 - DEBUG - send_request_body.complete
2024-03-14 20:00:52,600 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:52,917 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:52 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5275'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'23e28675-9e69-43e7-b32a-171b414aac57'), (b'x-amz-apigw-id', b'UoY1PHpqoAMEsCw='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b54-73f97b3f41fe7ef979774296')])
2024-03-14 20:00:52,917 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/320047/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:00:52,917 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:52,917 - DEBUG - receive_response_body.complete
2024-03-14 20:00:52,917 - DEBUG - response_closed.started
2024-03-14 20:00:52,917 - DEBUG - response_closed.complete
2024-03-14 20:00:52,917 - DEBUG - close.started
2024-03-14 20:00:52,923 - DEBUG - close.complete
2024-03-14 20:00:52,924 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:52,924 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:52,925 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:53,074 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D7CD30>
2024-03-14 20:00:53,074 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266D38440> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:00:53,225 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D7CCD0>
2024-03-14 20:00:53,225 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:53,225 - DEBUG - send_request_headers.complete
2024-03-14 20:00:53,225 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:53,225 - DEBUG - send_request_body.complete
2024-03-14 20:00:53,225 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:53,545 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'4793'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'8eb876d9-9e2d-4e05-b799-2a9159183482'), (b'x-amz-apigw-id', b'UoY1VF3YoAMEn5w='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b55-43d68dc55773986826c26957')])
2024-03-14 20:00:53,545 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1872416/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:00:53,545 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:53,545 - DEBUG - receive_response_body.complete
2024-03-14 20:00:53,545 - DEBUG - response_closed.started
2024-03-14 20:00:53,545 - DEBUG - response_closed.complete
2024-03-14 20:00:53,555 - DEBUG - close.started
2024-03-14 20:00:53,555 - DEBUG - close.complete
2024-03-14 20:00:53,555 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:53,555 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:53,565 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:53,709 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D79CA0>
2024-03-14 20:00:53,709 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266C79640> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:00:53,856 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D79C70>
2024-03-14 20:00:53,856 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:53,856 - DEBUG - send_request_headers.complete
2024-03-14 20:00:53,856 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:53,856 - DEBUG - send_request_body.complete
2024-03-14 20:00:53,856 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:54,314 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5705'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'd7e5202b-5c9a-4007-b043-c8d99f256fc9'), (b'x-amz-apigw-id', b'UoY1cFH4oAMEEvQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b55-0d0a1af66343d8617e52d236')])
2024-03-14 20:00:54,315 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/320634/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:00:54,315 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:54,315 - DEBUG - receive_response_body.complete
2024-03-14 20:00:54,315 - DEBUG - response_closed.started
2024-03-14 20:00:54,315 - DEBUG - response_closed.complete
2024-03-14 20:00:54,315 - DEBUG - close.started
2024-03-14 20:00:54,315 - DEBUG - close.complete
2024-03-14 20:00:54,316 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:54,316 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:54,323 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:54,477 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D76610>
2024-03-14 20:00:54,477 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266C79340> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:00:54,628 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D763A0>
2024-03-14 20:00:54,628 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:54,628 - DEBUG - send_request_headers.complete
2024-03-14 20:00:54,628 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:54,628 - DEBUG - send_request_body.complete
2024-03-14 20:00:54,628 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:54,941 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2864'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'019f7729-bda6-4970-805b-d708e1213569'), (b'x-amz-apigw-id', b'UoY1jGlHoAMEFxQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b56-503f352b578ad0ff2136a6c0')])
2024-03-14 20:00:54,941 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1509275/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:00:54,941 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:54,941 - DEBUG - receive_response_body.complete
2024-03-14 20:00:54,941 - DEBUG - response_closed.started
2024-03-14 20:00:54,941 - DEBUG - response_closed.complete
2024-03-14 20:00:54,941 - DEBUG - close.started
2024-03-14 20:00:54,941 - DEBUG - close.complete
2024-03-14 20:00:54,941 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:54,941 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:54,951 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:55,108 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D4CAF0>
2024-03-14 20:00:55,108 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266D38540> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:00:55,256 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D5F1F0>
2024-03-14 20:00:55,256 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:55,256 - DEBUG - send_request_headers.complete
2024-03-14 20:00:55,256 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:55,256 - DEBUG - send_request_body.complete
2024-03-14 20:00:55,256 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:55,530 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:55 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5689'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'e68a9e6e-1646-4a93-93e7-5fe23dc119e3'), (b'x-amz-apigw-id', b'UoY1qHQNoAMEpig='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b57-0fce7e157efba6fe32f6de52')])
2024-03-14 20:00:55,530 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/12310322/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:00:55,530 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:55,530 - DEBUG - receive_response_body.complete
2024-03-14 20:00:55,530 - DEBUG - response_closed.started
2024-03-14 20:00:55,530 - DEBUG - response_closed.complete
2024-03-14 20:00:55,530 - DEBUG - close.started
2024-03-14 20:00:55,530 - DEBUG - close.complete
2024-03-14 20:00:55,530 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:55,530 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:55,546 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:55,684 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D6D940>
2024-03-14 20:00:55,684 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266D383C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:00:55,837 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D6D8B0>
2024-03-14 20:00:55,837 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:55,837 - DEBUG - send_request_headers.complete
2024-03-14 20:00:55,837 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:55,837 - DEBUG - send_request_body.complete
2024-03-14 20:00:55,837 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:56,091 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:55 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6132'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'baab6bc1-f883-4059-b585-1c273d40ceff'), (b'x-amz-apigw-id', b'UoY1vFKeIAMEbqg='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b57-07652bb20fcc3ed07e5cc066')])
2024-03-14 20:00:56,091 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/7744338/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:00:56,091 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:56,091 - DEBUG - receive_response_body.complete
2024-03-14 20:00:56,091 - DEBUG - response_closed.started
2024-03-14 20:00:56,091 - DEBUG - response_closed.complete
2024-03-14 20:00:56,091 - DEBUG - close.started
2024-03-14 20:00:56,091 - DEBUG - close.complete
2024-03-14 20:00:56,091 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:56,091 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:56,101 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:56,251 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D7F730>
2024-03-14 20:00:56,251 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266D38640> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:00:56,420 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D7FBB0>
2024-03-14 20:00:56,420 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:56,420 - DEBUG - send_request_headers.complete
2024-03-14 20:00:56,420 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:56,421 - DEBUG - send_request_body.complete
2024-03-14 20:00:56,421 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:56,745 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3931'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'56effc25-f6bf-40d6-87c8-7812dd95c761'), (b'x-amz-apigw-id', b'UoY11GQMoAMEJHw='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b58-434ab22a5a77b331272b9aa9')])
2024-03-14 20:00:56,745 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/550327/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:00:56,745 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:56,745 - DEBUG - receive_response_body.complete
2024-03-14 20:00:56,745 - DEBUG - response_closed.started
2024-03-14 20:00:56,746 - DEBUG - response_closed.complete
2024-03-14 20:00:56,746 - DEBUG - close.started
2024-03-14 20:00:56,746 - DEBUG - close.complete
2024-03-14 20:00:56,746 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:56,747 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:56,759 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:56,906 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266CBF6D0>
2024-03-14 20:00:56,906 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266D388C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:00:57,056 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D6D1C0>
2024-03-14 20:00:57,056 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:57,056 - DEBUG - send_request_headers.complete
2024-03-14 20:00:57,056 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:57,066 - DEBUG - send_request_body.complete
2024-03-14 20:00:57,066 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:57,428 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5166'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'899dcb3d-fac0-483c-9300-bfdc4dd4edec'), (b'x-amz-apigw-id', b'UoY18F_9IAMEGqw='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b58-69691da330e280185bafe524')])
2024-03-14 20:00:57,438 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/320639/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:00:57,438 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:57,438 - DEBUG - receive_response_body.complete
2024-03-14 20:00:57,438 - DEBUG - response_closed.started
2024-03-14 20:00:57,438 - DEBUG - response_closed.complete
2024-03-14 20:00:57,438 - DEBUG - close.started
2024-03-14 20:00:57,438 - DEBUG - close.complete
2024-03-14 20:00:57,438 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:57,438 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:57,445 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:57,594 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D5F310>
2024-03-14 20:00:57,594 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266D38240> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:00:57,751 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D5F4C0>
2024-03-14 20:00:57,751 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:57,751 - DEBUG - send_request_headers.complete
2024-03-14 20:00:57,751 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:57,751 - DEBUG - send_request_body.complete
2024-03-14 20:00:57,752 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:58,038 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6776'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'e9971de9-8172-4405-861d-1bee0453ae82'), (b'x-amz-apigw-id', b'UoY2DFLZoAMEb_g='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b59-682b32595cfe79667f5ea756')])
2024-03-14 20:00:58,038 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/7604418/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:00:58,038 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:58,038 - DEBUG - receive_response_body.complete
2024-03-14 20:00:58,038 - DEBUG - response_closed.started
2024-03-14 20:00:58,038 - DEBUG - response_closed.complete
2024-03-14 20:00:58,038 - DEBUG - close.started
2024-03-14 20:00:58,038 - DEBUG - close.complete
2024-03-14 20:00:58,038 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:58,038 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:58,048 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:58,203 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D76280>
2024-03-14 20:00:58,203 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266D38140> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:00:58,342 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D760D0>
2024-03-14 20:00:58,342 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:58,342 - DEBUG - send_request_headers.complete
2024-03-14 20:00:58,342 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:58,342 - DEBUG - send_request_body.complete
2024-03-14 20:00:58,342 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:58,640 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6349'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'589a747a-b0c3-4e42-9f2f-feb84fe4b7ed'), (b'x-amz-apigw-id', b'UoY2IGgoIAMEekQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b5a-24d878d85029540628b73a3d')])
2024-03-14 20:00:58,640 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1010352/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:00:58,640 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:58,640 - DEBUG - receive_response_body.complete
2024-03-14 20:00:58,640 - DEBUG - response_closed.started
2024-03-14 20:00:58,640 - DEBUG - response_closed.complete
2024-03-14 20:00:58,640 - DEBUG - close.started
2024-03-14 20:00:58,640 - DEBUG - close.complete
2024-03-14 20:00:58,640 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:58,640 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:58,650 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:58,800 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D7C130>
2024-03-14 20:00:58,800 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266D386C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:00:58,964 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D79A60>
2024-03-14 20:00:58,964 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:58,964 - DEBUG - send_request_headers.complete
2024-03-14 20:00:58,964 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:58,964 - DEBUG - send_request_body.complete
2024-03-14 20:00:58,964 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:59,229 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5439'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'4863dff3-0238-488f-a7dd-7efe5465cb97'), (b'x-amz-apigw-id', b'UoY2PFF4IAMEaFA='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b5a-7fe5060c6e956e984c63fdca')])
2024-03-14 20:00:59,229 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1160290/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:00:59,229 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:59,229 - DEBUG - receive_response_body.complete
2024-03-14 20:00:59,229 - DEBUG - response_closed.started
2024-03-14 20:00:59,229 - DEBUG - response_closed.complete
2024-03-14 20:00:59,229 - DEBUG - close.started
2024-03-14 20:00:59,229 - DEBUG - close.complete
2024-03-14 20:00:59,229 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:59,229 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:59,234 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:59,388 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021267D566D0>
2024-03-14 20:00:59,388 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266D384C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:00:59,538 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021267D56F10>
2024-03-14 20:00:59,538 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:00:59,538 - DEBUG - send_request_headers.complete
2024-03-14 20:00:59,538 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:00:59,538 - DEBUG - send_request_body.complete
2024-03-14 20:00:59,538 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:00:59,832 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:00:59 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5505'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'9b7bc90e-8ca5-4a16-9727-3073f1d1dae5'), (b'x-amz-apigw-id', b'UoY2UF2FoAMEJcw='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b5b-05d6cfaa027a9009715254c8')])
2024-03-14 20:00:59,832 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/24035984/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:00:59,832 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:00:59,833 - DEBUG - receive_response_body.complete
2024-03-14 20:00:59,833 - DEBUG - response_closed.started
2024-03-14 20:00:59,833 - DEBUG - response_closed.complete
2024-03-14 20:00:59,833 - DEBUG - close.started
2024-03-14 20:00:59,833 - DEBUG - close.complete
2024-03-14 20:00:59,834 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:00:59,834 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:00:59,846 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:00:59,990 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D79730>
2024-03-14 20:00:59,990 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266D38C40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:01:00,155 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D793D0>
2024-03-14 20:01:00,155 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:01:00,155 - DEBUG - send_request_headers.complete
2024-03-14 20:01:00,155 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:01:00,155 - DEBUG - send_request_body.complete
2024-03-14 20:01:00,156 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:01:00,413 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:01:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5287'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'8b451463-af22-4fbf-a840-c9c475e6db8b'), (b'x-amz-apigw-id', b'UoY2bGSeIAMEfyw='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b5c-3d1ed68c08265a420307b08a')])
2024-03-14 20:01:00,413 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/16714835/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:01:00,413 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:01:00,413 - DEBUG - receive_response_body.complete
2024-03-14 20:01:00,413 - DEBUG - response_closed.started
2024-03-14 20:01:00,413 - DEBUG - response_closed.complete
2024-03-14 20:01:00,413 - DEBUG - close.started
2024-03-14 20:01:00,413 - DEBUG - close.complete
2024-03-14 20:01:00,413 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:01:00,413 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:01:00,423 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:01:00,573 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D5F2B0>
2024-03-14 20:01:00,573 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266D38740> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:01:00,725 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D5FC40>
2024-03-14 20:01:00,725 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:01:00,725 - DEBUG - send_request_headers.complete
2024-03-14 20:01:00,725 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:01:00,726 - DEBUG - send_request_body.complete
2024-03-14 20:01:00,726 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:01:01,068 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:01:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6179'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'9a041b56-8401-42c2-a21a-e1bbbaf2bf44'), (b'x-amz-apigw-id', b'UoY2gHa3oAMEeUA='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b5c-13a693d52fdd6e5e709843e3')])
2024-03-14 20:01:01,068 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/9798604/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:01:01,068 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:01:01,068 - DEBUG - receive_response_body.complete
2024-03-14 20:01:01,068 - DEBUG - response_closed.started
2024-03-14 20:01:01,068 - DEBUG - response_closed.complete
2024-03-14 20:01:01,068 - DEBUG - close.started
2024-03-14 20:01:01,068 - DEBUG - close.complete
2024-03-14 20:01:01,068 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:01:01,068 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:01:01,078 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:01:01,243 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D42DF0>
2024-03-14 20:01:01,243 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266D385C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:01:01,393 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D4C850>
2024-03-14 20:01:01,393 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:01:01,393 - DEBUG - send_request_headers.complete
2024-03-14 20:01:01,393 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:01:01,393 - DEBUG - send_request_body.complete
2024-03-14 20:01:01,393 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:01:01,616 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:01:01 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3645'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'965ad609-4cde-4175-bcb9-e0a9e36a25de'), (b'x-amz-apigw-id', b'UoY2nFZmoAMEU_A='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b5d-57f82c68233dc73e43c986e2')])
2024-03-14 20:01:01,616 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/5113133/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:01:01,616 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:01:01,616 - DEBUG - receive_response_body.complete
2024-03-14 20:01:01,616 - DEBUG - response_closed.started
2024-03-14 20:01:01,616 - DEBUG - response_closed.complete
2024-03-14 20:01:01,616 - DEBUG - close.started
2024-03-14 20:01:01,616 - DEBUG - close.complete
2024-03-14 20:01:01,616 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:01:01,616 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:01:01,626 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:01:01,776 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D7C160>
2024-03-14 20:01:01,776 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266C79340> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:01:01,938 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D7FC10>
2024-03-14 20:01:01,938 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:01:01,938 - DEBUG - send_request_headers.complete
2024-03-14 20:01:01,938 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:01:01,938 - DEBUG - send_request_body.complete
2024-03-14 20:01:01,938 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:01:02,341 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:01:02 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'7071'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'8d3f2349-36a5-486b-9147-3326368c7b75'), (b'x-amz-apigw-id', b'UoY2sFK4oAMEogA='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b5d-1ceeefa6294bb8c65a0aca0b')])
2024-03-14 20:01:02,341 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/21356820/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:01:02,341 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:01:02,341 - DEBUG - receive_response_body.complete
2024-03-14 20:01:02,341 - DEBUG - response_closed.started
2024-03-14 20:01:02,341 - DEBUG - response_closed.complete
2024-03-14 20:01:02,341 - DEBUG - close.started
2024-03-14 20:01:02,341 - DEBUG - close.complete
2024-03-14 20:01:02,341 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:01:02,341 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:01:02,351 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:01:02,502 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D56CA0>
2024-03-14 20:01:02,502 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266D38BC0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:01:02,655 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D56370>
2024-03-14 20:01:02,655 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:01:02,655 - DEBUG - send_request_headers.complete
2024-03-14 20:01:02,655 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:01:02,655 - DEBUG - send_request_body.complete
2024-03-14 20:01:02,655 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:01:02,957 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:01:02 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5026'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'22bf0cbf-7ed0-4e39-8df8-0273cc82eab8'), (b'x-amz-apigw-id', b'UoY20GfboAMEasA='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b5e-76cc64484fe1b3a2536deb12')])
2024-03-14 20:01:02,957 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/2167155/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:01:02,957 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:01:02,957 - DEBUG - receive_response_body.complete
2024-03-14 20:01:02,957 - DEBUG - response_closed.started
2024-03-14 20:01:02,957 - DEBUG - response_closed.complete
2024-03-14 20:01:02,957 - DEBUG - close.started
2024-03-14 20:01:02,957 - DEBUG - close.complete
2024-03-14 20:01:02,957 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:01:02,967 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:01:02,967 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:01:03,117 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D6DB20>
2024-03-14 20:01:03,117 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266C79340> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:01:03,273 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000021266D6D280>
2024-03-14 20:01:03,273 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:01:03,273 - DEBUG - send_request_headers.complete
2024-03-14 20:01:03,273 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:01:03,273 - DEBUG - send_request_body.complete
2024-03-14 20:01:03,273 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:01:03,581 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:01:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6968'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'4fd7bb95-02f9-4e9d-9066-a607ae164360'), (b'x-amz-apigw-id', b'UoY26HXdoAMEBFw='), (b'X-Amzn-Trace-Id', b'Root=1-65f33b5f-34c5194e0b008e0c467c9136')])
2024-03-14 20:01:03,581 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1106443/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:01:03,581 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:01:03,581 - DEBUG - receive_response_body.complete
2024-03-14 20:01:03,581 - DEBUG - response_closed.started
2024-03-14 20:01:03,581 - DEBUG - response_closed.complete
2024-03-14 20:01:03,581 - DEBUG - close.started
2024-03-14 20:01:03,581 - DEBUG - close.complete
2024-03-14 20:01:05,468 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=121)
           2	LOAD_DEREF(arg=2, lineno=121)
           4	LOAD_FAST(arg=0, lineno=121)
           6	CALL_FUNCTION(arg=1, lineno=121)
           8	STORE_FAST(arg=0, lineno=121)
          10	LOAD_DEREF(arg=2, lineno=122)
          12	LOAD_FAST(arg=1, lineno=122)
          14	CALL_FUNCTION(arg=1, lineno=122)
          16	STORE_FAST(arg=1, lineno=122)
          18	LOAD_DEREF(arg=2, lineno=123)
          20	LOAD_FAST(arg=2, lineno=123)
          22	CALL_FUNCTION(arg=1, lineno=123)
          24	STORE_FAST(arg=2, lineno=123)
          26	LOAD_DEREF(arg=2, lineno=124)
          28	LOAD_FAST(arg=3, lineno=124)
          30	CALL_FUNCTION(arg=1, lineno=124)
          32	STORE_FAST(arg=3, lineno=124)
          34	LOAD_FAST(arg=2, lineno=125)
          36	LOAD_FAST(arg=0, lineno=125)
          38	BINARY_SUBTRACT(arg=None, lineno=125)
          40	STORE_FAST(arg=4, lineno=125)
          42	LOAD_FAST(arg=3, lineno=126)
          44	LOAD_FAST(arg=1, lineno=126)
          46	BINARY_SUBTRACT(arg=None, lineno=126)
          48	STORE_FAST(arg=5, lineno=126)
          50	LOAD_DEREF(arg=3, lineno=127)
          52	LOAD_FAST(arg=4, lineno=127)
          54	LOAD_CONST(arg=1, lineno=127)
          56	BINARY_MULTIPLY(arg=None, lineno=127)
          58	CALL_FUNCTION(arg=1, lineno=127)
          60	LOAD_CONST(arg=2, lineno=127)
          62	BINARY_POWER(arg=None, lineno=127)
          64	LOAD_DEREF(arg=1, lineno=128)
          66	LOAD_FAST(arg=0, lineno=128)
          68	CALL_FUNCTION(arg=1, lineno=128)
          70	LOAD_DEREF(arg=1, lineno=128)
          72	LOAD_FAST(arg=2, lineno=128)
          74	CALL_FUNCTION(arg=1, lineno=128)
          76	BINARY_MULTIPLY(arg=None, lineno=128)
          78	LOAD_DEREF(arg=3, lineno=128)
          80	LOAD_FAST(arg=5, lineno=128)
          82	LOAD_CONST(arg=1, lineno=128)
          84	BINARY_MULTIPLY(arg=None, lineno=128)
          86	CALL_FUNCTION(arg=1, lineno=128)
          88	LOAD_CONST(arg=2, lineno=128)
          90	BINARY_POWER(arg=None, lineno=128)
          92	BINARY_MULTIPLY(arg=None, lineno=128)
          94	BINARY_ADD(arg=None, lineno=127)
          96	STORE_FAST(arg=6, lineno=127)
          98	LOAD_CONST(arg=2, lineno=131)
         100	LOAD_DEREF(arg=0, lineno=131)
         102	LOAD_DEREF(arg=4, lineno=131)
         104	LOAD_FAST(arg=6, lineno=131)
         106	CALL_FUNCTION(arg=1, lineno=131)
         108	CALL_FUNCTION(arg=1, lineno=131)
         110	BINARY_MULTIPLY(arg=None, lineno=131)
         112	RETURN_VALUE(arg=None, lineno=131)
2024-03-14 20:01:05,468 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-03-14 20:01:05,468 - DEBUG - stack: []
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=121)
2024-03-14 20:01:05,468 - DEBUG - stack []
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=2, inst=LOAD_DEREF(arg=2, lineno=121)
2024-03-14 20:01:05,468 - DEBUG - stack []
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=121)
2024-03-14 20:01:05,468 - DEBUG - stack ['$2load_deref.0']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=121)
2024-03-14 20:01:05,468 - DEBUG - stack ['$2load_deref.0', '$lat14.1']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=0, lineno=121)
2024-03-14 20:01:05,468 - DEBUG - stack ['$6call_function.2']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=10, inst=LOAD_DEREF(arg=2, lineno=122)
2024-03-14 20:01:05,468 - DEBUG - stack []
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=122)
2024-03-14 20:01:05,468 - DEBUG - stack ['$10load_deref.3']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=122)
2024-03-14 20:01:05,468 - DEBUG - stack ['$10load_deref.3', '$lng112.4']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=122)
2024-03-14 20:01:05,468 - DEBUG - stack ['$14call_function.5']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=18, inst=LOAD_DEREF(arg=2, lineno=123)
2024-03-14 20:01:05,468 - DEBUG - stack []
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=123)
2024-03-14 20:01:05,468 - DEBUG - stack ['$18load_deref.6']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=22, inst=CALL_FUNCTION(arg=1, lineno=123)
2024-03-14 20:01:05,468 - DEBUG - stack ['$18load_deref.6', '$lat220.7']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=24, inst=STORE_FAST(arg=2, lineno=123)
2024-03-14 20:01:05,468 - DEBUG - stack ['$22call_function.8']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=26, inst=LOAD_DEREF(arg=2, lineno=124)
2024-03-14 20:01:05,468 - DEBUG - stack []
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=3, lineno=124)
2024-03-14 20:01:05,468 - DEBUG - stack ['$26load_deref.9']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=124)
2024-03-14 20:01:05,468 - DEBUG - stack ['$26load_deref.9', '$lng228.10']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=32, inst=STORE_FAST(arg=3, lineno=124)
2024-03-14 20:01:05,468 - DEBUG - stack ['$30call_function.11']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=2, lineno=125)
2024-03-14 20:01:05,468 - DEBUG - stack []
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=125)
2024-03-14 20:01:05,468 - DEBUG - stack ['$lat234.12']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=38, inst=BINARY_SUBTRACT(arg=None, lineno=125)
2024-03-14 20:01:05,468 - DEBUG - stack ['$lat234.12', '$lat136.13']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=40, inst=STORE_FAST(arg=4, lineno=125)
2024-03-14 20:01:05,468 - DEBUG - stack ['$38binary_subtract.14']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=126)
2024-03-14 20:01:05,468 - DEBUG - stack []
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=44, inst=LOAD_FAST(arg=1, lineno=126)
2024-03-14 20:01:05,468 - DEBUG - stack ['$lng242.15']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=46, inst=BINARY_SUBTRACT(arg=None, lineno=126)
2024-03-14 20:01:05,468 - DEBUG - stack ['$lng242.15', '$lng144.16']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=5, lineno=126)
2024-03-14 20:01:05,468 - DEBUG - stack ['$46binary_subtract.17']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=50, inst=LOAD_DEREF(arg=3, lineno=127)
2024-03-14 20:01:05,468 - DEBUG - stack []
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=127)
2024-03-14 20:01:05,468 - DEBUG - stack ['$50load_deref.18']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=127)
2024-03-14 20:01:05,468 - DEBUG - stack ['$50load_deref.18', '$lat52.19']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=56, inst=BINARY_MULTIPLY(arg=None, lineno=127)
2024-03-14 20:01:05,468 - DEBUG - stack ['$50load_deref.18', '$lat52.19', '$const54.20']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=58, inst=CALL_FUNCTION(arg=1, lineno=127)
2024-03-14 20:01:05,468 - DEBUG - stack ['$50load_deref.18', '$56binary_multiply.21']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=127)
2024-03-14 20:01:05,468 - DEBUG - stack ['$58call_function.22']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=62, inst=BINARY_POWER(arg=None, lineno=127)
2024-03-14 20:01:05,468 - DEBUG - stack ['$58call_function.22', '$const60.23']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=64, inst=LOAD_DEREF(arg=1, lineno=128)
2024-03-14 20:01:05,468 - DEBUG - stack ['$62binary_power.24']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=128)
2024-03-14 20:01:05,468 - DEBUG - stack ['$62binary_power.24', '$64load_deref.25']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=68, inst=CALL_FUNCTION(arg=1, lineno=128)
2024-03-14 20:01:05,468 - DEBUG - stack ['$62binary_power.24', '$64load_deref.25', '$lat166.26']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=70, inst=LOAD_DEREF(arg=1, lineno=128)
2024-03-14 20:01:05,468 - DEBUG - stack ['$62binary_power.24', '$68call_function.27']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=72, inst=LOAD_FAST(arg=2, lineno=128)
2024-03-14 20:01:05,468 - DEBUG - stack ['$62binary_power.24', '$68call_function.27', '$70load_deref.28']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=74, inst=CALL_FUNCTION(arg=1, lineno=128)
2024-03-14 20:01:05,468 - DEBUG - stack ['$62binary_power.24', '$68call_function.27', '$70load_deref.28', '$lat272.29']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=76, inst=BINARY_MULTIPLY(arg=None, lineno=128)
2024-03-14 20:01:05,468 - DEBUG - stack ['$62binary_power.24', '$68call_function.27', '$74call_function.30']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=78, inst=LOAD_DEREF(arg=3, lineno=128)
2024-03-14 20:01:05,468 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=5, lineno=128)
2024-03-14 20:01:05,468 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$78load_deref.32']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=82, inst=LOAD_CONST(arg=1, lineno=128)
2024-03-14 20:01:05,468 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$78load_deref.32', '$lng80.33']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=84, inst=BINARY_MULTIPLY(arg=None, lineno=128)
2024-03-14 20:01:05,468 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$78load_deref.32', '$lng80.33', '$const82.34']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=86, inst=CALL_FUNCTION(arg=1, lineno=128)
2024-03-14 20:01:05,468 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$78load_deref.32', '$84binary_multiply.35']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=88, inst=LOAD_CONST(arg=2, lineno=128)
2024-03-14 20:01:05,468 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$86call_function.36']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=90, inst=BINARY_POWER(arg=None, lineno=128)
2024-03-14 20:01:05,468 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$86call_function.36', '$const88.37']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=92, inst=BINARY_MULTIPLY(arg=None, lineno=128)
2024-03-14 20:01:05,468 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$90binary_power.38']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=94, inst=BINARY_ADD(arg=None, lineno=127)
2024-03-14 20:01:05,468 - DEBUG - stack ['$62binary_power.24', '$92binary_multiply.39']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=96, inst=STORE_FAST(arg=6, lineno=127)
2024-03-14 20:01:05,468 - DEBUG - stack ['$94binary_add.40']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=2, lineno=131)
2024-03-14 20:01:05,468 - DEBUG - stack []
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=100, inst=LOAD_DEREF(arg=0, lineno=131)
2024-03-14 20:01:05,468 - DEBUG - stack ['$const98.41']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=102, inst=LOAD_DEREF(arg=4, lineno=131)
2024-03-14 20:01:05,468 - DEBUG - stack ['$const98.41', '$100load_deref.42']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=6, lineno=131)
2024-03-14 20:01:05,468 - DEBUG - stack ['$const98.41', '$100load_deref.42', '$102load_deref.43']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=106, inst=CALL_FUNCTION(arg=1, lineno=131)
2024-03-14 20:01:05,468 - DEBUG - stack ['$const98.41', '$100load_deref.42', '$102load_deref.43', '$d104.44']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=131)
2024-03-14 20:01:05,468 - DEBUG - stack ['$const98.41', '$100load_deref.42', '$106call_function.45']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=110, inst=BINARY_MULTIPLY(arg=None, lineno=131)
2024-03-14 20:01:05,468 - DEBUG - stack ['$const98.41', '$108call_function.46']
2024-03-14 20:01:05,468 - DEBUG - dispatch pc=112, inst=RETURN_VALUE(arg=None, lineno=131)
2024-03-14 20:01:05,468 - DEBUG - stack ['$110binary_multiply.47']
2024-03-14 20:01:05,468 - DEBUG - end state. edges=[]
2024-03-14 20:01:05,468 - DEBUG - -------------------------Prune PHIs-------------------------
2024-03-14 20:01:05,468 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-03-14 20:01:05,468 - DEBUG - defmap: {}
2024-03-14 20:01:05,468 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-03-14 20:01:05,468 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-03-14 20:01:05,468 - DEBUG - keep phismap: {}
2024-03-14 20:01:05,468 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-03-14 20:01:05,468 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-03-14 20:01:05,468 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$lat14.1'}), (6, {'func': '$2load_deref.0', 'args': ['$lat14.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$lng112.4'}), (14, {'func': '$10load_deref.3', 'args': ['$lng112.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$18load_deref.6'}), (20, {'res': '$lat220.7'}), (22, {'func': '$18load_deref.6', 'args': ['$lat220.7'], 'res': '$22call_function.8'}), (24, {'value': '$22call_function.8'}), (26, {'res': '$26load_deref.9'}), (28, {'res': '$lng228.10'}), (30, {'func': '$26load_deref.9', 'args': ['$lng228.10'], 'res': '$30call_function.11'}), (32, {'value': '$30call_function.11'}), (34, {'res': '$lat234.12'}), (36, {'res': '$lat136.13'}), (38, {'lhs': '$lat234.12', 'rhs': '$lat136.13', 'res': '$38binary_subtract.14'}), (40, {'value': '$38binary_subtract.14'}), (42, {'res': '$lng242.15'}), (44, {'res': '$lng144.16'}), (46, {'lhs': '$lng242.15', 'rhs': '$lng144.16', 'res': '$46binary_subtract.17'}), (48, {'value': '$46binary_subtract.17'}), (50, {'res': '$50load_deref.18'}), (52, {'res': '$lat52.19'}), (54, {'res': '$const54.20'}), (56, {'lhs': '$lat52.19', 'rhs': '$const54.20', 'res': '$56binary_multiply.21'}), (58, {'func': '$50load_deref.18', 'args': ['$56binary_multiply.21'], 'res': '$58call_function.22'}), (60, {'res': '$const60.23'}), (62, {'lhs': '$58call_function.22', 'rhs': '$const60.23', 'res': '$62binary_power.24'}), (64, {'res': '$64load_deref.25'}), (66, {'res': '$lat166.26'}), (68, {'func': '$64load_deref.25', 'args': ['$lat166.26'], 'res': '$68call_function.27'}), (70, {'res': '$70load_deref.28'}), (72, {'res': '$lat272.29'}), (74, {'func': '$70load_deref.28', 'args': ['$lat272.29'], 'res': '$74call_function.30'}), (76, {'lhs': '$68call_function.27', 'rhs': '$74call_function.30', 'res': '$76binary_multiply.31'}), (78, {'res': '$78load_deref.32'}), (80, {'res': '$lng80.33'}), (82, {'res': '$const82.34'}), (84, {'lhs': '$lng80.33', 'rhs': '$const82.34', 'res': '$84binary_multiply.35'}), (86, {'func': '$78load_deref.32', 'args': ['$84binary_multiply.35'], 'res': '$86call_function.36'}), (88, {'res': '$const88.37'}), (90, {'lhs': '$86call_function.36', 'rhs': '$const88.37', 'res': '$90binary_power.38'}), (92, {'lhs': '$76binary_multiply.31', 'rhs': '$90binary_power.38', 'res': '$92binary_multiply.39'}), (94, {'lhs': '$62binary_power.24', 'rhs': '$92binary_multiply.39', 'res': '$94binary_add.40'}), (96, {'value': '$94binary_add.40'}), (98, {'res': '$const98.41'}), (100, {'res': '$100load_deref.42'}), (102, {'res': '$102load_deref.43'}), (104, {'res': '$d104.44'}), (106, {'func': '$102load_deref.43', 'args': ['$d104.44'], 'res': '$106call_function.45'}), (108, {'func': '$100load_deref.42', 'args': ['$106call_function.45'], 'res': '$108call_function.46'}), (110, {'lhs': '$const98.41', 'rhs': '$108call_function.46', 'res': '$110binary_multiply.47'}), (112, {'retval': '$110binary_multiply.47', 'castval': '$112return_value.48'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-14 20:01:05,468 - DEBUG - label 0:
    lat1 = arg(0, name=lat1)                 ['lat1']
    lng1 = arg(1, name=lng1)                 ['lng1']
    lat2 = arg(2, name=lat2)                 ['lat2']
    lng2 = arg(3, name=lng2)                 ['lng2']
    $2load_deref.0 = freevar(radians: <built-in function radians>) ['$2load_deref.0']
    lat1.1 = call $2load_deref.0(lat1, func=$2load_deref.0, args=[Var(lat1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', 'lat1', 'lat1.1']
    $10load_deref.3 = freevar(radians: <built-in function radians>) ['$10load_deref.3']
    lng1.1 = call $10load_deref.3(lng1, func=$10load_deref.3, args=[Var(lng1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'lng1', 'lng1.1']
    $18load_deref.6 = freevar(radians: <built-in function radians>) ['$18load_deref.6']
    lat2.1 = call $18load_deref.6(lat2, func=$18load_deref.6, args=[Var(lat2, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_deref.6', 'lat2', 'lat2.1']
    $26load_deref.9 = freevar(radians: <built-in function radians>) ['$26load_deref.9']
    lng2.1 = call $26load_deref.9(lng2, func=$26load_deref.9, args=[Var(lng2, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_deref.9', 'lng2', 'lng2.1']
    lat = lat2.1 - lat1.1                    ['lat', 'lat1.1', 'lat2.1']
    lng = lng2.1 - lng1.1                    ['lng', 'lng1.1', 'lng2.1']
    $50load_deref.18 = freevar(sin: <built-in function sin>) ['$50load_deref.18']
    $const54.20 = const(float, 0.5)          ['$const54.20']
    $56binary_multiply.21 = lat * $const54.20 ['$56binary_multiply.21', '$const54.20', 'lat']
    $58call_function.22 = call $50load_deref.18($56binary_multiply.21, func=$50load_deref.18, args=[Var($56binary_multiply.21, haversine.py:127)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_deref.18', '$56binary_multiply.21', '$58call_function.22']
    $const60.23 = const(int, 2)              ['$const60.23']
    $62binary_power.24 = $58call_function.22 ** $const60.23 ['$58call_function.22', '$62binary_power.24', '$const60.23']
    $64load_deref.25 = freevar(cos: <built-in function cos>) ['$64load_deref.25']
    $68call_function.27 = call $64load_deref.25(lat1.1, func=$64load_deref.25, args=[Var(lat1.1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_deref.25', '$68call_function.27', 'lat1.1']
    $70load_deref.28 = freevar(cos: <built-in function cos>) ['$70load_deref.28']
    $74call_function.30 = call $70load_deref.28(lat2.1, func=$70load_deref.28, args=[Var(lat2.1, haversine.py:123)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_deref.28', '$74call_function.30', 'lat2.1']
    $76binary_multiply.31 = $68call_function.27 * $74call_function.30 ['$68call_function.27', '$74call_function.30', '$76binary_multiply.31']
    $78load_deref.32 = freevar(sin: <built-in function sin>) ['$78load_deref.32']
    $const82.34 = const(float, 0.5)          ['$const82.34']
    $84binary_multiply.35 = lng * $const82.34 ['$84binary_multiply.35', '$const82.34', 'lng']
    $86call_function.36 = call $78load_deref.32($84binary_multiply.35, func=$78load_deref.32, args=[Var($84binary_multiply.35, haversine.py:128)], kws=(), vararg=None, varkwarg=None, target=None) ['$78load_deref.32', '$84binary_multiply.35', '$86call_function.36']
    $const88.37 = const(int, 2)              ['$const88.37']
    $90binary_power.38 = $86call_function.36 ** $const88.37 ['$86call_function.36', '$90binary_power.38', '$const88.37']
    $92binary_multiply.39 = $76binary_multiply.31 * $90binary_power.38 ['$76binary_multiply.31', '$90binary_power.38', '$92binary_multiply.39']
    d = $62binary_power.24 + $92binary_multiply.39 ['$62binary_power.24', '$92binary_multiply.39', 'd']
    $const98.41 = const(int, 2)              ['$const98.41']
    $100load_deref.42 = freevar(asin: <built-in function asin>) ['$100load_deref.42']
    $102load_deref.43 = freevar(sqrt: <built-in function sqrt>) ['$102load_deref.43']
    $106call_function.45 = call $102load_deref.43(d, func=$102load_deref.43, args=[Var(d, haversine.py:127)], kws=(), vararg=None, varkwarg=None, target=None) ['$102load_deref.43', '$106call_function.45', 'd']
    $108call_function.46 = call $100load_deref.42($106call_function.45, func=$100load_deref.42, args=[Var($106call_function.45, haversine.py:131)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_deref.42', '$106call_function.45', '$108call_function.46']
    $110binary_multiply.47 = $const98.41 * $108call_function.46 ['$108call_function.46', '$110binary_multiply.47', '$const98.41']
    $112return_value.48 = cast(value=$110binary_multiply.47) ['$110binary_multiply.47', '$112return_value.48']
    return $112return_value.48               ['$112return_value.48']

2024-03-14 20:01:05,495 - DEBUG - ==== SSA block analysis pass on 0
2024-03-14 20:01:05,495 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002127E516BB0>
2024-03-14 20:01:05,495 - DEBUG - on stmt: lat1 = arg(0, name=lat1)
2024-03-14 20:01:05,495 - DEBUG - on stmt: lng1 = arg(1, name=lng1)
2024-03-14 20:01:05,495 - DEBUG - on stmt: lat2 = arg(2, name=lat2)
2024-03-14 20:01:05,495 - DEBUG - on stmt: lng2 = arg(3, name=lng2)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $2load_deref.0 = freevar(radians: <built-in function radians>)
2024-03-14 20:01:05,495 - DEBUG - on stmt: lat1.1 = call $2load_deref.0(lat1, func=$2load_deref.0, args=[Var(lat1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $10load_deref.3 = freevar(radians: <built-in function radians>)
2024-03-14 20:01:05,495 - DEBUG - on stmt: lng1.1 = call $10load_deref.3(lng1, func=$10load_deref.3, args=[Var(lng1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $18load_deref.6 = freevar(radians: <built-in function radians>)
2024-03-14 20:01:05,495 - DEBUG - on stmt: lat2.1 = call $18load_deref.6(lat2, func=$18load_deref.6, args=[Var(lat2, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $26load_deref.9 = freevar(radians: <built-in function radians>)
2024-03-14 20:01:05,495 - DEBUG - on stmt: lng2.1 = call $26load_deref.9(lng2, func=$26load_deref.9, args=[Var(lng2, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,495 - DEBUG - on stmt: lat = lat2.1 - lat1.1
2024-03-14 20:01:05,495 - DEBUG - on stmt: lng = lng2.1 - lng1.1
2024-03-14 20:01:05,495 - DEBUG - on stmt: $50load_deref.18 = freevar(sin: <built-in function sin>)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $const54.20 = const(float, 0.5)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $56binary_multiply.21 = lat * $const54.20
2024-03-14 20:01:05,495 - DEBUG - on stmt: $58call_function.22 = call $50load_deref.18($56binary_multiply.21, func=$50load_deref.18, args=[Var($56binary_multiply.21, haversine.py:127)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $const60.23 = const(int, 2)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $62binary_power.24 = $58call_function.22 ** $const60.23
2024-03-14 20:01:05,495 - DEBUG - on stmt: $64load_deref.25 = freevar(cos: <built-in function cos>)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $68call_function.27 = call $64load_deref.25(lat1.1, func=$64load_deref.25, args=[Var(lat1.1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $70load_deref.28 = freevar(cos: <built-in function cos>)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $74call_function.30 = call $70load_deref.28(lat2.1, func=$70load_deref.28, args=[Var(lat2.1, haversine.py:123)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $76binary_multiply.31 = $68call_function.27 * $74call_function.30
2024-03-14 20:01:05,495 - DEBUG - on stmt: $78load_deref.32 = freevar(sin: <built-in function sin>)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $const82.34 = const(float, 0.5)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $84binary_multiply.35 = lng * $const82.34
2024-03-14 20:01:05,495 - DEBUG - on stmt: $86call_function.36 = call $78load_deref.32($84binary_multiply.35, func=$78load_deref.32, args=[Var($84binary_multiply.35, haversine.py:128)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $const88.37 = const(int, 2)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $90binary_power.38 = $86call_function.36 ** $const88.37
2024-03-14 20:01:05,495 - DEBUG - on stmt: $92binary_multiply.39 = $76binary_multiply.31 * $90binary_power.38
2024-03-14 20:01:05,495 - DEBUG - on stmt: d = $62binary_power.24 + $92binary_multiply.39
2024-03-14 20:01:05,495 - DEBUG - on stmt: $const98.41 = const(int, 2)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $100load_deref.42 = freevar(asin: <built-in function asin>)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $102load_deref.43 = freevar(sqrt: <built-in function sqrt>)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $106call_function.45 = call $102load_deref.43(d, func=$102load_deref.43, args=[Var(d, haversine.py:127)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $108call_function.46 = call $100load_deref.42($106call_function.45, func=$100load_deref.42, args=[Var($106call_function.45, haversine.py:131)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,495 - DEBUG - on stmt: $110binary_multiply.47 = $const98.41 * $108call_function.46
2024-03-14 20:01:05,495 - DEBUG - on stmt: $112return_value.48 = cast(value=$110binary_multiply.47)
2024-03-14 20:01:05,495 - DEBUG - on stmt: return $112return_value.48
2024-03-14 20:01:05,502 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100load_deref.42': [<numba.core.ir.Assign object at 0x000002127E550280>],
             '$102load_deref.43': [<numba.core.ir.Assign object at 0x000002127E550400>],
             '$106call_function.45': [<numba.core.ir.Assign object at 0x000002127E550700>],
             '$108call_function.46': [<numba.core.ir.Assign object at 0x000002127E550880>],
             '$10load_deref.3': [<numba.core.ir.Assign object at 0x000002127E528460>],
             '$110binary_multiply.47': [<numba.core.ir.Assign object at 0x000002127E5509D0>],
             '$112return_value.48': [<numba.core.ir.Assign object at 0x000002127E550B20>],
             '$18load_deref.6': [<numba.core.ir.Assign object at 0x000002127E5289A0>],
             '$26load_deref.9': [<numba.core.ir.Assign object at 0x000002127E528EE0>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x000002127E520040>],
             '$50load_deref.18': [<numba.core.ir.Assign object at 0x000002127E546E20>],
             '$56binary_multiply.21': [<numba.core.ir.Assign object at 0x000002127E54A2B0>],
             '$58call_function.22': [<numba.core.ir.Assign object at 0x000002127E54A460>],
             '$62binary_power.24': [<numba.core.ir.Assign object at 0x000002127E54A730>],
             '$64load_deref.25': [<numba.core.ir.Assign object at 0x000002127E54A880>],
             '$68call_function.27': [<numba.core.ir.Assign object at 0x000002127E54AB80>],
             '$70load_deref.28': [<numba.core.ir.Assign object at 0x000002127E54ACA0>],
             '$74call_function.30': [<numba.core.ir.Assign object at 0x000002127E54AFA0>],
             '$76binary_multiply.31': [<numba.core.ir.Assign object at 0x000002127E54D130>],
             '$78load_deref.32': [<numba.core.ir.Assign object at 0x000002127E54D280>],
             '$84binary_multiply.35': [<numba.core.ir.Assign object at 0x000002127E54D6D0>],
             '$86call_function.36': [<numba.core.ir.Assign object at 0x000002127E54D880>],
             '$90binary_power.38': [<numba.core.ir.Assign object at 0x000002127E54DB50>],
             '$92binary_multiply.39': [<numba.core.ir.Assign object at 0x000002127E54DCD0>],
             '$const54.20': [<numba.core.ir.Assign object at 0x000002127E54A100>],
             '$const60.23': [<numba.core.ir.Assign object at 0x000002127E54A580>],
             '$const82.34': [<numba.core.ir.Assign object at 0x000002127E54D520>],
             '$const88.37': [<numba.core.ir.Assign object at 0x000002127E54D9A0>],
             '$const98.41': [<numba.core.ir.Assign object at 0x000002127E550100>],
             'd': [<numba.core.ir.Assign object at 0x000002127E54DE50>],
             'lat': [<numba.core.ir.Assign object at 0x000002127E5466D0>],
             'lat1': [<numba.core.ir.Assign object at 0x000002127E520880>],
             'lat1.1': [<numba.core.ir.Assign object at 0x000002127E528220>],
             'lat2': [<numba.core.ir.Assign object at 0x000002127E520CA0>],
             'lat2.1': [<numba.core.ir.Assign object at 0x000002127E528CA0>],
             'lng': [<numba.core.ir.Assign object at 0x000002127E546BB0>],
             'lng1': [<numba.core.ir.Assign object at 0x000002127E520EE0>],
             'lng1.1': [<numba.core.ir.Assign object at 0x000002127E528760>],
             'lng2': [<numba.core.ir.Assign object at 0x000002127E520A60>],
             'lng2.1': [<numba.core.ir.Assign object at 0x000002127E546220>]})
2024-03-14 20:01:05,502 - DEBUG - SSA violators set()
2024-03-14 20:01:05,569 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=216)
           2	LOAD_DEREF(arg=1, lineno=216)
           4	LOAD_CONST(arg=1, lineno=216)
           6	CALL_FUNCTION(arg=1, lineno=216)
           8	STORE_FAST(arg=2, lineno=216)
          10	LOAD_DEREF(arg=1, lineno=217)
          12	LOAD_FAST(arg=0, lineno=217)
          14	CALL_FUNCTION(arg=1, lineno=217)
          16	STORE_FAST(arg=0, lineno=217)
          18	LOAD_FAST(arg=1, lineno=218)
          20	LOAD_CONST(arg=2, lineno=218)
          22	COMPARE_OP(arg=0, lineno=218)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=218)
          26	LOAD_CONST(arg=3, lineno=219)
          28	STORE_FAST(arg=3, lineno=219)
          30	LOAD_FAST(arg=1, lineno=220)
          32	UNARY_NEGATIVE(arg=None, lineno=220)
          34	STORE_FAST(arg=4, lineno=220)
          36	LOAD_FAST(arg=4, lineno=221)
          38	LOAD_CONST(arg=2, lineno=221)
          40	COMPARE_OP(arg=0, lineno=221)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=221)
          44	LOAD_GLOBAL(arg=0, lineno=222)
          46	RAISE_VARARGS(arg=1, lineno=222)
>         48	LOAD_DEREF(arg=0, lineno=223)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=223)
          52	LOAD_FAST(arg=0, lineno=224)
          54	LOAD_CONST(arg=2, lineno=224)
          56	COMPARE_OP(arg=2, lineno=224)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=224)
          60	LOAD_DEREF(arg=2, lineno=225)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=225)
          64	LOAD_DEREF(arg=2, lineno=226)
          66	RETURN_VALUE(arg=None, lineno=226)
>         68	LOAD_GLOBAL(arg=1, lineno=228)
          70	LOAD_CONST(arg=4, lineno=228)
          72	CALL_FUNCTION(arg=1, lineno=228)
          74	RAISE_VARARGS(arg=1, lineno=228)
>         76	LOAD_FAST(arg=0, lineno=229)
          78	LOAD_CONST(arg=1, lineno=229)
          80	COMPARE_OP(arg=3, lineno=229)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=229)
          84	LOAD_FAST(arg=0, lineno=229)
          86	LOAD_CONST(arg=5, lineno=229)
          88	COMPARE_OP(arg=3, lineno=229)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=229)
          92	LOAD_CONST(arg=2, lineno=230)
          94	RETURN_VALUE(arg=None, lineno=230)
          96	JUMP_FORWARD(arg=8, lineno=230)
>         98	LOAD_CONST(arg=6, lineno=232)
         100	STORE_FAST(arg=3, lineno=232)
         102	LOAD_FAST(arg=1, lineno=233)
         104	STORE_FAST(arg=4, lineno=233)
>        106	LOAD_FAST(arg=4, lineno=234)
         108	LOAD_CONST(arg=7, lineno=234)
         110	COMPARE_OP(arg=4, lineno=234)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=234)
         114	LOAD_GLOBAL(arg=2, lineno=236)
         116	LOAD_METHOD(arg=3, lineno=236)
         118	LOAD_FAST(arg=0, lineno=236)
         120	LOAD_GLOBAL(arg=4, lineno=236)
         122	LOAD_FAST(arg=1, lineno=236)
         124	CALL_FUNCTION(arg=1, lineno=236)
         126	CALL_METHOD(arg=2, lineno=236)
         128	RETURN_VALUE(arg=None, lineno=236)
>        130	LOAD_FAST(arg=4, lineno=237)
         132	LOAD_CONST(arg=2, lineno=237)
         134	COMPARE_OP(arg=3, lineno=237)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=237)
         138	LOAD_FAST(arg=4, lineno=238)
         140	LOAD_CONST(arg=1, lineno=238)
         142	BINARY_AND(arg=None, lineno=238)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=238)
         146	LOAD_FAST(arg=2, lineno=239)
         148	LOAD_FAST(arg=0, lineno=239)
         150	INPLACE_MULTIPLY(arg=None, lineno=239)
         152	STORE_FAST(arg=2, lineno=239)
>        154	LOAD_FAST(arg=4, lineno=240)
         156	LOAD_CONST(arg=1, lineno=240)
         158	INPLACE_RSHIFT(arg=None, lineno=240)
         160	STORE_FAST(arg=4, lineno=240)
         162	LOAD_FAST(arg=0, lineno=241)
         164	LOAD_FAST(arg=0, lineno=241)
         166	INPLACE_MULTIPLY(arg=None, lineno=241)
         168	STORE_FAST(arg=0, lineno=241)
         170	JUMP_ABSOLUTE(arg=130, lineno=241)
>        172	LOAD_FAST(arg=3, lineno=243)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=243)
         176	LOAD_CONST(arg=8, lineno=243)
         178	LOAD_FAST(arg=2, lineno=243)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=243)
         182	RETURN_VALUE(arg=None, lineno=243)
>        184	LOAD_FAST(arg=2, lineno=243)
         186	RETURN_VALUE(arg=None, lineno=243)
2024-03-14 20:01:05,569 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-03-14 20:01:05,569 - DEBUG - stack: []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=216)
2024-03-14 20:01:05,569 - DEBUG - stack []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=216)
2024-03-14 20:01:05,569 - DEBUG - stack []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=216)
2024-03-14 20:01:05,569 - DEBUG - stack ['$2load_deref.0']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=216)
2024-03-14 20:01:05,569 - DEBUG - stack ['$2load_deref.0', '$const4.1']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=2, lineno=216)
2024-03-14 20:01:05,569 - DEBUG - stack ['$6call_function.2']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=217)
2024-03-14 20:01:05,569 - DEBUG - stack []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=217)
2024-03-14 20:01:05,569 - DEBUG - stack ['$10load_deref.3']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=217)
2024-03-14 20:01:05,569 - DEBUG - stack ['$10load_deref.3', '$a12.4']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=0, lineno=217)
2024-03-14 20:01:05,569 - DEBUG - stack ['$14call_function.5']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=218)
2024-03-14 20:01:05,569 - DEBUG - stack []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=218)
2024-03-14 20:01:05,569 - DEBUG - stack ['$b18.6']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=218)
2024-03-14 20:01:05,569 - DEBUG - stack ['$b18.6', '$const20.7']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=218)
2024-03-14 20:01:05,569 - DEBUG - stack ['$22compare_op.8']
2024-03-14 20:01:05,569 - DEBUG - end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
2024-03-14 20:01:05,569 - DEBUG - pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
2024-03-14 20:01:05,569 - DEBUG - stack: []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=219)
2024-03-14 20:01:05,569 - DEBUG - stack []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=3, lineno=219)
2024-03-14 20:01:05,569 - DEBUG - stack ['$const26.0']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=220)
2024-03-14 20:01:05,569 - DEBUG - stack []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2024-03-14 20:01:05,569 - DEBUG - stack ['$b30.1']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=34, inst=STORE_FAST(arg=4, lineno=220)
2024-03-14 20:01:05,569 - DEBUG - stack ['$32unary_negative.2']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=221)
2024-03-14 20:01:05,569 - DEBUG - stack []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=221)
2024-03-14 20:01:05,569 - DEBUG - stack ['$exp36.3']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=221)
2024-03-14 20:01:05,569 - DEBUG - stack ['$exp36.3', '$const38.4']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=221)
2024-03-14 20:01:05,569 - DEBUG - stack ['$40compare_op.5']
2024-03-14 20:01:05,569 - DEBUG - end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
2024-03-14 20:01:05,569 - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2024-03-14 20:01:05,569 - DEBUG - stack: []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=232)
2024-03-14 20:01:05,569 - DEBUG - stack []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=3, lineno=232)
2024-03-14 20:01:05,569 - DEBUG - stack ['$const98.0']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=233)
2024-03-14 20:01:05,569 - DEBUG - stack []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=104, inst=STORE_FAST(arg=4, lineno=233)
2024-03-14 20:01:05,569 - DEBUG - stack ['$b102.1']
2024-03-14 20:01:05,569 - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
2024-03-14 20:01:05,569 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-14 20:01:05,569 - DEBUG - stack: []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=222)
2024-03-14 20:01:05,569 - DEBUG - stack []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=222)
2024-03-14 20:01:05,569 - DEBUG - stack ['$44load_global.0']
2024-03-14 20:01:05,569 - DEBUG - end state. edges=[]
2024-03-14 20:01:05,569 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-14 20:01:05,569 - DEBUG - stack: []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=223)
2024-03-14 20:01:05,569 - DEBUG - stack []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=223)
2024-03-14 20:01:05,569 - DEBUG - stack ['$48load_deref.0']
2024-03-14 20:01:05,569 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
2024-03-14 20:01:05,569 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-14 20:01:05,569 - DEBUG - stack: []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=234)
2024-03-14 20:01:05,569 - DEBUG - stack []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=234)
2024-03-14 20:01:05,569 - DEBUG - stack ['$exp106.0']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=234)
2024-03-14 20:01:05,569 - DEBUG - stack ['$exp106.0', '$const108.1']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=234)
2024-03-14 20:01:05,569 - DEBUG - stack ['$110compare_op.2']
2024-03-14 20:01:05,569 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
2024-03-14 20:01:05,569 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-14 20:01:05,569 - DEBUG - stack: []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=224)
2024-03-14 20:01:05,569 - DEBUG - stack []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=224)
2024-03-14 20:01:05,569 - DEBUG - stack ['$a52.0']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=224)
2024-03-14 20:01:05,569 - DEBUG - stack ['$a52.0', '$const54.1']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=224)
2024-03-14 20:01:05,569 - DEBUG - stack ['$56compare_op.2']
2024-03-14 20:01:05,569 - DEBUG - end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
2024-03-14 20:01:05,569 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2024-03-14 20:01:05,569 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2024-03-14 20:01:05,569 - DEBUG - stack: []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=236)
2024-03-14 20:01:05,569 - DEBUG - stack []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=236)
2024-03-14 20:01:05,569 - DEBUG - stack ['$114load_global.0']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=236)
2024-03-14 20:01:05,569 - DEBUG - stack ['$116load_method.1']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=236)
2024-03-14 20:01:05,569 - DEBUG - stack ['$116load_method.1', '$a118.2']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=236)
2024-03-14 20:01:05,569 - DEBUG - stack ['$116load_method.1', '$a118.2', '$120load_global.3']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=236)
2024-03-14 20:01:05,569 - DEBUG - stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=236)
2024-03-14 20:01:05,569 - DEBUG - stack ['$116load_method.1', '$a118.2', '$124call_function.5']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=236)
2024-03-14 20:01:05,569 - DEBUG - stack ['$126call_method.6']
2024-03-14 20:01:05,569 - DEBUG - end state. edges=[]
2024-03-14 20:01:05,569 - DEBUG - pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2024-03-14 20:01:05,569 - DEBUG - stack: []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=237)
2024-03-14 20:01:05,569 - DEBUG - stack []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=237)
2024-03-14 20:01:05,569 - DEBUG - stack ['$exp130.0']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=237)
2024-03-14 20:01:05,569 - DEBUG - stack ['$exp130.0', '$const132.1']
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=237)
2024-03-14 20:01:05,569 - DEBUG - stack ['$134compare_op.2']
2024-03-14 20:01:05,569 - DEBUG - end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
2024-03-14 20:01:05,569 - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
2024-03-14 20:01:05,569 - DEBUG - stack: []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=225)
2024-03-14 20:01:05,569 - DEBUG - stack []
2024-03-14 20:01:05,569 - DEBUG - dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=225)
2024-03-14 20:01:05,569 - DEBUG - stack ['$60load_deref.0']
2024-03-14 20:01:05,569 - DEBUG - end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
2024-03-14 20:01:05,578 - DEBUG - pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
2024-03-14 20:01:05,578 - DEBUG - stack: []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=229)
2024-03-14 20:01:05,578 - DEBUG - stack []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=229)
2024-03-14 20:01:05,578 - DEBUG - stack ['$a76.0']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=229)
2024-03-14 20:01:05,578 - DEBUG - stack ['$a76.0', '$const78.1']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=229)
2024-03-14 20:01:05,578 - DEBUG - stack ['$80compare_op.2']
2024-03-14 20:01:05,578 - DEBUG - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
2024-03-14 20:01:05,578 - DEBUG - pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-14 20:01:05,578 - DEBUG - stack: []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=238)
2024-03-14 20:01:05,578 - DEBUG - stack []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=238)
2024-03-14 20:01:05,578 - DEBUG - stack ['$exp138.0']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=142, inst=BINARY_AND(arg=None, lineno=238)
2024-03-14 20:01:05,578 - DEBUG - stack ['$exp138.0', '$const140.1']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=238)
2024-03-14 20:01:05,578 - DEBUG - stack ['$142binary_and.2']
2024-03-14 20:01:05,578 - DEBUG - end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2024-03-14 20:01:05,578 - DEBUG - pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-03-14 20:01:05,578 - DEBUG - stack: []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=243)
2024-03-14 20:01:05,578 - DEBUG - stack []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=243)
2024-03-14 20:01:05,578 - DEBUG - stack ['$invert172.0']
2024-03-14 20:01:05,578 - DEBUG - end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
2024-03-14 20:01:05,578 - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
2024-03-14 20:01:05,578 - DEBUG - stack: []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=226)
2024-03-14 20:01:05,578 - DEBUG - stack []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=226)
2024-03-14 20:01:05,578 - DEBUG - stack ['$64load_deref.0']
2024-03-14 20:01:05,578 - DEBUG - end state. edges=[]
2024-03-14 20:01:05,578 - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
2024-03-14 20:01:05,578 - DEBUG - stack: []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=228)
2024-03-14 20:01:05,578 - DEBUG - stack []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=228)
2024-03-14 20:01:05,578 - DEBUG - stack ['$68load_global.0']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=228)
2024-03-14 20:01:05,578 - DEBUG - stack ['$68load_global.0', '$const70.1']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=228)
2024-03-14 20:01:05,578 - DEBUG - stack ['$72call_function.2']
2024-03-14 20:01:05,578 - DEBUG - end state. edges=[]
2024-03-14 20:01:05,578 - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
2024-03-14 20:01:05,578 - DEBUG - stack: []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=229)
2024-03-14 20:01:05,578 - DEBUG - stack []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=229)
2024-03-14 20:01:05,578 - DEBUG - stack ['$a84.0']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=229)
2024-03-14 20:01:05,578 - DEBUG - stack ['$a84.0', '$const86.1']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=229)
2024-03-14 20:01:05,578 - DEBUG - stack ['$88compare_op.2']
2024-03-14 20:01:05,578 - DEBUG - end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
2024-03-14 20:01:05,578 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-14 20:01:05,578 - DEBUG - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-14 20:01:05,578 - DEBUG - stack: []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=239)
2024-03-14 20:01:05,578 - DEBUG - stack []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=239)
2024-03-14 20:01:05,578 - DEBUG - stack ['$r146.0']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=239)
2024-03-14 20:01:05,578 - DEBUG - stack ['$r146.0', '$a148.1']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=152, inst=STORE_FAST(arg=2, lineno=239)
2024-03-14 20:01:05,578 - DEBUG - stack ['$150inplace_multiply.2']
2024-03-14 20:01:05,578 - DEBUG - end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
2024-03-14 20:01:05,578 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-03-14 20:01:05,578 - DEBUG - stack: []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=240)
2024-03-14 20:01:05,578 - DEBUG - stack []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=240)
2024-03-14 20:01:05,578 - DEBUG - stack ['$exp154.0']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=240)
2024-03-14 20:01:05,578 - DEBUG - stack ['$exp154.0', '$const156.1']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=160, inst=STORE_FAST(arg=4, lineno=240)
2024-03-14 20:01:05,578 - DEBUG - stack ['$158inplace_rshift.2']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=241)
2024-03-14 20:01:05,578 - DEBUG - stack []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=241)
2024-03-14 20:01:05,578 - DEBUG - stack ['$a162.3']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=241)
2024-03-14 20:01:05,578 - DEBUG - stack ['$a162.3', '$a164.4']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=168, inst=STORE_FAST(arg=0, lineno=241)
2024-03-14 20:01:05,578 - DEBUG - stack ['$166inplace_multiply.5']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=241)
2024-03-14 20:01:05,578 - DEBUG - stack []
2024-03-14 20:01:05,578 - DEBUG - end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
2024-03-14 20:01:05,578 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-14 20:01:05,578 - DEBUG - stack: []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=243)
2024-03-14 20:01:05,578 - DEBUG - stack []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=243)
2024-03-14 20:01:05,578 - DEBUG - stack ['$const176.0']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=243)
2024-03-14 20:01:05,578 - DEBUG - stack ['$const176.0', '$r178.1']
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=243)
2024-03-14 20:01:05,578 - DEBUG - stack ['$180binary_true_divide.2']
2024-03-14 20:01:05,578 - DEBUG - end state. edges=[]
2024-03-14 20:01:05,578 - DEBUG - pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-14 20:01:05,578 - DEBUG - stack: []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=243)
2024-03-14 20:01:05,578 - DEBUG - stack []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=243)
2024-03-14 20:01:05,578 - DEBUG - stack ['$r184.0']
2024-03-14 20:01:05,578 - DEBUG - end state. edges=[]
2024-03-14 20:01:05,578 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-14 20:01:05,578 - DEBUG - stack: []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=230)
2024-03-14 20:01:05,578 - DEBUG - stack []
2024-03-14 20:01:05,578 - DEBUG - dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=230)
2024-03-14 20:01:05,578 - DEBUG - stack ['$const92.0']
2024-03-14 20:01:05,578 - DEBUG - end state. edges=[]
2024-03-14 20:01:05,578 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-14 20:01:05,578 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-14 20:01:05,578 - DEBUG - pending: deque([State(pc_initial=130 nstack_initial=0)])
2024-03-14 20:01:05,578 - DEBUG - -------------------------Prune PHIs-------------------------
2024-03-14 20:01:05,578 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
2024-03-14 20:01:05,578 - DEBUG - defmap: {}
2024-03-14 20:01:05,585 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-03-14 20:01:05,585 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-03-14 20:01:05,585 - DEBUG - keep phismap: {}
2024-03-14 20:01:05,585 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-03-14 20:01:05,585 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-14 20:01:05,585 - DEBUG - block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-14 20:01:05,585 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' (built-in)>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

2024-03-14 20:01:05,635 - DEBUG - ==== SSA block analysis pass on 0
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002127E609760>
2024-03-14 20:01:05,635 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:01:05,635 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:01:05,635 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:01:05,635 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:01:05,635 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block analysis pass on 26
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002127E609760>
2024-03-14 20:01:05,635 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:01:05,635 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:01:05,635 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block analysis pass on 44
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002127E609760>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block analysis pass on 48
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002127E609760>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:01:05,635 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block analysis pass on 98
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002127E609760>
2024-03-14 20:01:05,635 - DEBUG - on stmt: invert = const(bool, False)
2024-03-14 20:01:05,635 - DEBUG - on stmt: exp = b
2024-03-14 20:01:05,635 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block analysis pass on 106
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002127E609760>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:01:05,635 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block analysis pass on 114
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002127E609760>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:01:05,635 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block analysis pass on 130
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002127E609760>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:01:05,635 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block analysis pass on 138
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002127E609760>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:01:05,635 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block analysis pass on 146
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002127E609760>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,635 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-14 20:01:05,635 - DEBUG - on stmt: jump 154
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block analysis pass on 154
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002127E609760>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,635 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-14 20:01:05,635 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,635 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-14 20:01:05,635 - DEBUG - on stmt: jump 130
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block analysis pass on 172
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002127E609760>
2024-03-14 20:01:05,635 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block analysis pass on 176
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002127E609760>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-14 20:01:05,635 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:01:05,635 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block analysis pass on 184
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002127E609760>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-14 20:01:05,635 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:01:05,635 - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x000002127E5E38B0>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x000002127E5FEB80>],
             '$112pred': [<numba.core.ir.Assign object at 0x000002127E5FEDF0>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x000002127E600070>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x000002127E6001F0>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x000002127E600490>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x000002127E600790>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x000002127E600940>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x000002127E600A30>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x000002127E600EE0>],
             '$136pred': [<numba.core.ir.Assign object at 0x000002127E604190>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x000002127E6046A0>],
             '$144pred': [<numba.core.ir.Assign object at 0x000002127E604910>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x000002127E604DC0>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x000002127E607340>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x000002127E6077C0>],
             '$174pred': [<numba.core.ir.Assign object at 0x000002127E607C70>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x000002127E6091C0>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x000002127E609310>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x000002127E609670>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x000002127E5F7100>],
             '$24pred': [<numba.core.ir.Assign object at 0x000002127E5F7370>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x000002127E5E3520>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x000002127E5F7DC0>],
             '$42pred': [<numba.core.ir.Assign object at 0x000002127E5F8070>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x000002127E5F8190>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x000002127E5F8490>],
             '$50pred': [<numba.core.ir.Assign object at 0x000002127E5F8730>],
             '$const108.1': [<numba.core.ir.Assign object at 0x000002127E5FE9D0>],
             '$const132.1': [<numba.core.ir.Assign object at 0x000002127E600D30>],
             '$const140.1': [<numba.core.ir.Assign object at 0x000002127E6044F0>],
             '$const156.1': [<numba.core.ir.Assign object at 0x000002127E607190>],
             '$const176.0': [<numba.core.ir.Assign object at 0x000002127E607EB0>],
             '$const20.7': [<numba.core.ir.Assign object at 0x000002127E5E3F10>],
             '$const38.4': [<numba.core.ir.Assign object at 0x000002127E5F7C10>],
             '$const4.1': [<numba.core.ir.Assign object at 0x000002127E5E3370>],
             'a': [<numba.core.ir.Assign object at 0x000002127E5CC490>],
             'a.1': [<numba.core.ir.Assign object at 0x000002127E5E3BB0>,
                     <numba.core.ir.Assign object at 0x000002127E607880>],
             'b': [<numba.core.ir.Assign object at 0x000002127E5E3100>],
             'bool112': [<numba.core.ir.Assign object at 0x000002127E5FECD0>],
             'bool136': [<numba.core.ir.Assign object at 0x000002127E604070>],
             'bool144': [<numba.core.ir.Assign object at 0x000002127E6047F0>],
             'bool174': [<numba.core.ir.Assign object at 0x000002127E607B50>],
             'bool24': [<numba.core.ir.Assign object at 0x000002127E5F7250>],
             'bool42': [<numba.core.ir.Assign object at 0x000002127E5F7F10>],
             'bool50': [<numba.core.ir.Assign object at 0x000002127E5F8610>],
             'exp': [<numba.core.ir.Assign object at 0x000002127E5F7850>,
                     <numba.core.ir.Assign object at 0x000002127E5FE760>,
                     <numba.core.ir.Assign object at 0x000002127E607400>],
             'invert': [<numba.core.ir.Assign object at 0x000002127E5F7490>,
                        <numba.core.ir.Assign object at 0x000002127E5FE490>],
             'r': [<numba.core.ir.Assign object at 0x000002127E5E3190>,
                   <numba.core.ir.Assign object at 0x000002127E604E80>]})
2024-03-14 20:01:05,635 - DEBUG - SSA violators {'r', 'invert', 'a.1', 'exp'}
2024-03-14 20:01:05,635 - DEBUG - Fix SSA violator on var r
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B730>
2024-03-14 20:01:05,635 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:01:05,635 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:01:05,635 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - first assign: r
2024-03-14 20:01:05,635 - DEBUG - replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:01:05,635 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:01:05,635 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B730>
2024-03-14 20:01:05,635 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:01:05,635 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:01:05,635 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B730>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B730>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:01:05,635 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B730>
2024-03-14 20:01:05,635 - DEBUG - on stmt: invert = const(bool, False)
2024-03-14 20:01:05,635 - DEBUG - on stmt: exp = b
2024-03-14 20:01:05,635 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B730>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:01:05,635 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B730>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:01:05,635 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B730>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:01:05,635 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B730>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:01:05,635 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B730>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,635 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-14 20:01:05,635 - DEBUG - replaced with: r.1 = $150inplace_multiply.2
2024-03-14 20:01:05,635 - DEBUG - on stmt: jump 154
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B730>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,635 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-14 20:01:05,635 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,635 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-14 20:01:05,635 - DEBUG - on stmt: jump 130
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B730>
2024-03-14 20:01:05,635 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B730>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-14 20:01:05,635 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:01:05,635 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B730>
2024-03-14 20:01:05,635 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-14 20:01:05,635 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:01:05,635 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002127E58BDC0>],
             146: [<numba.core.ir.Assign object at 0x000002127E5CC9A0>]})
2024-03-14 20:01:05,635 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-14 20:01:05,635 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E58B730>
2024-03-14 20:01:05,635 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:01:05,635 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:01:05,635 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,635 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:01:05,645 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:01:05,645 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,645 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:01:05,645 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-14 20:01:05,645 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E58B730>
2024-03-14 20:01:05,645 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:01:05,645 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:01:05,645 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,645 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:01:05,645 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-14 20:01:05,645 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E58B730>
2024-03-14 20:01:05,645 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:01:05,645 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:01:05,645 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-14 20:01:05,645 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E58B730>
2024-03-14 20:01:05,645 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:01:05,645 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,645 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,645 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-14 20:01:05,645 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E58B730>
2024-03-14 20:01:05,645 - DEBUG - on stmt: invert = const(bool, False)
2024-03-14 20:01:05,645 - DEBUG - on stmt: exp = b
2024-03-14 20:01:05,645 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,645 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-14 20:01:05,645 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E58B730>
2024-03-14 20:01:05,645 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:01:05,645 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,645 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:01:05,645 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-14 20:01:05,645 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E58B730>
2024-03-14 20:01:05,645 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:01:05,645 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:01:05,645 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-14 20:01:05,645 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E58B730>
2024-03-14 20:01:05,645 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:01:05,645 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,645 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:01:05,645 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-14 20:01:05,645 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E58B730>
2024-03-14 20:01:05,645 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:01:05,645 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,645 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:01:05,645 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-14 20:01:05,645 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E58B730>
2024-03-14 20:01:05,645 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,645 - DEBUG - find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,645 - DEBUG - find_def_from_top label 146
2024-03-14 20:01:05,645 - DEBUG - idom 138 from label 146
2024-03-14 20:01:05,645 - DEBUG - find_def_from_bottom label 138
2024-03-14 20:01:05,645 - DEBUG - find_def_from_top label 138
2024-03-14 20:01:05,645 - DEBUG - idom 130 from label 138
2024-03-14 20:01:05,645 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:01:05,645 - DEBUG - find_def_from_top label 130
2024-03-14 20:01:05,645 - DEBUG - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
2024-03-14 20:01:05,645 - DEBUG - find_def_from_bottom label 106
2024-03-14 20:01:05,645 - DEBUG - find_def_from_top label 106
2024-03-14 20:01:05,645 - DEBUG - idom 0 from label 106
2024-03-14 20:01:05,645 - DEBUG - find_def_from_bottom label 0
2024-03-14 20:01:05,645 - DEBUG - incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,645 - DEBUG - find_def_from_bottom label 154
2024-03-14 20:01:05,645 - DEBUG - find_def_from_top label 154
2024-03-14 20:01:05,645 - DEBUG - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
2024-03-14 20:01:05,645 - DEBUG - find_def_from_bottom label 138
2024-03-14 20:01:05,645 - DEBUG - find_def_from_top label 138
2024-03-14 20:01:05,645 - DEBUG - idom 130 from label 138
2024-03-14 20:01:05,645 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:01:05,645 - DEBUG - incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:216)], incoming_blocks=[106])
2024-03-14 20:01:05,645 - DEBUG - find_def_from_bottom label 146
2024-03-14 20:01:05,645 - DEBUG - incoming_def r.1 = $150inplace_multiply.2
2024-03-14 20:01:05,645 - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-14 20:01:05,645 - DEBUG - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,645 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-14 20:01:05,645 - DEBUG - on stmt: jump 154
2024-03-14 20:01:05,645 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-14 20:01:05,645 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E58B730>
2024-03-14 20:01:05,645 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,645 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-14 20:01:05,645 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,645 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-14 20:01:05,645 - DEBUG - on stmt: jump 130
2024-03-14 20:01:05,645 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-14 20:01:05,645 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E58B730>
2024-03-14 20:01:05,645 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,645 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:01:05,645 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-14 20:01:05,645 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E58B730>
2024-03-14 20:01:05,645 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-14 20:01:05,645 - DEBUG - find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
2024-03-14 20:01:05,645 - DEBUG - find_def_from_top label 176
2024-03-14 20:01:05,645 - DEBUG - idom 172 from label 176
2024-03-14 20:01:05,645 - DEBUG - find_def_from_bottom label 172
2024-03-14 20:01:05,645 - DEBUG - find_def_from_top label 172
2024-03-14 20:01:05,645 - DEBUG - idom 130 from label 172
2024-03-14 20:01:05,645 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:01:05,645 - DEBUG - replaced with: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-14 20:01:05,645 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:01:05,645 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:01:05,645 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-14 20:01:05,645 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E58B730>
2024-03-14 20:01:05,645 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-14 20:01:05,645 - DEBUG - find_def var='r' stmt=$186return_value.1 = cast(value=r)
2024-03-14 20:01:05,645 - DEBUG - find_def_from_top label 184
2024-03-14 20:01:05,645 - DEBUG - idom 172 from label 184
2024-03-14 20:01:05,645 - DEBUG - find_def_from_bottom label 172
2024-03-14 20:01:05,645 - DEBUG - find_def_from_top label 172
2024-03-14 20:01:05,645 - DEBUG - idom 130 from label 172
2024-03-14 20:01:05,645 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:01:05,645 - DEBUG - replaced with: $186return_value.1 = cast(value=r.2)
2024-03-14 20:01:05,645 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:01:05,645 - DEBUG - Fix SSA violator on var invert
2024-03-14 20:01:05,645 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-14 20:01:05,645 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58BB20>
2024-03-14 20:01:05,645 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:01:05,645 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:01:05,645 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:01:05,645 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:01:05,645 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:01:05,652 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58BB20>
2024-03-14 20:01:05,652 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:01:05,652 - DEBUG - first assign: invert
2024-03-14 20:01:05,652 - DEBUG - replaced with: invert = const(bool, True)
2024-03-14 20:01:05,652 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:01:05,652 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58BB20>
2024-03-14 20:01:05,652 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58BB20>
2024-03-14 20:01:05,652 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:01:05,652 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58BB20>
2024-03-14 20:01:05,652 - DEBUG - on stmt: invert = const(bool, False)
2024-03-14 20:01:05,652 - DEBUG - replaced with: invert.1 = const(bool, False)
2024-03-14 20:01:05,652 - DEBUG - on stmt: exp = b
2024-03-14 20:01:05,652 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58BB20>
2024-03-14 20:01:05,652 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:01:05,652 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58BB20>
2024-03-14 20:01:05,652 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:01:05,652 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58BB20>
2024-03-14 20:01:05,652 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
2024-03-14 20:01:05,652 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:01:05,652 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58BB20>
2024-03-14 20:01:05,652 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:01:05,652 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58BB20>
2024-03-14 20:01:05,652 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,652 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-14 20:01:05,652 - DEBUG - on stmt: jump 154
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58BB20>
2024-03-14 20:01:05,652 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-14 20:01:05,652 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,652 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-14 20:01:05,652 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,652 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-14 20:01:05,652 - DEBUG - on stmt: jump 130
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58BB20>
2024-03-14 20:01:05,652 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58BB20>
2024-03-14 20:01:05,652 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-14 20:01:05,652 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:01:05,652 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58BB20>
2024-03-14 20:01:05,652 - DEBUG - on stmt: $186return_value.1 = cast(value=r.2)
2024-03-14 20:01:05,652 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:01:05,652 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x000002127E58B6D0>],
             98: [<numba.core.ir.Assign object at 0x000002127E58BCA0>]})
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,652 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:01:05,652 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:01:05,652 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:01:05,652 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:01:05,652 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,652 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:01:05,652 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:01:05,652 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,652 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,652 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:01:05,652 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,652 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-03-14 20:01:05,652 - DEBUG - on stmt: exp = b
2024-03-14 20:01:05,652 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,652 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:01:05,652 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,652 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:01:05,652 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,652 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
2024-03-14 20:01:05,652 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:01:05,652 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,652 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:01:05,652 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,652 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,652 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-14 20:01:05,652 - DEBUG - on stmt: jump 154
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,652 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-14 20:01:05,652 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,652 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-14 20:01:05,652 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,652 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-14 20:01:05,652 - DEBUG - on stmt: jump 130
2024-03-14 20:01:05,652 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-14 20:01:05,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,652 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,652 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,652 - DEBUG - find_def_from_top label 172
2024-03-14 20:01:05,652 - DEBUG - idom 130 from label 172
2024-03-14 20:01:05,652 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:01:05,652 - DEBUG - find_def_from_top label 130
2024-03-14 20:01:05,652 - DEBUG - idom 106 from label 130
2024-03-14 20:01:05,652 - DEBUG - find_def_from_bottom label 106
2024-03-14 20:01:05,652 - DEBUG - find_def_from_top label 106
2024-03-14 20:01:05,652 - DEBUG - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
2024-03-14 20:01:05,652 - DEBUG - find_def_from_bottom label 48
2024-03-14 20:01:05,652 - DEBUG - find_def_from_top label 48
2024-03-14 20:01:05,652 - DEBUG - idom 26 from label 48
2024-03-14 20:01:05,652 - DEBUG - find_def_from_bottom label 26
2024-03-14 20:01:05,652 - DEBUG - incoming_def invert = const(bool, True)
2024-03-14 20:01:05,652 - DEBUG - find_def_from_bottom label 98
2024-03-14 20:01:05,662 - DEBUG - incoming_def invert.1 = const(bool, False)
2024-03-14 20:01:05,662 - DEBUG - replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,662 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-14 20:01:05,662 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:01:05,662 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,662 - DEBUG - on stmt: $186return_value.1 = cast(value=r.2)
2024-03-14 20:01:05,662 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:01:05,662 - DEBUG - Fix SSA violator on var a.1
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E5CC190>
2024-03-14 20:01:05,662 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:01:05,662 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:01:05,662 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:01:05,662 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - first assign: a.1
2024-03-14 20:01:05,662 - DEBUG - replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:01:05,662 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E5CC190>
2024-03-14 20:01:05,662 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:01:05,662 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:01:05,662 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E5CC190>
2024-03-14 20:01:05,662 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E5CC190>
2024-03-14 20:01:05,662 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:01:05,662 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E5CC190>
2024-03-14 20:01:05,662 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-03-14 20:01:05,662 - DEBUG - on stmt: exp = b
2024-03-14 20:01:05,662 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E5CC190>
2024-03-14 20:01:05,662 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[48, 98])
2024-03-14 20:01:05,662 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:01:05,662 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E5CC190>
2024-03-14 20:01:05,662 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:01:05,662 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E5CC190>
2024-03-14 20:01:05,662 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
2024-03-14 20:01:05,662 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:01:05,662 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E5CC190>
2024-03-14 20:01:05,662 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:01:05,662 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E5CC190>
2024-03-14 20:01:05,662 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,662 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-14 20:01:05,662 - DEBUG - on stmt: jump 154
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E5CC190>
2024-03-14 20:01:05,662 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-14 20:01:05,662 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,662 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-14 20:01:05,662 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,662 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-14 20:01:05,662 - DEBUG - replaced with: a.1.1 = $166inplace_multiply.5
2024-03-14 20:01:05,662 - DEBUG - on stmt: jump 130
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E5CC190>
2024-03-14 20:01:05,662 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E5CC190>
2024-03-14 20:01:05,662 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-14 20:01:05,662 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:01:05,662 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E5CC190>
2024-03-14 20:01:05,662 - DEBUG - on stmt: $186return_value.1 = cast(value=r.2)
2024-03-14 20:01:05,662 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:01:05,662 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002127E5CCB50>],
             154: [<numba.core.ir.Assign object at 0x000002127E648130>]})
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,662 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:01:05,662 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:01:05,662 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:01:05,662 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:01:05,662 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,662 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:01:05,662 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:01:05,662 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,662 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,662 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:01:05,662 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,662 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-03-14 20:01:05,662 - DEBUG - on stmt: exp = b
2024-03-14 20:01:05,662 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,662 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[48, 98])
2024-03-14 20:01:05,662 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:01:05,662 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,662 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - find_def_from_top label 114
2024-03-14 20:01:05,662 - DEBUG - idom 106 from label 114
2024-03-14 20:01:05,662 - DEBUG - find_def_from_bottom label 106
2024-03-14 20:01:05,662 - DEBUG - find_def_from_top label 106
2024-03-14 20:01:05,662 - DEBUG - idom 0 from label 106
2024-03-14 20:01:05,662 - DEBUG - find_def_from_bottom label 0
2024-03-14 20:01:05,662 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:01:05,662 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,662 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
2024-03-14 20:01:05,662 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:01:05,662 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,662 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:01:05,662 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,662 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,662 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:01:05,662 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-14 20:01:05,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,662 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,662 - DEBUG - find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,662 - DEBUG - find_def_from_top label 146
2024-03-14 20:01:05,662 - DEBUG - idom 138 from label 146
2024-03-14 20:01:05,662 - DEBUG - find_def_from_bottom label 138
2024-03-14 20:01:05,671 - DEBUG - find_def_from_top label 138
2024-03-14 20:01:05,671 - DEBUG - idom 130 from label 138
2024-03-14 20:01:05,671 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:01:05,671 - DEBUG - find_def_from_top label 130
2024-03-14 20:01:05,671 - DEBUG - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
2024-03-14 20:01:05,671 - DEBUG - find_def_from_bottom label 106
2024-03-14 20:01:05,671 - DEBUG - find_def_from_top label 106
2024-03-14 20:01:05,671 - DEBUG - idom 0 from label 106
2024-03-14 20:01:05,671 - DEBUG - find_def_from_bottom label 0
2024-03-14 20:01:05,671 - DEBUG - incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,671 - DEBUG - find_def_from_bottom label 154
2024-03-14 20:01:05,671 - DEBUG - incoming_def a.1.1 = $166inplace_multiply.5
2024-03-14 20:01:05,671 - DEBUG - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,671 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-14 20:01:05,671 - DEBUG - on stmt: jump 154
2024-03-14 20:01:05,671 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-14 20:01:05,671 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,671 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-14 20:01:05,671 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:01:05,671 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,671 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-14 20:01:05,671 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,672 - DEBUG - find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,672 - DEBUG - find_def_from_top label 154
2024-03-14 20:01:05,672 - DEBUG - idom 138 from label 154
2024-03-14 20:01:05,672 - DEBUG - find_def_from_bottom label 138
2024-03-14 20:01:05,672 - DEBUG - find_def_from_top label 138
2024-03-14 20:01:05,672 - DEBUG - idom 130 from label 138
2024-03-14 20:01:05,672 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:01:05,672 - DEBUG - replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,672 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-14 20:01:05,672 - DEBUG - on stmt: jump 130
2024-03-14 20:01:05,672 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-14 20:01:05,672 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,672 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,672 - DEBUG - on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,672 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:01:05,672 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-14 20:01:05,672 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,672 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:01:05,672 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-14 20:01:05,672 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:01:05,672 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:01:05,672 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-14 20:01:05,673 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E609A90>
2024-03-14 20:01:05,673 - DEBUG - on stmt: $186return_value.1 = cast(value=r.2)
2024-03-14 20:01:05,673 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:01:05,673 - DEBUG - Fix SSA violator on var exp
2024-03-14 20:01:05,673 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-14 20:01:05,673 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B700>
2024-03-14 20:01:05,673 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:01:05,673 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:01:05,673 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:01:05,673 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:01:05,673 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,673 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:01:05,673 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,673 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:01:05,673 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:01:05,673 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,673 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,673 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:01:05,673 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-14 20:01:05,673 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B700>
2024-03-14 20:01:05,673 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:01:05,673 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:01:05,673 - DEBUG - first assign: exp
2024-03-14 20:01:05,674 - DEBUG - replaced with: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:01:05,674 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:01:05,674 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:01:05,674 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,674 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,674 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:01:05,674 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-14 20:01:05,674 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B700>
2024-03-14 20:01:05,674 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:01:05,674 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:01:05,674 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-14 20:01:05,674 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B700>
2024-03-14 20:01:05,674 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:01:05,674 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,674 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,674 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,674 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-14 20:01:05,674 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B700>
2024-03-14 20:01:05,674 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-03-14 20:01:05,674 - DEBUG - on stmt: exp = b
2024-03-14 20:01:05,674 - DEBUG - replaced with: exp.1 = b
2024-03-14 20:01:05,674 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,674 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-14 20:01:05,675 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B700>
2024-03-14 20:01:05,675 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[48, 98])
2024-03-14 20:01:05,675 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:01:05,675 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:01:05,675 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,675 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,675 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:01:05,675 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-14 20:01:05,675 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B700>
2024-03-14 20:01:05,675 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:01:05,675 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:01:05,675 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:01:05,675 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,675 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,675 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:01:05,675 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:01:05,675 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-14 20:01:05,675 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B700>
2024-03-14 20:01:05,675 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[106, 154])
2024-03-14 20:01:05,675 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
2024-03-14 20:01:05,675 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:01:05,675 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:01:05,676 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,676 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,676 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:01:05,676 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-14 20:01:05,676 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B700>
2024-03-14 20:01:05,676 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:01:05,676 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:01:05,676 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,676 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,676 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:01:05,676 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-14 20:01:05,676 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B700>
2024-03-14 20:01:05,676 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,676 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-14 20:01:05,676 - DEBUG - on stmt: jump 154
2024-03-14 20:01:05,676 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-14 20:01:05,676 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B700>
2024-03-14 20:01:05,676 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-14 20:01:05,676 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:01:05,676 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,676 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-14 20:01:05,676 - DEBUG - replaced with: exp.2 = $158inplace_rshift.2
2024-03-14 20:01:05,676 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,677 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-14 20:01:05,677 - DEBUG - on stmt: jump 130
2024-03-14 20:01:05,677 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-14 20:01:05,677 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B700>
2024-03-14 20:01:05,677 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,677 - DEBUG - on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,677 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:01:05,677 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-14 20:01:05,677 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B700>
2024-03-14 20:01:05,677 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:01:05,677 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-14 20:01:05,677 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:01:05,677 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:01:05,677 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-14 20:01:05,677 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002127E58B700>
2024-03-14 20:01:05,677 - DEBUG - on stmt: $186return_value.1 = cast(value=r.2)
2024-03-14 20:01:05,677 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:01:05,677 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x000002127E58BE20>],
             98: [<numba.core.ir.Assign object at 0x000002127E5CC070>],
             154: [<numba.core.ir.Assign object at 0x000002127E6482E0>]})
2024-03-14 20:01:05,677 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-14 20:01:05,677 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E5CCE80>
2024-03-14 20:01:05,678 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:01:05,678 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:01:05,678 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:01:05,678 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:01:05,678 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,678 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:01:05,678 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,678 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:01:05,678 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:01:05,678 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,678 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,678 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:01:05,678 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-14 20:01:05,678 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E5CCE80>
2024-03-14 20:01:05,678 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:01:05,678 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:01:05,678 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:01:05,678 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:01:05,678 - DEBUG - find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
2024-03-14 20:01:05,678 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,678 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,678 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:01:05,679 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-14 20:01:05,679 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E5CCE80>
2024-03-14 20:01:05,679 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:01:05,679 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:01:05,679 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-14 20:01:05,679 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E5CCE80>
2024-03-14 20:01:05,679 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:01:05,679 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,679 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,679 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,679 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-14 20:01:05,679 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E5CCE80>
2024-03-14 20:01:05,679 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-03-14 20:01:05,679 - DEBUG - on stmt: exp.1 = b
2024-03-14 20:01:05,679 - DEBUG - on stmt: jump 106
2024-03-14 20:01:05,679 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-14 20:01:05,679 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E5CCE80>
2024-03-14 20:01:05,679 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[48, 98])
2024-03-14 20:01:05,679 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:01:05,679 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:01:05,679 - DEBUG - find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
2024-03-14 20:01:05,679 - DEBUG - find_def_from_top label 106
2024-03-14 20:01:05,679 - DEBUG - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
2024-03-14 20:01:05,680 - DEBUG - find_def_from_bottom label 48
2024-03-14 20:01:05,680 - DEBUG - find_def_from_top label 48
2024-03-14 20:01:05,680 - DEBUG - idom 26 from label 48
2024-03-14 20:01:05,680 - DEBUG - find_def_from_bottom label 26
2024-03-14 20:01:05,680 - DEBUG - incoming_def exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:01:05,680 - DEBUG - find_def_from_bottom label 98
2024-03-14 20:01:05,680 - DEBUG - incoming_def exp.1 = b
2024-03-14 20:01:05,680 - DEBUG - replaced with: $110compare_op.2 = exp.3 > $const108.1
2024-03-14 20:01:05,680 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,680 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,680 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:01:05,680 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-14 20:01:05,680 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E5CCE80>
2024-03-14 20:01:05,680 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:01:05,680 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:01:05,680 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:01:05,680 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,680 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,680 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:01:05,680 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:01:05,680 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-14 20:01:05,681 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E5CCE80>
2024-03-14 20:01:05,681 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[106, 154])
2024-03-14 20:01:05,681 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
2024-03-14 20:01:05,681 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:01:05,681 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:01:05,681 - DEBUG - find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
2024-03-14 20:01:05,681 - DEBUG - find_def_from_top label 130
2024-03-14 20:01:05,681 - DEBUG - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
2024-03-14 20:01:05,681 - DEBUG - find_def_from_bottom label 106
2024-03-14 20:01:05,681 - DEBUG - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
2024-03-14 20:01:05,681 - DEBUG - find_def_from_bottom label 154
2024-03-14 20:01:05,681 - DEBUG - incoming_def exp.2 = $158inplace_rshift.2
2024-03-14 20:01:05,681 - DEBUG - replaced with: $134compare_op.2 = exp.4 != $const132.1
2024-03-14 20:01:05,681 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,681 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,681 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:01:05,681 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-14 20:01:05,681 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E5CCE80>
2024-03-14 20:01:05,681 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:01:05,681 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:01:05,681 - DEBUG - find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
2024-03-14 20:01:05,682 - DEBUG - find_def_from_top label 138
2024-03-14 20:01:05,682 - DEBUG - idom 130 from label 138
2024-03-14 20:01:05,682 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:01:05,682 - DEBUG - replaced with: $142binary_and.2 = exp.4 & $const140.1
2024-03-14 20:01:05,682 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,682 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,682 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:01:05,682 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-14 20:01:05,682 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E5CCE80>
2024-03-14 20:01:05,682 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,682 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-14 20:01:05,682 - DEBUG - on stmt: jump 154
2024-03-14 20:01:05,682 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-14 20:01:05,682 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E5CCE80>
2024-03-14 20:01:05,682 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-14 20:01:05,682 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:01:05,682 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,682 - DEBUG - find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,682 - DEBUG - find_def_from_top label 154
2024-03-14 20:01:05,682 - DEBUG - idom 138 from label 154
2024-03-14 20:01:05,682 - DEBUG - find_def_from_bottom label 138
2024-03-14 20:01:05,682 - DEBUG - find_def_from_top label 138
2024-03-14 20:01:05,682 - DEBUG - idom 130 from label 138
2024-03-14 20:01:05,683 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:01:05,683 - DEBUG - replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,683 - DEBUG - on stmt: exp.2 = $158inplace_rshift.2
2024-03-14 20:01:05,683 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:01:05,683 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-14 20:01:05,683 - DEBUG - on stmt: jump 130
2024-03-14 20:01:05,683 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-14 20:01:05,683 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E5CCE80>
2024-03-14 20:01:05,683 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:01:05,683 - DEBUG - on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:01:05,683 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:01:05,683 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-14 20:01:05,683 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E5CCE80>
2024-03-14 20:01:05,683 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:01:05,683 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-14 20:01:05,683 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:01:05,683 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:01:05,683 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-14 20:01:05,683 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002127E5CCE80>
2024-03-14 20:01:05,683 - DEBUG - on stmt: $186return_value.1 = cast(value=r.2)
2024-03-14 20:01:05,683 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:01:06,387 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'I have this list of activities and the distances in km between each activity. Write a new list that is divided into 7 days. And in each day, write to me which attractions and restaurants to go to. I need you to also take into account the distances so we won\'t have too long trips. Also, don\'t repeat attractions on separate days. Don\'t assume any activity as a starting point. Just give the plan and also try to combine restaurants and attractions. If there is a bit of travel that\'s also ok; we don\'t need the closest attractions each day.\n{\n  "teamLab Planets TOKYO to Little Tokyo": 8811.197817791051,\n  "teamLab Planets TOKYO to Tokyo Tower": 4.135015472644106,\n  "teamLab Planets TOKYO to Tokyo Skytree": 7.0150617126516055,\n  "teamLab Planets TOKYO to Tokyo Disneyland": 8.392217763537737,\n  "teamLab Planets TOKYO to Tokyo Metro": 5.954032744460858,\n  "teamLab Planets TOKYO to Tokyo Localized - Free Walking Tour in Tokyo & More": 5.737941297891147,\n  "teamLab Planets TOKYO to Waho-An NATURE Tokyo": 7.627152918162808,\n  "teamLab Planets TOKYO to Tokyo Central Railway Station": 4.205173985387373,\n  "teamLab Planets TOKYO to Tokyo DisneySea": 8.963852776598237,\n  "teamLab Planets TOKYO to Tokyo Bay": 8827.426881886113,\n  "teamLab Planets TOKYO to NINJA TOKYO": 4.460968554128433,\n  "teamLab Planets TOKYO to Tokyo": 8700.281765643073,\n  "teamLab Planets TOKYO to Tokyo Restaurant": 9564.172623855065,\n  "teamLab Planets TOKYO to Starbucks Reserve(R) Roastery Tokyo": 8.780898806668041,\n  "teamLab Planets TOKYO to Tokyo Sushi": 10887.647579810606,\n  "teamLab Planets TOKYO to Tokyo Jo\'s": 12802.16153309465,\n  "teamLab Planets TOKYO to Tokyo Tokyo Central": 7934.728083918277,\n  "teamLab Planets TOKYO to Tokyo Pot": 10106.32645115756,\n  "teamLab Planets TOKYO to Tokyo Japanese Restaurant": 8862.338733678802,\n  "Little Tokyo to Tokyo Tower": 8813.918275333936,\n  "Little Tokyo to Tokyo Skytree": 8805.823764938723,\n  "Little Tokyo to Tokyo Disneyland": 8805.47377072589,\n  "Little Tokyo to Tokyo Metro": 8812.88031305338,\n  "Little Tokyo to Tokyo Localized - Free Walking Tour in Tokyo & More": 8809.334212222395,\n  "Little Tokyo to Waho-An NATURE Tokyo": 8817.367197940146,\n  "Little Tokyo to Tokyo Central Railway Station": 8810.983924597826,\n  "Little Tokyo to Tokyo DisneySea": 8805.50728334144,\n  "Little Tokyo to Tokyo Bay": 10491.66302046837,\n  "Little Tokyo to NINJA TOKYO": 8810.647619250398,\n  "Little Tokyo to Tokyo": 13288.966351208515,\n  "Little Tokyo to Tokyo Restaurant": 12199.9096149629,\n  "Little Tokyo to Starbucks Reserve(R) Roastery Tokyo": 8818.436052933388,\n  "Little Tokyo to Tokyo Sushi": 8991.65438696015,\n  "Little Tokyo to Tokyo Jo\'s": 4341.403849148749,\n  "Little Tokyo to Tokyo Tokyo Central": 13383.859439583257,\n  "Little Tokyo to Tokyo Pot": 1936.8583954228507,\n  "Little Tokyo to Tokyo Japanese Restaurant": 10251.18739155637,\n  "Tokyo Tower to Tokyo Skytree": 8.213889903337146,\n  "Tokyo Tower to Tokyo Disneyland": 12.525753567177098,\n  "Tokyo Tower to Tokyo Metro": 2.797157293748747,\n  "Tokyo Tower to Tokyo Localized - Free Walking Tour in Tokyo & More": 5.134596840379827,\n  "Tokyo Tower to Waho-An NATURE Tokyo": 3.7112389980622926,\n  "Tokyo Tower to Tokyo Central Railway Station": 3.128810254400667,\n  "Tokyo Tower to Tokyo DisneySea": 13.097586696445354,\n  "Tokyo Tower to Tokyo Bay": 8830.210118127101,\n  "Tokyo Tower to NINJA TOKYO": 3.5243810892747476,\n  "Tokyo Tower to Tokyo": 8696.18360635475,\n  "Tokyo Tower to Tokyo Restaurant": 9560.291762745408,\n  "Tokyo Tower to Starbucks Reserve(R) Roastery Tokyo": 4.8845133102841265,\n  "Tokyo Tower to Tokyo Sushi": 10885.105506482565,\n  "Tokyo Tower to Tokyo Jo\'s": 12803.932899650215,\n  "Tokyo Tower to Tokyo Tokyo Central": 7930.601952270996,\n  "Tokyo Tower to Tokyo Pot": 10108.275016587551,\n  "Tokyo Tower to Tokyo Japanese Restaurant": 8859.031650682731,\n  "Tokyo Skytree to Tokyo Disneyland": 10.650973885279516,\n  "Tokyo Skytree to Tokyo Metro": 7.158163180600412,\n  "Tokyo Skytree to Tokyo Localized - Free Walking Tour in Tokyo & More": 3.628394811361775,\n  "Tokyo Skytree to Waho-An NATURE Tokyo": 11.543460207581022,\n  "Tokyo Skytree to Tokyo Central Railway Station": 5.169435666026619,\n  "Tokyo Skytree to Tokyo DisneySea": 11.438318023870755,\n  "Tokyo Skytree to Tokyo Bay": 8832.520177657918,\n  "Tokyo Skytree to NINJA TOKYO": 4.824557368971413,\n  "Tokyo Skytree to Tokyo": 8699.487120062606,\n  "Tokyo Skytree to Tokyo Restaurant": 9561.883411806246,\n  "Tokyo Skytree to Starbucks Reserve(R) Roastery Tokyo": 12.620721072193188,\n  "Tokyo Skytree to Tokyo Sushi": 10882.201598241214,\n  "Tokyo Skytree to Tokyo Jo\'s": 12795.76408274421,\n  "Tokyo Skytree to Tokyo Tokyo Central": 7934.4097211396875,\n  "Tokyo Skytree to Tokyo Pot": 10100.074334587627,\n  "Tokyo Skytree to Tokyo Japanese Restaurant": 8858.241140326772,\n  "Tokyo Disneyland to Tokyo Metro": 13.972698517686116,\n  "Tokyo Disneyland to Tokyo Localized - Free Walking Tour in Tokyo & More": 12.190772005650029,\n  "Tokyo Disneyland to Waho-An NATURE Tokyo": 15.946171684789565,\n  "Tokyo Disneyland to Tokyo Central Railway Station": 11.713456300540646,\n  "Tokyo Disneyland to Tokyo DisneySea": 0.7894192111742601,\n  "Tokyo Disneyland to Tokyo Bay": 8821.98489989564,\n  "Tokyo Disneyland to NINJA TOKYO": 11.762609119991005,\n  "Tokyo Disneyland to Tokyo": 8708.558247871384,\n  "Tokyo Disneyland to Tokyo Restaurant": 9571.950227087083,\n  "Tokyo Disneyland to Starbucks Reserve(R) Roastery Tokyo": 17.071025896485512,\n  "Tokyo Disneyland to Tokyo Sushi": 10892.5870361196,\n  "Tokyo Disneyland to Tokyo Jo\'s": 12798.317487057548,\n  "Tokyo Disneyland to Tokyo Tokyo Central": 7943.079854621317,\n  "Tokyo Disneyland to Tokyo Pot": 10102.131863457127,\n  "Tokyo Disneyland to Tokyo Japanese Restaurant": 8868.882980916867,\n  "Tokyo Metro to Tokyo Localized - Free Walking Tour in Tokyo & More": 3.557471105667721,\n  "Tokyo Metro to Waho-An NATURE Tokyo": 4.6516607904663125,\n  "Tokyo Metro to Tokyo Central Railway Station": 2.425069214639181,\n  "Tokyo Metro to Tokyo DisneySea": 14.630615889909867,\n  "Tokyo Metro to Tokyo Bay": 8832.908967785435,\n  "Tokyo Metro to NINJA TOKYO": 2.575723076600498,\n  "Tokyo Metro to Tokyo": 8694.590179092567,\n  "Tokyo Metro to Tokyo Restaurant": 9558.237241258788,\n  "Tokyo Metro to Starbucks Reserve(R) Roastery Tokyo": 5.604901683052084,\n  "Tokyo Metro to Tokyo Sushi": 10882.358483339243,\n  "Tokyo Metro to Tokyo Jo\'s": 12802.227191868225,\n  "Tokyo Metro to Tokyo Tokyo Central": 7929.1686075730095,\n  "Tokyo Metro to Tokyo Pot": 10106.678106111867,\n  "Tokyo Metro to Tokyo Japanese Restaurant": 8856.518333104455,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Waho-An NATURE Tokyo": 8.088126557852785,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Central Railway Station": 2.056130331502995,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo DisneySea": 12.931391558087347,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Bay": 8833.031024620439,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to NINJA TOKYO": 1.6507944573933817,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo": 8696.78430506213,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Restaurant": 9559.770922236501,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Starbucks Reserve(R) Roastery Tokyo": 9.113279578810547,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Sushi": 10881.965864990136,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Jo\'s": 12798.892387543652,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Tokyo Central": 7931.548278903899,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Pot": 10103.287448088757,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Japanese Restaurant": 8857.065089816233,\n  "Waho-An NATURE Tokyo to Tokyo Central Railway Station": 6.389611700932529,\n  "Waho-An NATURE Tokyo to Tokyo DisneySea": 16.457977649573362,\n  "Waho-An NATURE Tokyo to Tokyo Bay": 8831.178604315166,\n  "Waho-An NATURE Tokyo to NINJA TOKYO": 6.719823092420816,\n  "Waho-An NATURE Tokyo to Tokyo": 8693.137700429264,\n  "Waho-An NATURE Tokyo to Tokyo Restaurant": 9557.778697978676,\n  "Waho-An NATURE Tokyo to Starbucks Reserve(R) Roastery Tokyo": 1.1743400722765946,\n  "Waho-An NATURE Tokyo to Tokyo Sushi": 10884.41296380771,\n  "Waho-An NATURE Tokyo to Tokyo Jo\'s": 12806.87867328609,\n  "Waho-An NATURE Tokyo to Tokyo Tokyo Central": 7927.418941722609,\n  "Waho-An NATURE Tokyo to Tokyo Pot": 10111.326138507902,\n  "Waho-An NATURE Tokyo to Tokyo Japanese Restaurant": 8857.409446448097,\n  "Tokyo Central Railway Station to Tokyo DisneySea": 12.400219243482875,\n  "Tokyo Central Railway Station to Tokyo Bay": 8831.623575373893,\n  "Tokyo Central Railway Station to NINJA TOKYO": 0.40585766498951203,\n  "Tokyo Central Railway Station to Tokyo": 8696.897232849338,\n  "Tokyo Central Railway Station to Tokyo Restaurant": 9560.326989898429,\n  "Tokyo Central Railway Station to Starbucks Reserve(R) Roastery Tokyo": 7.491899076881146,\n  "Tokyo Central Railway Station to Tokyo Sushi": 10883.483429053842,\n  "Tokyo Central Railway Station to Tokyo Jo\'s": 12800.81381646971,\n  "Tokyo Central Railway Station to Tokyo Tokyo Central": 7931.521171685702,\n  "Tokyo Central Railway Station to Tokyo Pot": 10105.171406400828,\n  "Tokyo Central Railway Station to Tokyo Japanese Restaurant": 8858.166425772439,\n  "Tokyo DisneySea to Tokyo Bay": 8821.197548282538,\n  "Tokyo DisneySea to NINJA TOKYO": 12.461946575206555,\n  "Tokyo DisneySea to Tokyo": 8709.197655323742,\n  "Tokyo DisneySea to Tokyo Restaurant": 9572.674888935611,\n  "Tokyo DisneySea to Starbucks Reserve(R) Roastery Tokyo": 17.569883766517393,\n  "Tokyo DisneySea to Tokyo Sushi": 10893.367751851234,\n  "Tokyo DisneySea to Tokyo Jo\'s": 12798.563446189875,\n  "Tokyo DisneySea to Tokyo Tokyo Central": 7943.686304849698,\n  "Tokyo DisneySea to Tokyo Pot": 10102.342081377912,\n  "Tokyo DisneySea to Tokyo Japanese Restaurant": 8869.667042842935,\n  "Tokyo Bay to NINJA TOKYO": 8831.887659837299,\n  "Tokyo Bay to Tokyo": 14940.212789376603,\n  "Tokyo Bay to Tokyo Restaurant": 16564.588877978913,\n  "Tokyo Bay to Starbucks Reserve(R) Roastery Tokyo": 8831.54016650305,\n  "Tokyo Bay to Tokyo Sushi": 19449.411700450462,\n  "Tokyo Bay to Tokyo Jo\'s": 12742.527669438521,\n  "Tokyo Bay to Tokyo Tokyo Central": 14201.33748823976,\n  "Tokyo Bay to Tokyo Pot": 12165.239942037651,\n  "Tokyo Bay to Tokyo Japanese Restaurant": 17400.67777156807,\n  "NINJA TOKYO to Tokyo": 8696.89336059579,\n  "NINJA TOKYO to Tokyo Restaurant": 9560.23508532595,\n  "NINJA TOKYO to Starbucks Reserve(R) Roastery Tokyo": 7.8073883582054755,\n  "NINJA TOKYO to Tokyo Sushi": 10883.196629119515,\n  "NINJA TOKYO to Tokyo Jo\'s": 12800.428379149746,\n  "NINJA TOKYO to Tokyo Tokyo Central": 7931.544931719195,\n  "NINJA TOKYO to Tokyo Pot": 10104.792533230335,\n  "NINJA TOKYO to Tokyo Japanese Restaurant": 8857.964818233182,\n  "Tokyo to Tokyo Restaurant": 1627.9152994233568,\n  "Tokyo to Starbucks Reserve(R) Roastery Tokyo": 8692.142285267944,\n  "Tokyo to Tokyo Sushi": 5375.908537313108,\n  "Tokyo to Tokyo Jo\'s": 12328.372374226441,\n  "Tokyo to Tokyo Tokyo Central": 872.2715749670297,\n  "Tokyo to Tokyo Pot": 12253.937589299188,\n  "Tokyo to Tokyo Japanese Restaurant": 3193.399954217947,\n  "Tokyo Restaurant to Starbucks Reserve(R) Roastery Tokyo": 9556.94223465533,\n  "Tokyo Restaurant to Tokyo Sushi": 3775.3070252306284,\n  "Tokyo Restaurant to Tokyo Jo\'s": 10716.70958295395,\n  "Tokyo Restaurant to Tokyo Tokyo Central": 2417.9068583399135,\n  "Tokyo Restaurant to Tokyo Pot": 10893.166758880021,\n  "Tokyo Restaurant to Tokyo Japanese Restaurant": 1970.3584626872782,\n  "Starbucks Reserve(R) Roastery Tokyo to Tokyo Sushi": 10884.13765073737,\n  "Starbucks Reserve(R) Roastery Tokyo to Tokyo Jo\'s": 12807.774697111814,\n  "Starbucks Reserve(R) Roastery Tokyo to Tokyo Tokyo Central": 7926.3834805403785,\n  "Starbucks Reserve(R) Roastery Tokyo to Tokyo Pot": 10112.257774767299,\n  "Starbucks Reserve(R) Roastery Tokyo to Tokyo Japanese Restaurant": 8856.845201881451,\n  "Tokyo Sushi to Tokyo Jo\'s": 6952.854690291814,\n  "Tokyo Sushi to Tokyo Tokyo Central": 6064.247941222804,\n  "Tokyo Sushi to Tokyo Pot": 7356.597399649553,\n  "Tokyo Sushi to Tokyo Japanese Restaurant": 2631.5080580354766,\n  "Tokyo Jo\'s to Tokyo Tokyo Central": 12994.024647983984,\n  "Tokyo Jo\'s to Tokyo Pot": 2711.870048111382,\n  "Tokyo Jo\'s to Tokyo Japanese Restaurant": 9357.201273336948,\n  "Tokyo Tokyo Central to Tokyo Pot": 12599.604809957538,\n  "Tokyo Tokyo Central to Tokyo Japanese Restaurant": 3679.221696114399,\n  "Tokyo Pot to Tokyo Japanese Restaurant": 9065.684493795221\n}'}], 'model': 'gpt-3.5-turbo'}}
2024-03-14 20:01:06,387 - DEBUG - close.started
2024-03-14 20:01:06,387 - DEBUG - close.complete
2024-03-14 20:01:06,387 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:01:06,407 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021266D4C790>
2024-03-14 20:01:06,407 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021266B9A3C0> server_hostname='api.openai.com' timeout=5.0
2024-03-14 20:01:06,417 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021266D4C9A0>
2024-03-14 20:01:06,427 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-14 20:01:06,427 - DEBUG - send_request_headers.complete
2024-03-14 20:01:06,427 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-14 20:01:06,427 - DEBUG - send_request_body.complete
2024-03-14 20:01:06,427 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-14 20:01:10,463 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:01:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0125'), (b'openai-organization', b'reichman-university-wxioss'), (b'openai-processing-ms', b'3725'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'996796'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'192ms'), (b'x-request-id', b'req_c0f579e2366700fed9240263be2eda08'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'86462ac5da0a09b9-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-14 20:01:10,463 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-03-14 20:01:10,463 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-14 20:01:10,463 - DEBUG - receive_response_body.complete
2024-03-14 20:01:10,463 - DEBUG - response_closed.started
2024-03-14 20:01:10,463 - DEBUG - response_closed.complete
2024-03-14 20:01:10,463 - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-03-14 20:01:10,463 - INFO - Destination: Tokyo
    Budget: 7000
    Dates: From 2024-05-01 to 2024-05-08
    Flights Info: {'search_metadata': {'id': '65f339e3351764ab52b38f92', 'status': 'Success', 'json_endpoint': 'https://serpapi.com/searches/0d91aaecbbcff35c/65f339e3351764ab52b38f92.json', 'created_at': '2024-03-14 17:54:43 UTC', 'processed_at': '2024-03-14 17:54:43 UTC', 'google_flights_url': 'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&q=Flights+to+NRT+from+TLV+on+2024-05-01+through+2024-05-08', 'raw_html_file': 'https://serpapi.com/searches/0d91aaecbbcff35c/65f339e3351764ab52b38f92.html', 'prettify_html_file': 'https://serpapi.com/searches/0d91aaecbbcff35c/65f339e3351764ab52b38f92.prettify', 'total_time_taken': 5.55}, 'search_parameters': {'engine': 'google_flights', 'hl': 'en', 'gl': 'us', 'departure_id': 'TLV', 'arrival_id': 'NRT', 'outbound_date': '2024-05-01', 'return_date': '2024-05-08', 'currency': 'USD'}, 'other_flights': [{'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 15:20'}, 'arrival_airport': {'name': 'Vienna International Airport', 'id': 'VIE', 'time': '2024-05-01 18:05'}, 'duration': 225, 'airplane': 'Airbus A321', 'airline': 'Austrian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OS.png', 'travel_class': 'Economy', 'flight_number': 'OS 858', 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'Carbon emissions estimate: 216 kg'], 'often_delayed_by_over_30_min': True}, {'departure_airport': {'name': 'Vienna International Airport', 'id': 'VIE', 'time': '2024-05-02 13:30'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-03 08:50'}, 'duration': 740, 'airplane': 'Boeing 777', 'airline': 'Austrian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OS.png', 'travel_class': 'Economy', 'flight_number': 'OS 51', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 693 kg'], 'overnight': True}], 'layovers': [{'duration': 1165, 'name': 'Vienna International Airport', 'id': 'VIE', 'overnight': True}], 'total_duration': 2130, 'carbon_emissions': {'this_flight': 911000, 'typical_for_this_route': 891000, 'difference_percent': 2}, 'price': 967, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OS.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFZ3BQVXpnMU9IeFBVelV4R2dzSWxmTUZFQUlhQTFWVFJEZ2NjSlh6QlE9PSIsW1siVExWIiwiMjAyNC0wNS0wMSIsIlZJRSIsbnVsbCwiT1MiLCI4NTgiXSxbIlZJRSIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk9TIiwiNTEiXV1d'}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 13:55'}, 'arrival_airport': {'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH', 'time': '2024-05-01 16:10'}, 'duration': 135, 'airplane': 'Airbus A320', 'airline': 'Aegean', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/A3.png', 'travel_class': 'Economy', 'flight_number': 'A3 925', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Carbon emissions estimate: 115 kg']}, {'departure_airport': {'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH', 'time': '2024-05-01 21:25'}, 'arrival_airport': {'name': 'Vienna International Airport', 'id': 'VIE', 'time': '2024-05-01 22:40'}, 'duration': 135, 'airplane': 'Airbus A320', 'airline': 'Austrian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OS.png', 'travel_class': 'Economy', 'flight_number': 'OS 808', 'legroom': '28 in', 'extensions': ['Below average legroom (28 in)', 'In-seat USB outlet', 'Carbon emissions estimate: 128 kg']}, {'departure_airport': {'name': 'Vienna International Airport', 'id': 'VIE', 'time': '2024-05-02 13:30'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-03 08:50'}, 'duration': 740, 'airplane': 'Boeing 777', 'airline': 'Austrian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OS.png', 'travel_class': 'Economy', 'flight_number': 'OS 51', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 693 kg'], 'overnight': True}], 'layovers': [{'duration': 315, 'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH'}, {'duration': 890, 'name': 'Vienna International Airport', 'id': 'VIE', 'overnight': True}], 'total_duration': 2215, 'carbon_emissions': {'this_flight': 938000, 'typical_for_this_route': 891000, 'difference_percent': 5}, 'price': 1185, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaEJCTXpreU5YeFBVemd3T0h4UFV6VXhHZ3NJd1owSEVBSWFBMVZUUkRnY2NNR2RCdz09IixbWyJUTFYiLCIyMDI0LTA1LTAxIiwiQVRIIixudWxsLCJBMyIsIjkyNSJdLFsiQVRIIiwiMjAyNC0wNS0wMSIsIlZJRSIsbnVsbCwiT1MiLCI4MDgiXSxbIlZJRSIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk9TIiwiNTEiXV1d'}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 10:00'}, 'arrival_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2024-05-01 14:15'}, 'duration': 255, 'airplane': 'Boeing 737MAX 8 Passenger', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 415', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Stream media to your device', 'Carbon emissions estimate: 188 kg']}, {'departure_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2024-05-01 22:35'}, 'arrival_airport': {'name': 'Incheon International Airport', 'id': 'ICN', 'time': '2024-05-02 16:00'}, 'duration': 685, 'airplane': 'Boeing 787', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 672', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 664 kg'], 'overnight': True}, {'departure_airport': {'name': 'Incheon International Airport', 'id': 'ICN', 'time': '2024-05-02 17:40'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-02 20:05'}, 'duration': 145, 'airplane': 'Boeing 787', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 672', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 118 kg']}], 'layovers': [{'duration': 500, 'name': 'Bole Addis Ababa International Airport', 'id': 'ADD'}, {'duration': 100, 'name': 'Incheon International Airport', 'id': 'ICN'}], 'total_duration': 1685, 'carbon_emissions': {'this_flight': 971000, 'typical_for_this_route': 891000, 'difference_percent': 9}, 'price': 1203, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaEZGVkRReE5YeEZWRFkzTW54RlZEWTNNaG9MQ09lckJ4QUNHZ05WVTBRNEhIRG5xd2M9IixbWyJUTFYiLCIyMDI0LTA1LTAxIiwiQUREIixudWxsLCJFVCIsIjQxNSJdLFsiQUREIiwiMjAyNC0wNS0wMSIsIklDTiIsbnVsbCwiRVQiLCI2NzIiXSxbIklDTiIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIkVUIiwiNjcyIl1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 05:00'}, 'arrival_airport': {'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH', 'time': '2024-05-01 07:10'}, 'duration': 130, 'airplane': 'Airbus A320', 'airline': 'Aegean', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/A3.png', 'travel_class': 'Economy', 'flight_number': 'A3 929', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Carbon emissions estimate: 115 kg']}, {'departure_airport': {'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH', 'time': '2024-05-01 08:35'}, 'arrival_airport': {'name': 'Munich International Airport', 'id': 'MUC', 'time': '2024-05-01 10:15'}, 'duration': 160, 'airplane': 'Airbus A320neo', 'airline': 'Aegean', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/A3.png', 'travel_class': 'Economy', 'flight_number': 'A3 802', 'ticket_also_sold_by': ['Lufthansa'], 'legroom': '28 in', 'extensions': ['Below average legroom (28 in)', 'Free Wi-Fi', 'In-seat USB outlet', 'Carbon emissions estimate: 109 kg']}, {'departure_airport': {'name': 'Munich International Airport', 'id': 'MUC', 'time': '2024-05-01 11:55'}, 'arrival_airport': {'name': 'Kansai International Airport', 'id': 'KIX', 'time': '2024-05-02 06:55'}, 'duration': 720, 'airplane': 'Airbus A350', 'airline': 'Lufthansa', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LH.png', 'travel_class': 'Economy', 'flight_number': 'LH 742', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 556 kg'], 'overnight': True}, {'departure_airport': {'name': 'Osaka International Airport', 'id': 'ITM', 'time': '2024-05-02 14:15'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-02 15:40'}, 'duration': 85, 'airplane': 'Boeing 737', 'airline': 'ANA', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/NH.png', 'travel_class': 'Economy', 'flight_number': 'NH 2178', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'Free Wi-Fi', 'Stream media to your device', 'Carbon emissions estimate: 84 kg']}], 'layovers': [{'duration': 85, 'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH'}, {'duration': 100, 'name': 'Munich International Airport', 'id': 'MUC'}, {'duration': 440, 'name': 'Osaka International Airport', 'id': 'KIX'}], 'total_duration': 1720, 'carbon_emissions': {'this_flight': 867000, 'typical_for_this_route': 891000, 'difference_percent': -3}, 'price': 1282, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaGhCTXpreU9YeEJNemd3TW54TVNEYzBNbnhPU0RJeE56Z2FDd2pENlFjUUFob0RWVk5FT0J4d3cra0giLFtbIlRMViIsIjIwMjQtMDUtMDEiLCJBVEgiLG51bGwsIkEzIiwiOTI5Il0sWyJBVEgiLCIyMDI0LTA1LTAxIiwiTVVDIixudWxsLCJBMyIsIjgwMiJdLFsiTVVDIiwiMjAyNC0wNS0wMSIsIktJWCIsbnVsbCwiTEgiLCI3NDIiXSxbIklUTSIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk5IIiwiMjE3OCJdXV0='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 10:00'}, 'arrival_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2024-05-01 14:15'}, 'duration': 255, 'airplane': 'Boeing 737MAX 8 Passenger', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 415', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Stream media to your device', 'Carbon emissions estimate: 188 kg']}, {'departure_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2024-05-01 22:35'}, 'arrival_airport': {'name': 'Incheon International Airport', 'id': 'ICN', 'time': '2024-05-02 16:00'}, 'duration': 685, 'airplane': 'Boeing 787', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 672', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 664 kg'], 'overnight': True}, {'departure_airport': {'name': 'Incheon International Airport', 'id': 'ICN', 'time': '2024-05-02 18:30'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-02 21:00'}, 'duration': 150, 'airplane': 'Airbus A330', 'airline': 'Asiana', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OZ.png', 'travel_class': 'Economy', 'flight_number': 'OZ 108', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'In-seat power outlet', 'On-demand video', 'Carbon emissions estimate: 123 kg']}], 'layovers': [{'duration': 500, 'name': 'Bole Addis Ababa International Airport', 'id': 'ADD'}, {'duration': 150, 'name': 'Incheon International Airport', 'id': 'ICN'}], 'total_duration': 1740, 'carbon_emissions': {'this_flight': 976000, 'typical_for_this_route': 891000, 'difference_percent': 10}, 'price': 1312, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaEZGVkRReE5YeEZWRFkzTW54UFdqRXdPQm9MQ1B1QUNCQUNHZ05WVTBRNEhIRDdnQWc9IixbWyJUTFYiLCIyMDI0LTA1LTAxIiwiQUREIixudWxsLCJFVCIsIjQxNSJdLFsiQUREIiwiMjAyNC0wNS0wMSIsIklDTiIsbnVsbCwiRVQiLCI2NzIiXSxbIklDTiIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk9aIiwiMTA4Il1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 04:45'}, 'arrival_airport': {'name': 'Frankfurt Airport', 'id': 'FRA', 'time': '2024-05-01 08:20'}, 'duration': 275, 'airplane': 'Airbus A321neo', 'airline': 'Lufthansa', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LH.png', 'travel_class': 'Economy', 'flight_number': 'LH 691', 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'In-seat USB outlet', 'Carbon emissions estimate: 213 kg'], 'overnight': True}, {'departure_airport': {'name': 'Frankfurt Airport', 'id': 'FRA', 'time': '2024-05-01 10:15'}, 'arrival_airport': {'name': 'Munich International Airport', 'id': 'MUC', 'time': '2024-05-01 11:10'}, 'duration': 55, 'airplane': 'Airbus A321', 'airline': 'Lufthansa', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LH.png', 'travel_class': 'Economy', 'flight_number': 'LH 100', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Wi-Fi for a fee', 'Carbon emissions estimate: 54 kg'], 'often_delayed_by_over_30_min': True}, {'departure_airport': {'name': 'Munich International Airport', 'id': 'MUC', 'time': '2024-05-01 11:55'}, 'arrival_airport': {'name': 'Kansai International Airport', 'id': 'KIX', 'time': '2024-05-02 06:55'}, 'duration': 720, 'airplane': 'Airbus A350', 'airline': 'Lufthansa', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LH.png', 'travel_class': 'Premium Economy', 'flight_number': 'LH 742', 'extensions': ['Extra reclining seat', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 834 kg'], 'overnight': True}, {'departure_airport': {'name': 'Osaka International Airport', 'id': 'ITM', 'time': '2024-05-02 14:15'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-02 15:40'}, 'duration': 85, 'airplane': 'Boeing 737', 'airline': 'ANA', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/NH.png', 'travel_class': 'Economy', 'flight_number': 'NH 2178', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'Free Wi-Fi', 'Stream media to your device', 'Carbon emissions estimate: 84 kg']}], 'layovers': [{'duration': 115, 'name': 'Frankfurt Airport', 'id': 'FRA'}, {'duration': 45, 'name': 'Munich International Airport', 'id': 'MUC'}, {'duration': 440, 'name': 'Osaka International Airport', 'id': 'KIX'}], 'total_duration': 1735, 'carbon_emissions': {'this_flight': 1188000, 'typical_for_this_route': 891000, 'difference_percent': 33}, 'price': 1322, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaGhNU0RZNU1YeE1TREV3TUh4TVNEYzBNbnhPU0RJeE56Z2FDd2luaUFnUUFob0RWVk5FT0J4d3A0Z0kiLFtbIlRMViIsIjIwMjQtMDUtMDEiLCJGUkEiLG51bGwsIkxIIiwiNjkxIl0sWyJGUkEiLCIyMDI0LTA1LTAxIiwiTVVDIixudWxsLCJMSCIsIjEwMCJdLFsiTVVDIiwiMjAyNC0wNS0wMSIsIktJWCIsbnVsbCwiTEgiLCI3NDIiXSxbIklUTSIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk5IIiwiMjE3OCJdXV0='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 05:00'}, 'arrival_airport': {'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH', 'time': '2024-05-01 07:10'}, 'duration': 130, 'airplane': 'Airbus A320', 'airline': 'Aegean', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/A3.png', 'travel_class': 'Economy', 'flight_number': 'A3 929', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Carbon emissions estimate: 115 kg']}, {'departure_airport': {'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH', 'time': '2024-05-01 08:30'}, 'arrival_airport': {'name': 'Zurich Airport', 'id': 'ZRH', 'time': '2024-05-01 10:20'}, 'duration': 170, 'airplane': 'Airbus A320neo', 'airline': 'Aegean', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/A3.png', 'travel_class': 'Economy', 'flight_number': 'A3 850', 'ticket_also_sold_by': ['SWISS'], 'legroom': '28 in', 'extensions': ['Below average legroom (28 in)', 'Free Wi-Fi', 'In-seat USB outlet', 'Carbon emissions estimate: 116 kg']}, {'departure_airport': {'name': 'Zurich Airport', 'id': 'ZRH', 'time': '2024-05-01 13:05'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-02 08:50'}, 'duration': 765, 'airplane': 'Boeing 777', 'airline': 'SWISS', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LX.png', 'travel_class': 'Economy', 'flight_number': 'LX 160', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 774 kg'], 'overnight': True}], 'layovers': [{'duration': 80, 'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH'}, {'duration': 165, 'name': 'Zurich Airport', 'id': 'ZRH'}], 'total_duration': 1310, 'carbon_emissions': {'this_flight': 1006000, 'typical_for_this_route': 891000, 'difference_percent': 13}, 'price': 1425, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaEZCTXpreU9YeEJNemcxTUh4TVdERTJNQm9MQ05uWUNCQUNHZ05WVTBRNEhIRFoyQWc9IixbWyJUTFYiLCIyMDI0LTA1LTAxIiwiQVRIIixudWxsLCJBMyIsIjkyOSJdLFsiQVRIIiwiMjAyNC0wNS0wMSIsIlpSSCIsbnVsbCwiQTMiLCI4NTAiXSxbIlpSSCIsIjIwMjQtMDUtMDEiLCJOUlQiLG51bGwsIkxYIiwiMTYwIl1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 14:45'}, 'arrival_airport': {'name': 'Zayed International Airport', 'id': 'AUH', 'time': '2024-05-01 18:55'}, 'duration': 190, 'airplane': 'Airbus A321', 'airline': 'Etihad', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/EY.png', 'travel_class': 'Economy', 'flight_number': 'EY 594', 'ticket_also_sold_by': ['El Al'], 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'Stream media to your device', 'Carbon emissions estimate: 192 kg']}, {'departure_airport': {'name': 'Zayed International Airport', 'id': 'AUH', 'time': '2024-05-01 21:55'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-02 13:00'}, 'duration': 605, 'airplane': 'Airbus A350', 'airline': 'Etihad', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/EY.png', 'travel_class': 'Economy', 'flight_number': 'EY 878', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 472 kg'], 'overnight': True}], 'layovers': [{'duration': 180, 'name': 'Zayed International Airport', 'id': 'AUH'}], 'total_duration': 975, 'carbon_emissions': {'this_flight': 665000, 'typical_for_this_route': 891000, 'difference_percent': -25}, 'price': 1702, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/EY.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFZ3RGV1RVNU5IeEZXVGczT0JvTENLdXhDaEFDR2dOVlUwUTRISENyc1FvPSIsW1siVExWIiwiMjAyNC0wNS0wMSIsIkFVSCIsbnVsbCwiRVkiLCI1OTQiXSxbIkFVSCIsIjIwMjQtMDUtMDEiLCJOUlQiLG51bGwsIkVZIiwiODc4Il1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 20:15'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-02 13:50'}, 'duration': 695, 'airplane': 'Boeing 787', 'airline': 'El Al', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'travel_class': 'Economy', 'flight_number': 'LY 91', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 634 kg'], 'overnight': True}], 'total_duration': 695, 'carbon_emissions': {'this_flight': 634000, 'typical_for_this_route': 891000, 'difference_percent': -29}, 'price': 2012, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFZ1JNV1RreEdnc0l4Nk1NRUFJYUExVlRSRGdjY01lakRBPT0iLFtbIlRMViIsIjIwMjQtMDUtMDEiLCJOUlQiLG51bGwsIkxZIiwiOTEiXV1d'}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 19:50'}, 'arrival_airport': {'name': 'Dubai International Airport', 'id': 'DXB', 'time': '2024-05-02 00:10'}, 'duration': 200, 'airplane': 'Boeing 737MAX 8 Passenger', 'airline': 'flydubai', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/FZ.png', 'travel_class': 'Economy', 'flight_number': 'FZ 1126', 'ticket_also_sold_by': ['Emirates'], 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 149 kg']}, {'departure_airport': {'name': 'Dubai International Airport', 'id': 'DXB', 'time': '2024-05-02 02:40'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-02 17:35'}, 'duration': 595, 'airplane': 'Airbus A380', 'airline': 'Emirates', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/EK.png', 'travel_class': 'Economy', 'flight_number': 'EK 318', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 671 kg'], 'overnight': True}], 'layovers': [{'duration': 150, 'name': 'Dubai International Airport', 'id': 'DXB', 'overnight': True}], 'total_duration': 945, 'carbon_emissions': {'this_flight': 820000, 'typical_for_this_route': 891000, 'difference_percent': -8}, 'price': 3203, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFZ3hHV2pFeE1qWjhSVXN6TVRnYUN3ai94Uk1RQWhvRFZWTkVPQnh3LzhVVCIsW1siVExWIiwiMjAyNC0wNS0wMSIsIkRYQiIsbnVsbCwiRloiLCIxMTI2Il0sWyJEWEIiLCIyMDI0LTA1LTAyIiwiTlJUIixudWxsLCJFSyIsIjMxOCJdXV0='}], 'price_insights': {'lowest_price': 967, 'price_level': 'typical', 'typical_price_range': [760, 1150], 'price_history': [[1705183200, 1034], [1705269600, 1034], [1705356000, 1034], [1705442400, 1034], [1705528800, 1034], [1705615200, 1033], [1705701600, 1033], [1705788000, 1033], [1705874400, 1033], [1705960800, 1033], [1706047200, 1033], [1706133600, 1033], [1706220000, 1033], [1706306400, 1033], [1706392800, 1033], [1706479200, 1033], [1706565600, 1033], [1706652000, 1033], [1706738400, 1033], [1706824800, 1033], [1706911200, 1033], [1706997600, 983], [1707084000, 983], [1707170400, 982], [1707256800, 906], [1707343200, 982], [1707429600, 982], [1707516000, 982], [1707602400, 982], [1707688800, 982], [1707775200, 982], [1707861600, 982], [1707948000, 982], [1708034400, 982], [1708120800, 1002], [1708207200, 1003], [1708293600, 1033], [1708380000, 1033], [1708466400, 1005], [1708552800, 1005], [1708639200, 1055], [1708725600, 1056], [1708812000, 1057], [1708898400, 1007], [1708984800, 1006], [1709071200, 1057], [1709157600, 948], [1709244000, 897], [1709330400, 947], [1709416800, 947], [1709503200, 997], [1709589600, 997], [1709676000, 997], [1709762400, 1008], [1709848800, 949], [1709935200, 949], [1710021600, 951], [1710108000, 951], [1710194400, 1061], [1710280800, 1002], [1710367200, 967]]}}
    Accommodation Info: Top Hotels in Tokyo:

1. Shinagawa Prince Hotel
   - Check-in Time: 3:00 PM
   - Check-out Time: 11:00 AM
   - Rate Per Night (Lowest): $134
   - Total Rate (Lowest): $938
   - Nearby Places: Shinagawa Station, Haneda Airport, 中国料理 品川大飯店
   - Link: http://www.princehotels.co.jp/shinagawa/

2. Tokyo Bay Shiomi Prince Hotel
   - Check-in Time: 3:00 PM
   - Check-out Time: 11:00 AM
   - Rate Per Night (Lowest): $173
   - Total Rate (Lowest): $1,210
   - Nearby Places: Shiomi Station, Haneda Airport
   - Link: https://www.princehotels.com/shiomi/

3. Shinjuku Granbell Hotel
   - Check-in Time: 3:00 PM
   - Check-out Time: 12:00 PM
   - Rate Per Night (Lowest): $135
   - Total Rate (Lowest): $944
   - Nearby Places: Shinjuku Golden Gai, Higashi-Shinjuku Station, Haneda Airport, ペキンリョウリギョクラン
   - Link: https://www.granbellhotel.jp/shinjuku/

4. The Prince Park Tower Tokyo
   - Check-in Time: 3:00 PM
   - Check-out Time: 12:00 PM
   - Rate Per Night (Lowest): $259
   - Total Rate (Lowest): $1,810
   - Nearby Places: Tokyo Tower, Shibakoen Station, Haneda Airport, Brise Verte
   - Link: http://www.princehotels.co.jp/parktower/

5. APA Hotel & Resort Ryogoku Eki Tower
   - Check-in Time: 3:00 PM
   - Check-out Time: 10:00 AM
   - Rate Per Night (Lowest): $73
   - Total Rate (Lowest): $514
   - Nearby Places: Edo-Tokyo Museum, Ryogoku Station, Haneda Airport, Ryogoku Terrace
   - Link: https://www.apahotel.com/resort/ryogokueki/?utm_source=google&utm_medium=maps
    how to arrange the activities: Day 1:
- Attractions: teamLab Planets TOKYO, Tokyo Tower
- Restaurants: Tokyo Restaurant

Day 2:
- Attractions: Tokyo Skytree, Tokyo DisneySea
- Restaurants: Starbucks Reserve(R) Roastery Tokyo

Day 3:
- Attractions: Tokyo Metro, Tokyo Localized - Free Walking Tour in Tokyo & More
- Restaurants: Tokyo Sushi

Day 4:
- Attractions: Waho-An NATURE Tokyo, Tokyo Central Railway Station, NINJA TOKYO
- Restaurants: Tokyo Jo's

Day 5:
- Attractions: Tokyo Bay
- Restaurants: Tokyo Japanese Restaurant

Day 6:
- Attractions: Little Tokyo
- Restaurants: Tokyo Pot

Day 7:
- Attractions: None
- Restaurants: None
    Activities Info: [{'location_id': '14951238', 'name': 'teamLab Planets TOKYO', 'address_obj': {'street1': '6-1-16', 'city': 'Toyosu', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '135-0061', 'address_string': '6-1-16, Toyosu, Koto 135-0061 Tokyo Prefecture'}}, {'location_id': '144151', 'name': 'Little Tokyo', 'address_obj': {'street1': 'Downtown', 'street2': 'Southeast of the Civic Center; bounded by 1st', 'city': 'Los Angeles', 'state': 'California', 'country': 'United States', 'postalcode': '', 'address_string': 'Downtown Southeast of the Civic Center; bounded by 1st, Los Angeles, CA'}}, {'location_id': '320047', 'name': 'Tokyo Tower', 'address_obj': {'street1': '4-chome 2-8', 'street2': '', 'city': 'Shibakoen', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '105-0011', 'address_string': '4-chome 2-8, Shibakoen, Minato 105-0011 Tokyo Prefecture'}}, {'location_id': '1872416', 'name': 'Tokyo Skytree', 'address_obj': {'street1': '1 Chome-1-2', 'street2': '', 'city': 'Oshiage', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '131-8634', 'address_string': '1 Chome-1-2, Oshiage, Sumida 131-8634 Tokyo Prefecture'}}, {'location_id': '320634', 'name': 'Tokyo Disneyland', 'address_obj': {'street1': '1-1 Maihama', 'street2': '', 'city': 'Maihama', 'state': 'Chiba Prefecture', 'country': 'Japan', 'postalcode': '279-0031', 'address_string': '1-1 Maihama, Maihama, Urayasu 279-0031 Chiba Prefecture'}}, {'location_id': '1509275', 'name': 'Tokyo Metro', 'address_obj': {'street1': '', 'street2': '', 'city': 'Kanto', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'address_string': 'Tokyo Prefecture'}}, {'location_id': '12310322', 'name': 'Tokyo Localized - Free Walking Tour in Tokyo & More', 'address_obj': {'street2': 'Meeting Place: AKB48 Cafe', 'city': 'Chiyoda', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '110-0006', 'address_string': 'Meeting Place: AKB48 Cafe, Chiyoda 110-0006 Tokyo Prefecture'}}, {'location_id': '7744338', 'name': 'Waho-An NATURE Tokyo', 'address_obj': {'street1': '7-8', 'street2': 'Dokken-Daikanyama-Heights1F', 'city': 'Daikanyama', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '150-0034', 'address_string': '7-8 Dokken-Daikanyama-Heights1F, Daikanyama, Shibuya 150-0034 Tokyo Prefecture'}}, {'location_id': '550327', 'name': 'Tokyo Central Railway Station', 'address_obj': {'street1': '1-9-1', 'street2': '', 'city': 'Marunouchi', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '100-0005', 'address_string': '1-9-1, Marunouchi, Chiyoda 100-0005 Tokyo Prefecture'}}, {'location_id': '320639', 'name': 'Tokyo DisneySea', 'address_obj': {'street1': '1-13', 'city': 'Maihama', 'state': 'Chiba Prefecture', 'country': 'Japan', 'postalcode': '279-0031', 'address_string': '1-13, Maihama, Urayasu 279-0031 Chiba Prefecture'}}, {'location_id': '7604418', 'name': 'Tokyo Bay', 'address_obj': {'street1': '20 The Strand', 'street2': 'Takapuna Beach', 'city': 'Takapuna', 'country': 'New Zealand', 'postalcode': '0622', 'address_string': '20 The Strand Takapuna Beach, Takapuna, Auckland 0622 New Zealand'}}, {'location_id': '1010352', 'name': 'NINJA TOKYO', 'address_obj': {'street1': '2-2-1 Otemachi', 'street2': 'Shinotemachi Bldg. B1F', 'city': 'Chiyoda', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '100-0004', 'address_string': '2-2-1 Otemachi Shinotemachi Bldg. B1F, Chiyoda 100-0004 Tokyo Prefecture'}}, {'location_id': '1160290', 'name': 'Tokyo', 'address_obj': {'street1': 'Al uruba Street', 'street2': '', 'city': 'Riyadh', 'state': 'Riyadh Province', 'country': 'Saudi Arabia', 'postalcode': '11323', 'address_string': 'Al uruba Street, Riyadh 11323 Saudi Arabia'}}, {'location_id': '24035984', 'name': 'Tokyo Restaurant', 'address_obj': {'street1': '13 El Thawra St', 'street2': 'Korba, Heliopolis', 'city': 'Cairo', 'state': 'Cairo Governorate', 'country': 'Egypt', 'postalcode': '4460242', 'address_string': '13 El Thawra St Korba, Heliopolis, Cairo 4460242 Egypt'}}, {'location_id': '16714835', 'name': 'Starbucks Reserve(R) Roastery Tokyo', 'address_obj': {'street1': '2-19-23 Aodabai', 'city': 'Meguro', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '153-0042', 'address_string': '2-19-23 Aodabai, Meguro 153-0042 Tokyo Prefecture'}}, {'location_id': '9798604', 'name': 'Tokyo Sushi', 'address_obj': {'street1': 'Rua de Alexandre Herculano 345', 'city': 'Porto', 'country': 'Portugal', 'postalcode': '4000-055', 'address_string': 'Rua de Alexandre Herculano 345, Porto 4000-055 Portugal'}}, {'location_id': '5113133', 'name': "Tokyo Jo's", 'address_obj': {'street1': 'Kent Avenue', 'street2': 'Sandals Montego Bay', 'city': 'Montego Bay', 'state': 'Jamaica', 'country': 'Caribbean', 'address_string': 'Kent Avenue Sandals Montego Bay, Montego Bay Jamaica'}}, {'location_id': '21356820', 'name': 'Tokyo Tokyo Central', 'address_obj': {'street1': '157 Salah Al Din St - Deira', 'street2': 'at Ramada By Wyndham Dubai Deira', 'city': 'Dubai', 'state': 'Emirate of Dubai', 'country': 'United Arab Emirates', 'address_string': '157 Salah Al Din St - Deira at Ramada By Wyndham Dubai Deira, Dubai United Arab Emirates'}}, {'location_id': '2167155', 'name': 'Tokyo Pot', 'address_obj': {'street1': '108 W 10th Ave', 'street2': '', 'city': 'Stillwater', 'state': 'Oklahoma', 'country': 'United States', 'postalcode': '74074-4627', 'address_string': '108 W 10th Ave, Stillwater, OK 74074-4627'}}, {'location_id': '1106443', 'name': 'Tokyo Japanese Restaurant', 'address_obj': {'street1': 'Strada profesor Marinescu Gheorghe No. 5', 'street2': '', 'city': 'Cluj-Napoca', 'country': 'Romania', 'postalcode': '400337', 'address_string': 'Strada profesor Marinescu Gheorghe No. 5, Cluj-Napoca 400337 Romania'}}]
    activities websites: [{'location_id': '14951238', 'name': 'teamLab Planets TOKYO', 'location': (35.649307, 139.78976), 'website': 'http://www.teamlab.art/e/planets/'}, {'location_id': '144151', 'name': 'Little Tokyo', 'location': (34.05114, -118.23803), 'website': 'http://www.visitlittletokyo.com/'}, {'location_id': '320047', 'name': 'Tokyo Tower', 'location': (35.65858, 139.74544), 'website': 'http://www.tokyotower.co.jp/'}, {'location_id': '1872416', 'name': 'Tokyo Skytree', 'location': (35.71007, 139.81065), 'website': 'http://www.tokyo-skytree.jp/en/'}, {'location_id': '320634', 'name': 'Tokyo Disneyland', 'location': (35.632835, 139.88039), 'website': 'https://www.tokyodisneyresort.jp/en/index.html'}, {'location_id': '1509275', 'name': 'Tokyo Metro', 'location': (35.683125, 139.73866), 'website': 'http://www.tokyometro.jp/index.html'}, {'location_id': '12310322', 'name': 'Tokyo Localized - Free Walking Tour in Tokyo & More', 'location': (35.699043, 139.77283), 'website': 'http://www.tokyolocalized.com/'}, {'location_id': '7744338', 'name': 'Waho-An NATURE Tokyo', 'location': (35.651203, 139.70538), 'website': 'http://www.natura-w.com/'}, {'location_id': '550327', 'name': 'Tokyo Central Railway Station', 'location': (35.681553, 139.76544), 'website': 'http://www.tokyostationcity.com/'}, {'location_id': '320639', 'name': 'Tokyo DisneySea', 'location': (35.62681, 139.88501), 'website': 'https://www.tokyodisneyresort.jp/tds/'}, {'location_id': '7604418', 'name': 'Tokyo Bay', 'location': (-36.786903, 174.77399), 'website': 'http://www.tokyobay.co.nz/'}, {'location_id': '1010352', 'name': 'NINJA TOKYO', 'location': (35.684948, 139.76709), 'website': 'https://www.ninja-tokyo.jp/home/home-en/'}, {'location_id': '1160290', 'name': 'Tokyo', 'location': (24.718328, 46.686707), 'website': 'http://www.tokyoarabia.com'}, {'location_id': '24035984', 'name': 'Tokyo Restaurant', 'location': (30.090359, 31.326263), 'website': 'https://www.instagram.com/tokyorestaurant_/?igshid=YmMyMTA2M2Y%3D'}, {'location_id': '16714835', 'name': 'Starbucks Reserve(R) Roastery Tokyo', 'location': (35.649372, 139.69258), 'website': 'http://store.starbucks.co.jp/detail-2381/'}, {'location_id': '9798604', 'name': 'Tokyo Sushi', 'location': (41.14435, -8.605821), 'website': 'http://www.facebook.com/Tokyosushi2'}, {'location_id': '5113133', 'name': "Tokyo Jo's", 'location': (18.509495, -77.9045), 'website': 'http://www.sandals.com/main/montego/mo-dining.cfm'}, {'location_id': '21356820', 'name': 'Tokyo Tokyo Central', 'location': (25.270615, 55.321823), 'website': 'https://www.facebook.com/TokyoTokyoCentralOfiicial'}, {'location_id': '2167155', 'name': 'Tokyo Pot', 'location': (36.111465, -97.059135), 'website': 'http://www.facebook.com/TokyoPot?rf=123605501023078'}, {'location_id': '1106443', 'name': 'Tokyo Japanese Restaurant', 'location': (46.763035, 23.583824), 'website': 'http://www.tokyorestaurant.ro/'}]
2024-03-14 20:01:10,473 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'Destination: Tokyo\n    Budget: 7000\n    Dates: From 2024-05-01 to 2024-05-08\n    Flights Info: {\'search_metadata\': {\'id\': \'65f339e3351764ab52b38f92\', \'status\': \'Success\', \'json_endpoint\': \'https://serpapi.com/searches/0d91aaecbbcff35c/65f339e3351764ab52b38f92.json\', \'created_at\': \'2024-03-14 17:54:43 UTC\', \'processed_at\': \'2024-03-14 17:54:43 UTC\', \'google_flights_url\': \'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&q=Flights+to+NRT+from+TLV+on+2024-05-01+through+2024-05-08\', \'raw_html_file\': \'https://serpapi.com/searches/0d91aaecbbcff35c/65f339e3351764ab52b38f92.html\', \'prettify_html_file\': \'https://serpapi.com/searches/0d91aaecbbcff35c/65f339e3351764ab52b38f92.prettify\', \'total_time_taken\': 5.55}, \'search_parameters\': {\'engine\': \'google_flights\', \'hl\': \'en\', \'gl\': \'us\', \'departure_id\': \'TLV\', \'arrival_id\': \'NRT\', \'outbound_date\': \'2024-05-01\', \'return_date\': \'2024-05-08\', \'currency\': \'USD\'}, \'other_flights\': [{\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 15:20\'}, \'arrival_airport\': {\'name\': \'Vienna International Airport\', \'id\': \'VIE\', \'time\': \'2024-05-01 18:05\'}, \'duration\': 225, \'airplane\': \'Airbus A321\', \'airline\': \'Austrian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OS.png\', \'travel_class\': \'Economy\', \'flight_number\': \'OS 858\', \'legroom\': \'29 in\', \'extensions\': [\'Below average legroom (29 in)\', \'Wi-Fi for a fee\', \'In-seat USB outlet\', \'Carbon emissions estimate: 216 kg\'], \'often_delayed_by_over_30_min\': True}, {\'departure_airport\': {\'name\': \'Vienna International Airport\', \'id\': \'VIE\', \'time\': \'2024-05-02 13:30\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-03 08:50\'}, \'duration\': 740, \'airplane\': \'Boeing 777\', \'airline\': \'Austrian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OS.png\', \'travel_class\': \'Economy\', \'flight_number\': \'OS 51\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 693 kg\'], \'overnight\': True}], \'layovers\': [{\'duration\': 1165, \'name\': \'Vienna International Airport\', \'id\': \'VIE\', \'overnight\': True}], \'total_duration\': 2130, \'carbon_emissions\': {\'this_flight\': 911000, \'typical_for_this_route\': 891000, \'difference_percent\': 2}, \'price\': 967, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OS.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFZ3BQVXpnMU9IeFBVelV4R2dzSWxmTUZFQUlhQTFWVFJEZ2NjSlh6QlE9PSIsW1siVExWIiwiMjAyNC0wNS0wMSIsIlZJRSIsbnVsbCwiT1MiLCI4NTgiXSxbIlZJRSIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk9TIiwiNTEiXV1d\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 13:55\'}, \'arrival_airport\': {\'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\', \'time\': \'2024-05-01 16:10\'}, \'duration\': 135, \'airplane\': \'Airbus A320\', \'airline\': \'Aegean\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/A3.png\', \'travel_class\': \'Economy\', \'flight_number\': \'A3 925\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Carbon emissions estimate: 115 kg\']}, {\'departure_airport\': {\'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\', \'time\': \'2024-05-01 21:25\'}, \'arrival_airport\': {\'name\': \'Vienna International Airport\', \'id\': \'VIE\', \'time\': \'2024-05-01 22:40\'}, \'duration\': 135, \'airplane\': \'Airbus A320\', \'airline\': \'Austrian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OS.png\', \'travel_class\': \'Economy\', \'flight_number\': \'OS 808\', \'legroom\': \'28 in\', \'extensions\': [\'Below average legroom (28 in)\', \'In-seat USB outlet\', \'Carbon emissions estimate: 128 kg\']}, {\'departure_airport\': {\'name\': \'Vienna International Airport\', \'id\': \'VIE\', \'time\': \'2024-05-02 13:30\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-03 08:50\'}, \'duration\': 740, \'airplane\': \'Boeing 777\', \'airline\': \'Austrian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OS.png\', \'travel_class\': \'Economy\', \'flight_number\': \'OS 51\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 693 kg\'], \'overnight\': True}], \'layovers\': [{\'duration\': 315, \'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\'}, {\'duration\': 890, \'name\': \'Vienna International Airport\', \'id\': \'VIE\', \'overnight\': True}], \'total_duration\': 2215, \'carbon_emissions\': {\'this_flight\': 938000, \'typical_for_this_route\': 891000, \'difference_percent\': 5}, \'price\': 1185, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaEJCTXpreU5YeFBVemd3T0h4UFV6VXhHZ3NJd1owSEVBSWFBMVZUUkRnY2NNR2RCdz09IixbWyJUTFYiLCIyMDI0LTA1LTAxIiwiQVRIIixudWxsLCJBMyIsIjkyNSJdLFsiQVRIIiwiMjAyNC0wNS0wMSIsIlZJRSIsbnVsbCwiT1MiLCI4MDgiXSxbIlZJRSIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk9TIiwiNTEiXV1d\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 10:00\'}, \'arrival_airport\': {\'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'time\': \'2024-05-01 14:15\'}, \'duration\': 255, \'airplane\': \'Boeing 737MAX 8 Passenger\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 415\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Stream media to your device\', \'Carbon emissions estimate: 188 kg\']}, {\'departure_airport\': {\'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'time\': \'2024-05-01 22:35\'}, \'arrival_airport\': {\'name\': \'Incheon International Airport\', \'id\': \'ICN\', \'time\': \'2024-05-02 16:00\'}, \'duration\': 685, \'airplane\': \'Boeing 787\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 672\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 664 kg\'], \'overnight\': True}, {\'departure_airport\': {\'name\': \'Incheon International Airport\', \'id\': \'ICN\', \'time\': \'2024-05-02 17:40\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-02 20:05\'}, \'duration\': 145, \'airplane\': \'Boeing 787\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 672\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 118 kg\']}], \'layovers\': [{\'duration\': 500, \'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\'}, {\'duration\': 100, \'name\': \'Incheon International Airport\', \'id\': \'ICN\'}], \'total_duration\': 1685, \'carbon_emissions\': {\'this_flight\': 971000, \'typical_for_this_route\': 891000, \'difference_percent\': 9}, \'price\': 1203, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaEZGVkRReE5YeEZWRFkzTW54RlZEWTNNaG9MQ09lckJ4QUNHZ05WVTBRNEhIRG5xd2M9IixbWyJUTFYiLCIyMDI0LTA1LTAxIiwiQUREIixudWxsLCJFVCIsIjQxNSJdLFsiQUREIiwiMjAyNC0wNS0wMSIsIklDTiIsbnVsbCwiRVQiLCI2NzIiXSxbIklDTiIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIkVUIiwiNjcyIl1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 05:00\'}, \'arrival_airport\': {\'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\', \'time\': \'2024-05-01 07:10\'}, \'duration\': 130, \'airplane\': \'Airbus A320\', \'airline\': \'Aegean\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/A3.png\', \'travel_class\': \'Economy\', \'flight_number\': \'A3 929\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Carbon emissions estimate: 115 kg\']}, {\'departure_airport\': {\'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\', \'time\': \'2024-05-01 08:35\'}, \'arrival_airport\': {\'name\': \'Munich International Airport\', \'id\': \'MUC\', \'time\': \'2024-05-01 10:15\'}, \'duration\': 160, \'airplane\': \'Airbus A320neo\', \'airline\': \'Aegean\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/A3.png\', \'travel_class\': \'Economy\', \'flight_number\': \'A3 802\', \'ticket_also_sold_by\': [\'Lufthansa\'], \'legroom\': \'28 in\', \'extensions\': [\'Below average legroom (28 in)\', \'Free Wi-Fi\', \'In-seat USB outlet\', \'Carbon emissions estimate: 109 kg\']}, {\'departure_airport\': {\'name\': \'Munich International Airport\', \'id\': \'MUC\', \'time\': \'2024-05-01 11:55\'}, \'arrival_airport\': {\'name\': \'Kansai International Airport\', \'id\': \'KIX\', \'time\': \'2024-05-02 06:55\'}, \'duration\': 720, \'airplane\': \'Airbus A350\', \'airline\': \'Lufthansa\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LH.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LH 742\', \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'Wi-Fi for a fee\', \'In-seat power & USB outlets\', \'On-demand video\', \'Carbon emissions estimate: 556 kg\'], \'overnight\': True}, {\'departure_airport\': {\'name\': \'Osaka International Airport\', \'id\': \'ITM\', \'time\': \'2024-05-02 14:15\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-02 15:40\'}, \'duration\': 85, \'airplane\': \'Boeing 737\', \'airline\': \'ANA\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/NH.png\', \'travel_class\': \'Economy\', \'flight_number\': \'NH 2178\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'Free Wi-Fi\', \'Stream media to your device\', \'Carbon emissions estimate: 84 kg\']}], \'layovers\': [{\'duration\': 85, \'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\'}, {\'duration\': 100, \'name\': \'Munich International Airport\', \'id\': \'MUC\'}, {\'duration\': 440, \'name\': \'Osaka International Airport\', \'id\': \'KIX\'}], \'total_duration\': 1720, \'carbon_emissions\': {\'this_flight\': 867000, \'typical_for_this_route\': 891000, \'difference_percent\': -3}, \'price\': 1282, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaGhCTXpreU9YeEJNemd3TW54TVNEYzBNbnhPU0RJeE56Z2FDd2pENlFjUUFob0RWVk5FT0J4d3cra0giLFtbIlRMViIsIjIwMjQtMDUtMDEiLCJBVEgiLG51bGwsIkEzIiwiOTI5Il0sWyJBVEgiLCIyMDI0LTA1LTAxIiwiTVVDIixudWxsLCJBMyIsIjgwMiJdLFsiTVVDIiwiMjAyNC0wNS0wMSIsIktJWCIsbnVsbCwiTEgiLCI3NDIiXSxbIklUTSIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk5IIiwiMjE3OCJdXV0=\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 10:00\'}, \'arrival_airport\': {\'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'time\': \'2024-05-01 14:15\'}, \'duration\': 255, \'airplane\': \'Boeing 737MAX 8 Passenger\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 415\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Stream media to your device\', \'Carbon emissions estimate: 188 kg\']}, {\'departure_airport\': {\'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'time\': \'2024-05-01 22:35\'}, \'arrival_airport\': {\'name\': \'Incheon International Airport\', \'id\': \'ICN\', \'time\': \'2024-05-02 16:00\'}, \'duration\': 685, \'airplane\': \'Boeing 787\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 672\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 664 kg\'], \'overnight\': True}, {\'departure_airport\': {\'name\': \'Incheon International Airport\', \'id\': \'ICN\', \'time\': \'2024-05-02 18:30\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-02 21:00\'}, \'duration\': 150, \'airplane\': \'Airbus A330\', \'airline\': \'Asiana\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OZ.png\', \'travel_class\': \'Economy\', \'flight_number\': \'OZ 108\', \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'In-seat power outlet\', \'On-demand video\', \'Carbon emissions estimate: 123 kg\']}], \'layovers\': [{\'duration\': 500, \'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\'}, {\'duration\': 150, \'name\': \'Incheon International Airport\', \'id\': \'ICN\'}], \'total_duration\': 1740, \'carbon_emissions\': {\'this_flight\': 976000, \'typical_for_this_route\': 891000, \'difference_percent\': 10}, \'price\': 1312, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaEZGVkRReE5YeEZWRFkzTW54UFdqRXdPQm9MQ1B1QUNCQUNHZ05WVTBRNEhIRDdnQWc9IixbWyJUTFYiLCIyMDI0LTA1LTAxIiwiQUREIixudWxsLCJFVCIsIjQxNSJdLFsiQUREIiwiMjAyNC0wNS0wMSIsIklDTiIsbnVsbCwiRVQiLCI2NzIiXSxbIklDTiIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk9aIiwiMTA4Il1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 04:45\'}, \'arrival_airport\': {\'name\': \'Frankfurt Airport\', \'id\': \'FRA\', \'time\': \'2024-05-01 08:20\'}, \'duration\': 275, \'airplane\': \'Airbus A321neo\', \'airline\': \'Lufthansa\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LH.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LH 691\', \'legroom\': \'29 in\', \'extensions\': [\'Below average legroom (29 in)\', \'In-seat USB outlet\', \'Carbon emissions estimate: 213 kg\'], \'overnight\': True}, {\'departure_airport\': {\'name\': \'Frankfurt Airport\', \'id\': \'FRA\', \'time\': \'2024-05-01 10:15\'}, \'arrival_airport\': {\'name\': \'Munich International Airport\', \'id\': \'MUC\', \'time\': \'2024-05-01 11:10\'}, \'duration\': 55, \'airplane\': \'Airbus A321\', \'airline\': \'Lufthansa\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LH.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LH 100\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Wi-Fi for a fee\', \'Carbon emissions estimate: 54 kg\'], \'often_delayed_by_over_30_min\': True}, {\'departure_airport\': {\'name\': \'Munich International Airport\', \'id\': \'MUC\', \'time\': \'2024-05-01 11:55\'}, \'arrival_airport\': {\'name\': \'Kansai International Airport\', \'id\': \'KIX\', \'time\': \'2024-05-02 06:55\'}, \'duration\': 720, \'airplane\': \'Airbus A350\', \'airline\': \'Lufthansa\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LH.png\', \'travel_class\': \'Premium Economy\', \'flight_number\': \'LH 742\', \'extensions\': [\'Extra reclining seat\', \'Wi-Fi for a fee\', \'In-seat power & USB outlets\', \'On-demand video\', \'Carbon emissions estimate: 834 kg\'], \'overnight\': True}, {\'departure_airport\': {\'name\': \'Osaka International Airport\', \'id\': \'ITM\', \'time\': \'2024-05-02 14:15\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-02 15:40\'}, \'duration\': 85, \'airplane\': \'Boeing 737\', \'airline\': \'ANA\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/NH.png\', \'travel_class\': \'Economy\', \'flight_number\': \'NH 2178\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'Free Wi-Fi\', \'Stream media to your device\', \'Carbon emissions estimate: 84 kg\']}], \'layovers\': [{\'duration\': 115, \'name\': \'Frankfurt Airport\', \'id\': \'FRA\'}, {\'duration\': 45, \'name\': \'Munich International Airport\', \'id\': \'MUC\'}, {\'duration\': 440, \'name\': \'Osaka International Airport\', \'id\': \'KIX\'}], \'total_duration\': 1735, \'carbon_emissions\': {\'this_flight\': 1188000, \'typical_for_this_route\': 891000, \'difference_percent\': 33}, \'price\': 1322, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaGhNU0RZNU1YeE1TREV3TUh4TVNEYzBNbnhPU0RJeE56Z2FDd2luaUFnUUFob0RWVk5FT0J4d3A0Z0kiLFtbIlRMViIsIjIwMjQtMDUtMDEiLCJGUkEiLG51bGwsIkxIIiwiNjkxIl0sWyJGUkEiLCIyMDI0LTA1LTAxIiwiTVVDIixudWxsLCJMSCIsIjEwMCJdLFsiTVVDIiwiMjAyNC0wNS0wMSIsIktJWCIsbnVsbCwiTEgiLCI3NDIiXSxbIklUTSIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk5IIiwiMjE3OCJdXV0=\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 05:00\'}, \'arrival_airport\': {\'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\', \'time\': \'2024-05-01 07:10\'}, \'duration\': 130, \'airplane\': \'Airbus A320\', \'airline\': \'Aegean\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/A3.png\', \'travel_class\': \'Economy\', \'flight_number\': \'A3 929\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Carbon emissions estimate: 115 kg\']}, {\'departure_airport\': {\'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\', \'time\': \'2024-05-01 08:30\'}, \'arrival_airport\': {\'name\': \'Zurich Airport\', \'id\': \'ZRH\', \'time\': \'2024-05-01 10:20\'}, \'duration\': 170, \'airplane\': \'Airbus A320neo\', \'airline\': \'Aegean\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/A3.png\', \'travel_class\': \'Economy\', \'flight_number\': \'A3 850\', \'ticket_also_sold_by\': [\'SWISS\'], \'legroom\': \'28 in\', \'extensions\': [\'Below average legroom (28 in)\', \'Free Wi-Fi\', \'In-seat USB outlet\', \'Carbon emissions estimate: 116 kg\']}, {\'departure_airport\': {\'name\': \'Zurich Airport\', \'id\': \'ZRH\', \'time\': \'2024-05-01 13:05\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-02 08:50\'}, \'duration\': 765, \'airplane\': \'Boeing 777\', \'airline\': \'SWISS\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LX.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LX 160\', \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'Wi-Fi for a fee\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 774 kg\'], \'overnight\': True}], \'layovers\': [{\'duration\': 80, \'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\'}, {\'duration\': 165, \'name\': \'Zurich Airport\', \'id\': \'ZRH\'}], \'total_duration\': 1310, \'carbon_emissions\': {\'this_flight\': 1006000, \'typical_for_this_route\': 891000, \'difference_percent\': 13}, \'price\': 1425, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaEZCTXpreU9YeEJNemcxTUh4TVdERTJNQm9MQ05uWUNCQUNHZ05WVTBRNEhIRFoyQWc9IixbWyJUTFYiLCIyMDI0LTA1LTAxIiwiQVRIIixudWxsLCJBMyIsIjkyOSJdLFsiQVRIIiwiMjAyNC0wNS0wMSIsIlpSSCIsbnVsbCwiQTMiLCI4NTAiXSxbIlpSSCIsIjIwMjQtMDUtMDEiLCJOUlQiLG51bGwsIkxYIiwiMTYwIl1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 14:45\'}, \'arrival_airport\': {\'name\': \'Zayed International Airport\', \'id\': \'AUH\', \'time\': \'2024-05-01 18:55\'}, \'duration\': 190, \'airplane\': \'Airbus A321\', \'airline\': \'Etihad\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/EY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'EY 594\', \'ticket_also_sold_by\': [\'El Al\'], \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'Wi-Fi for a fee\', \'In-seat USB outlet\', \'Stream media to your device\', \'Carbon emissions estimate: 192 kg\']}, {\'departure_airport\': {\'name\': \'Zayed International Airport\', \'id\': \'AUH\', \'time\': \'2024-05-01 21:55\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-02 13:00\'}, \'duration\': 605, \'airplane\': \'Airbus A350\', \'airline\': \'Etihad\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/EY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'EY 878\', \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'Wi-Fi for a fee\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 472 kg\'], \'overnight\': True}], \'layovers\': [{\'duration\': 180, \'name\': \'Zayed International Airport\', \'id\': \'AUH\'}], \'total_duration\': 975, \'carbon_emissions\': {\'this_flight\': 665000, \'typical_for_this_route\': 891000, \'difference_percent\': -25}, \'price\': 1702, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/EY.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFZ3RGV1RVNU5IeEZXVGczT0JvTENLdXhDaEFDR2dOVlUwUTRISENyc1FvPSIsW1siVExWIiwiMjAyNC0wNS0wMSIsIkFVSCIsbnVsbCwiRVkiLCI1OTQiXSxbIkFVSCIsIjIwMjQtMDUtMDEiLCJOUlQiLG51bGwsIkVZIiwiODc4Il1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 20:15\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-02 13:50\'}, \'duration\': 695, \'airplane\': \'Boeing 787\', \'airline\': \'El Al\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LY 91\', \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'Wi-Fi for a fee\', \'In-seat power & USB outlets\', \'On-demand video\', \'Carbon emissions estimate: 634 kg\'], \'overnight\': True}], \'total_duration\': 695, \'carbon_emissions\': {\'this_flight\': 634000, \'typical_for_this_route\': 891000, \'difference_percent\': -29}, \'price\': 2012, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFZ1JNV1RreEdnc0l4Nk1NRUFJYUExVlRSRGdjY01lakRBPT0iLFtbIlRMViIsIjIwMjQtMDUtMDEiLCJOUlQiLG51bGwsIkxZIiwiOTEiXV1d\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 19:50\'}, \'arrival_airport\': {\'name\': \'Dubai International Airport\', \'id\': \'DXB\', \'time\': \'2024-05-02 00:10\'}, \'duration\': 200, \'airplane\': \'Boeing 737MAX 8 Passenger\', \'airline\': \'flydubai\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/FZ.png\', \'travel_class\': \'Economy\', \'flight_number\': \'FZ 1126\', \'ticket_also_sold_by\': [\'Emirates\'], \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 149 kg\']}, {\'departure_airport\': {\'name\': \'Dubai International Airport\', \'id\': \'DXB\', \'time\': \'2024-05-02 02:40\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-02 17:35\'}, \'duration\': 595, \'airplane\': \'Airbus A380\', \'airline\': \'Emirates\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/EK.png\', \'travel_class\': \'Economy\', \'flight_number\': \'EK 318\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'Wi-Fi for a fee\', \'In-seat power & USB outlets\', \'On-demand video\', \'Carbon emissions estimate: 671 kg\'], \'overnight\': True}], \'layovers\': [{\'duration\': 150, \'name\': \'Dubai International Airport\', \'id\': \'DXB\', \'overnight\': True}], \'total_duration\': 945, \'carbon_emissions\': {\'this_flight\': 820000, \'typical_for_this_route\': 891000, \'difference_percent\': -8}, \'price\': 3203, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFZ3hHV2pFeE1qWjhSVXN6TVRnYUN3ai94Uk1RQWhvRFZWTkVPQnh3LzhVVCIsW1siVExWIiwiMjAyNC0wNS0wMSIsIkRYQiIsbnVsbCwiRloiLCIxMTI2Il0sWyJEWEIiLCIyMDI0LTA1LTAyIiwiTlJUIixudWxsLCJFSyIsIjMxOCJdXV0=\'}], \'price_insights\': {\'lowest_price\': 967, \'price_level\': \'typical\', \'typical_price_range\': [760, 1150], \'price_history\': [[1705183200, 1034], [1705269600, 1034], [1705356000, 1034], [1705442400, 1034], [1705528800, 1034], [1705615200, 1033], [1705701600, 1033], [1705788000, 1033], [1705874400, 1033], [1705960800, 1033], [1706047200, 1033], [1706133600, 1033], [1706220000, 1033], [1706306400, 1033], [1706392800, 1033], [1706479200, 1033], [1706565600, 1033], [1706652000, 1033], [1706738400, 1033], [1706824800, 1033], [1706911200, 1033], [1706997600, 983], [1707084000, 983], [1707170400, 982], [1707256800, 906], [1707343200, 982], [1707429600, 982], [1707516000, 982], [1707602400, 982], [1707688800, 982], [1707775200, 982], [1707861600, 982], [1707948000, 982], [1708034400, 982], [1708120800, 1002], [1708207200, 1003], [1708293600, 1033], [1708380000, 1033], [1708466400, 1005], [1708552800, 1005], [1708639200, 1055], [1708725600, 1056], [1708812000, 1057], [1708898400, 1007], [1708984800, 1006], [1709071200, 1057], [1709157600, 948], [1709244000, 897], [1709330400, 947], [1709416800, 947], [1709503200, 997], [1709589600, 997], [1709676000, 997], [1709762400, 1008], [1709848800, 949], [1709935200, 949], [1710021600, 951], [1710108000, 951], [1710194400, 1061], [1710280800, 1002], [1710367200, 967]]}}\n    Accommodation Info: Top Hotels in Tokyo:\n\n1. Shinagawa Prince Hotel\n   - Check-in Time: 3:00\u202fPM\n   - Check-out Time: 11:00\u202fAM\n   - Rate Per Night (Lowest): $134\n   - Total Rate (Lowest): $938\n   - Nearby Places: Shinagawa Station, Haneda Airport, 中国料理 品川大飯店\n   - Link: http://www.princehotels.co.jp/shinagawa/\n\n2. Tokyo Bay Shiomi Prince Hotel\n   - Check-in Time: 3:00\u202fPM\n   - Check-out Time: 11:00\u202fAM\n   - Rate Per Night (Lowest): $173\n   - Total Rate (Lowest): $1,210\n   - Nearby Places: Shiomi Station, Haneda Airport\n   - Link: https://www.princehotels.com/shiomi/\n\n3. Shinjuku Granbell Hotel\n   - Check-in Time: 3:00\u202fPM\n   - Check-out Time: 12:00\u202fPM\n   - Rate Per Night (Lowest): $135\n   - Total Rate (Lowest): $944\n   - Nearby Places: Shinjuku Golden Gai, Higashi-Shinjuku Station, Haneda Airport, ペキンリョウリギョクラン\n   - Link: https://www.granbellhotel.jp/shinjuku/\n\n4. The Prince Park Tower Tokyo\n   - Check-in Time: 3:00\u202fPM\n   - Check-out Time: 12:00\u202fPM\n   - Rate Per Night (Lowest): $259\n   - Total Rate (Lowest): $1,810\n   - Nearby Places: Tokyo Tower, Shibakoen Station, Haneda Airport, Brise Verte\n   - Link: http://www.princehotels.co.jp/parktower/\n\n5. APA Hotel & Resort Ryogoku Eki Tower\n   - Check-in Time: 3:00\u202fPM\n   - Check-out Time: 10:00\u202fAM\n   - Rate Per Night (Lowest): $73\n   - Total Rate (Lowest): $514\n   - Nearby Places: Edo-Tokyo Museum, Ryogoku Station, Haneda Airport, Ryogoku Terrace\n   - Link: https://www.apahotel.com/resort/ryogokueki/?utm_source=google&utm_medium=maps\n    how to arrange the activities: Day 1:\n- Attractions: teamLab Planets TOKYO, Tokyo Tower\n- Restaurants: Tokyo Restaurant\n\nDay 2:\n- Attractions: Tokyo Skytree, Tokyo DisneySea\n- Restaurants: Starbucks Reserve(R) Roastery Tokyo\n\nDay 3:\n- Attractions: Tokyo Metro, Tokyo Localized - Free Walking Tour in Tokyo & More\n- Restaurants: Tokyo Sushi\n\nDay 4:\n- Attractions: Waho-An NATURE Tokyo, Tokyo Central Railway Station, NINJA TOKYO\n- Restaurants: Tokyo Jo\'s\n\nDay 5:\n- Attractions: Tokyo Bay\n- Restaurants: Tokyo Japanese Restaurant\n\nDay 6:\n- Attractions: Little Tokyo\n- Restaurants: Tokyo Pot\n\nDay 7:\n- Attractions: None\n- Restaurants: None\n    Activities Info: [{\'location_id\': \'14951238\', \'name\': \'teamLab Planets TOKYO\', \'address_obj\': {\'street1\': \'6-1-16\', \'city\': \'Toyosu\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'135-0061\', \'address_string\': \'6-1-16, Toyosu, Koto 135-0061 Tokyo Prefecture\'}}, {\'location_id\': \'144151\', \'name\': \'Little Tokyo\', \'address_obj\': {\'street1\': \'Downtown\', \'street2\': \'Southeast of the Civic Center; bounded by 1st\', \'city\': \'Los Angeles\', \'state\': \'California\', \'country\': \'United States\', \'postalcode\': \'\', \'address_string\': \'Downtown Southeast of the Civic Center; bounded by 1st, Los Angeles, CA\'}}, {\'location_id\': \'320047\', \'name\': \'Tokyo Tower\', \'address_obj\': {\'street1\': \'4-chome 2-8\', \'street2\': \'\', \'city\': \'Shibakoen\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'105-0011\', \'address_string\': \'4-chome 2-8, Shibakoen, Minato 105-0011 Tokyo Prefecture\'}}, {\'location_id\': \'1872416\', \'name\': \'Tokyo Skytree\', \'address_obj\': {\'street1\': \'1 Chome-1-2\', \'street2\': \'\', \'city\': \'Oshiage\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'131-8634\', \'address_string\': \'1 Chome-1-2, Oshiage, Sumida 131-8634 Tokyo Prefecture\'}}, {\'location_id\': \'320634\', \'name\': \'Tokyo Disneyland\', \'address_obj\': {\'street1\': \'1-1 Maihama\', \'street2\': \'\', \'city\': \'Maihama\', \'state\': \'Chiba Prefecture\', \'country\': \'Japan\', \'postalcode\': \'279-0031\', \'address_string\': \'1-1 Maihama, Maihama, Urayasu 279-0031 Chiba Prefecture\'}}, {\'location_id\': \'1509275\', \'name\': \'Tokyo Metro\', \'address_obj\': {\'street1\': \'\', \'street2\': \'\', \'city\': \'Kanto\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'address_string\': \'Tokyo Prefecture\'}}, {\'location_id\': \'12310322\', \'name\': \'Tokyo Localized - Free Walking Tour in Tokyo & More\', \'address_obj\': {\'street2\': \'Meeting Place: AKB48 Cafe\', \'city\': \'Chiyoda\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'110-0006\', \'address_string\': \'Meeting Place: AKB48 Cafe, Chiyoda 110-0006 Tokyo Prefecture\'}}, {\'location_id\': \'7744338\', \'name\': \'Waho-An NATURE Tokyo\', \'address_obj\': {\'street1\': \'7-8\', \'street2\': \'Dokken-Daikanyama-Heights1F\', \'city\': \'Daikanyama\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'150-0034\', \'address_string\': \'7-8 Dokken-Daikanyama-Heights1F, Daikanyama, Shibuya 150-0034 Tokyo Prefecture\'}}, {\'location_id\': \'550327\', \'name\': \'Tokyo Central Railway Station\', \'address_obj\': {\'street1\': \'1-9-1\', \'street2\': \'\', \'city\': \'Marunouchi\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'100-0005\', \'address_string\': \'1-9-1, Marunouchi, Chiyoda 100-0005 Tokyo Prefecture\'}}, {\'location_id\': \'320639\', \'name\': \'Tokyo DisneySea\', \'address_obj\': {\'street1\': \'1-13\', \'city\': \'Maihama\', \'state\': \'Chiba Prefecture\', \'country\': \'Japan\', \'postalcode\': \'279-0031\', \'address_string\': \'1-13, Maihama, Urayasu 279-0031 Chiba Prefecture\'}}, {\'location_id\': \'7604418\', \'name\': \'Tokyo Bay\', \'address_obj\': {\'street1\': \'20 The Strand\', \'street2\': \'Takapuna Beach\', \'city\': \'Takapuna\', \'country\': \'New Zealand\', \'postalcode\': \'0622\', \'address_string\': \'20 The Strand Takapuna Beach, Takapuna, Auckland 0622 New Zealand\'}}, {\'location_id\': \'1010352\', \'name\': \'NINJA TOKYO\', \'address_obj\': {\'street1\': \'2-2-1 Otemachi\', \'street2\': \'Shinotemachi Bldg. B1F\', \'city\': \'Chiyoda\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'100-0004\', \'address_string\': \'2-2-1 Otemachi Shinotemachi Bldg. B1F, Chiyoda 100-0004 Tokyo Prefecture\'}}, {\'location_id\': \'1160290\', \'name\': \'Tokyo\', \'address_obj\': {\'street1\': \'Al uruba Street\', \'street2\': \'\', \'city\': \'Riyadh\', \'state\': \'Riyadh Province\', \'country\': \'Saudi Arabia\', \'postalcode\': \'11323\', \'address_string\': \'Al uruba Street, Riyadh 11323 Saudi Arabia\'}}, {\'location_id\': \'24035984\', \'name\': \'Tokyo Restaurant\', \'address_obj\': {\'street1\': \'13 El Thawra St\', \'street2\': \'Korba, Heliopolis\', \'city\': \'Cairo\', \'state\': \'Cairo Governorate\', \'country\': \'Egypt\', \'postalcode\': \'4460242\', \'address_string\': \'13 El Thawra St Korba, Heliopolis, Cairo 4460242 Egypt\'}}, {\'location_id\': \'16714835\', \'name\': \'Starbucks Reserve(R) Roastery Tokyo\', \'address_obj\': {\'street1\': \'2-19-23 Aodabai\', \'city\': \'Meguro\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'153-0042\', \'address_string\': \'2-19-23 Aodabai, Meguro 153-0042 Tokyo Prefecture\'}}, {\'location_id\': \'9798604\', \'name\': \'Tokyo Sushi\', \'address_obj\': {\'street1\': \'Rua de Alexandre Herculano 345\', \'city\': \'Porto\', \'country\': \'Portugal\', \'postalcode\': \'4000-055\', \'address_string\': \'Rua de Alexandre Herculano 345, Porto 4000-055 Portugal\'}}, {\'location_id\': \'5113133\', \'name\': "Tokyo Jo\'s", \'address_obj\': {\'street1\': \'Kent Avenue\', \'street2\': \'Sandals Montego Bay\', \'city\': \'Montego Bay\', \'state\': \'Jamaica\', \'country\': \'Caribbean\', \'address_string\': \'Kent Avenue Sandals Montego Bay, Montego Bay Jamaica\'}}, {\'location_id\': \'21356820\', \'name\': \'Tokyo Tokyo Central\', \'address_obj\': {\'street1\': \'157 Salah Al Din St - Deira\', \'street2\': \'at Ramada By Wyndham Dubai Deira\', \'city\': \'Dubai\', \'state\': \'Emirate of Dubai\', \'country\': \'United Arab Emirates\', \'address_string\': \'157 Salah Al Din St - Deira at Ramada By Wyndham Dubai Deira, Dubai United Arab Emirates\'}}, {\'location_id\': \'2167155\', \'name\': \'Tokyo Pot\', \'address_obj\': {\'street1\': \'108 W 10th Ave\', \'street2\': \'\', \'city\': \'Stillwater\', \'state\': \'Oklahoma\', \'country\': \'United States\', \'postalcode\': \'74074-4627\', \'address_string\': \'108 W 10th Ave, Stillwater, OK 74074-4627\'}}, {\'location_id\': \'1106443\', \'name\': \'Tokyo Japanese Restaurant\', \'address_obj\': {\'street1\': \'Strada profesor Marinescu Gheorghe No. 5\', \'street2\': \'\', \'city\': \'Cluj-Napoca\', \'country\': \'Romania\', \'postalcode\': \'400337\', \'address_string\': \'Strada profesor Marinescu Gheorghe No. 5, Cluj-Napoca 400337 Romania\'}}]\n    activities websites: [{\'location_id\': \'14951238\', \'name\': \'teamLab Planets TOKYO\', \'location\': (35.649307, 139.78976), \'website\': \'http://www.teamlab.art/e/planets/\'}, {\'location_id\': \'144151\', \'name\': \'Little Tokyo\', \'location\': (34.05114, -118.23803), \'website\': \'http://www.visitlittletokyo.com/\'}, {\'location_id\': \'320047\', \'name\': \'Tokyo Tower\', \'location\': (35.65858, 139.74544), \'website\': \'http://www.tokyotower.co.jp/\'}, {\'location_id\': \'1872416\', \'name\': \'Tokyo Skytree\', \'location\': (35.71007, 139.81065), \'website\': \'http://www.tokyo-skytree.jp/en/\'}, {\'location_id\': \'320634\', \'name\': \'Tokyo Disneyland\', \'location\': (35.632835, 139.88039), \'website\': \'https://www.tokyodisneyresort.jp/en/index.html\'}, {\'location_id\': \'1509275\', \'name\': \'Tokyo Metro\', \'location\': (35.683125, 139.73866), \'website\': \'http://www.tokyometro.jp/index.html\'}, {\'location_id\': \'12310322\', \'name\': \'Tokyo Localized - Free Walking Tour in Tokyo & More\', \'location\': (35.699043, 139.77283), \'website\': \'http://www.tokyolocalized.com/\'}, {\'location_id\': \'7744338\', \'name\': \'Waho-An NATURE Tokyo\', \'location\': (35.651203, 139.70538), \'website\': \'http://www.natura-w.com/\'}, {\'location_id\': \'550327\', \'name\': \'Tokyo Central Railway Station\', \'location\': (35.681553, 139.76544), \'website\': \'http://www.tokyostationcity.com/\'}, {\'location_id\': \'320639\', \'name\': \'Tokyo DisneySea\', \'location\': (35.62681, 139.88501), \'website\': \'https://www.tokyodisneyresort.jp/tds/\'}, {\'location_id\': \'7604418\', \'name\': \'Tokyo Bay\', \'location\': (-36.786903, 174.77399), \'website\': \'http://www.tokyobay.co.nz/\'}, {\'location_id\': \'1010352\', \'name\': \'NINJA TOKYO\', \'location\': (35.684948, 139.76709), \'website\': \'https://www.ninja-tokyo.jp/home/home-en/\'}, {\'location_id\': \'1160290\', \'name\': \'Tokyo\', \'location\': (24.718328, 46.686707), \'website\': \'http://www.tokyoarabia.com\'}, {\'location_id\': \'24035984\', \'name\': \'Tokyo Restaurant\', \'location\': (30.090359, 31.326263), \'website\': \'https://www.instagram.com/tokyorestaurant_/?igshid=YmMyMTA2M2Y%3D\'}, {\'location_id\': \'16714835\', \'name\': \'Starbucks Reserve(R) Roastery Tokyo\', \'location\': (35.649372, 139.69258), \'website\': \'http://store.starbucks.co.jp/detail-2381/\'}, {\'location_id\': \'9798604\', \'name\': \'Tokyo Sushi\', \'location\': (41.14435, -8.605821), \'website\': \'http://www.facebook.com/Tokyosushi2\'}, {\'location_id\': \'5113133\', \'name\': "Tokyo Jo\'s", \'location\': (18.509495, -77.9045), \'website\': \'http://www.sandals.com/main/montego/mo-dining.cfm\'}, {\'location_id\': \'21356820\', \'name\': \'Tokyo Tokyo Central\', \'location\': (25.270615, 55.321823), \'website\': \'https://www.facebook.com/TokyoTokyoCentralOfiicial\'}, {\'location_id\': \'2167155\', \'name\': \'Tokyo Pot\', \'location\': (36.111465, -97.059135), \'website\': \'http://www.facebook.com/TokyoPot?rf=123605501023078\'}, {\'location_id\': \'1106443\', \'name\': \'Tokyo Japanese Restaurant\', \'location\': (46.763035, 23.583824), \'website\': \'http://www.tokyorestaurant.ro/\'}]. this is all the data that i have gathered so far about the trip im planning. please help me to create a detailed plan for the trip based on this data. write brief list of the flights and show to me what is the best flight based on the data i provided. then do the same for the hotels i provided. Then write adetailed plan for each day and consider the budget i have left after the flight and hotel and also take into consideration the arrival time of the flight in your plan for the first day. use the attractions i provided from tripadvisor and the nearby places in the hotel info to create a detailed plan for each day, and for each attraction add the website i provided. use all the budget and tell me recommendations for events and activities ican do in the destination and also include shopping and dining. use the data in the how to arrange the activities to know which activities are close to each other and can be done in the same day.i also want to mention that i will put this plan in my html page in: <div class=trip-plan>{trip_plan_html}</div> so please make the format of the plan in a way that will look good for my html page. (i.e when you write some text in bold then use <b></b> tag and not **bold**).'}], 'model': 'gpt-4-0125-preview'}}
2024-03-14 20:01:10,473 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-14 20:01:10,473 - DEBUG - send_request_headers.complete
2024-03-14 20:01:10,473 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-14 20:01:10,473 - DEBUG - send_request_body.complete
2024-03-14 20:01:10,473 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-14 20:02:44,437 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:02:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-4-0125-preview'), (b'openai-organization', b'reichman-university-wxioss'), (b'openai-processing-ms', b'93532'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'800000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'790688'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'698ms'), (b'x-request-id', b'req_b96e55d2bb0d2bae7a74507764971c91'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'86462adf1ab209b9-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-14 20:02:44,437 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-03-14 20:02:44,437 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-14 20:02:44,437 - DEBUG - receive_response_body.complete
2024-03-14 20:02:44,437 - DEBUG - response_closed.started
2024-03-14 20:02:44,437 - DEBUG - response_closed.complete
2024-03-14 20:02:44,437 - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-03-14 20:02:44,437 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': "I'm planning a trip to Tokyo. Can you help me to create a photo for the trip?", 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}}
2024-03-14 20:02:44,437 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-14 20:02:44,437 - DEBUG - send_request_headers.complete
2024-03-14 20:02:44,437 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-14 20:02:44,437 - DEBUG - send_request_body.complete
2024-03-14 20:02:44,437 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-14 20:02:57,667 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:02:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'reichman-university-wxioss'), (b'x-request-id', b'req_4e48d1a5cc7081a69c5f88c18a5980cc'), (b'openai-processing-ms', b'13018'), (b'access-control-allow-origin', b'*'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'86462d2a6e8109b9-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-14 20:02:57,667 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2024-03-14 20:02:57,667 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-14 20:02:57,667 - DEBUG - receive_response_body.complete
2024-03-14 20:02:57,667 - DEBUG - response_closed.started
2024-03-14 20:02:57,667 - DEBUG - response_closed.complete
2024-03-14 20:02:57,677 - DEBUG - HTTP Request: POST https://api.openai.com/v1/images/generations "200 OK"
2024-03-14 20:04:50,228 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:04:50,229 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:07:57,649 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:07:57,668 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:08:21,600 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:08:21,601 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:23:26,586 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:23:26,601 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:29:23,553 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:29:23,555 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:31:05,346 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:31:05,347 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:31:37,338 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:31:37,340 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:33:00,215 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:33:00,217 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:34:38,089 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:34:38,090 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:05,781 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:05,782 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:17,586 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:17,586 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:17,633 - DEBUG - connect_tcp.started host='serpapi.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:17,683 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D4330700>
2024-03-14 20:36:17,684 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D4302940> server_hostname='serpapi.com' timeout=5.0
2024-03-14 20:36:17,901 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D42D6A60>
2024-03-14 20:36:17,901 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:17,901 - DEBUG - send_request_headers.complete
2024-03-14 20:36:17,901 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:17,901 - DEBUG - send_request_body.complete
2024-03-14 20:36:17,901 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:17,935 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:17 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'86465e524cdb09c3-HFA'), (b'CF-Cache-Status', b'HIT'), (b'Age', b'2145'), (b'Cache-Control', b'max-age=3600, public'), (b'ETag', b'W/"5b732c0af34ff17b97125bd6834e7968"'), (b'Vary', b'Accept-Encoding'), (b'referrer-policy', b'strict-origin-when-cross-origin'), (b'serpapi-search-id', b'65f339e3351764ab52b38f92'), (b'x-content-type-options', b'nosniff'), (b'x-download-options', b'noopen'), (b'x-frame-options', b'SAMEORIGIN'), (b'x-permitted-cross-domain-policies', b'none'), (b'x-request-id', b'ba1d9420-fe50-421a-9c6f-5a84e3ad8b78'), (b'x-robots-tag', b'noindex, nofollow'), (b'x-runtime', b'0.569600'), (b'x-xss-protection', b'1; mode=block'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-14 20:36:17,935 - INFO - HTTP Request: GET https://serpapi.com/search?engine=google_flights&departure_id=TLV&arrival_id=NRT&outbound_date=2024-05-01&return_date=2024-05-08&currency=USD&hl=en&api_key=669f434e4ba2136c8626035972520de9b20e743726e97f32db7f33e748d2e561 "HTTP/1.1 200 OK"
2024-03-14 20:36:17,935 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:17,935 - DEBUG - receive_response_body.complete
2024-03-14 20:36:17,935 - DEBUG - response_closed.started
2024-03-14 20:36:17,935 - DEBUG - response_closed.complete
2024-03-14 20:36:17,935 - DEBUG - close.started
2024-03-14 20:36:17,935 - DEBUG - close.complete
2024-03-14 20:36:17,935 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:17,935 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:17,951 - DEBUG - connect_tcp.started host='serpapi.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:17,962 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D4390250>
2024-03-14 20:36:17,962 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D43463C0> server_hostname='serpapi.com' timeout=5.0
2024-03-14 20:36:18,001 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D4363FD0>
2024-03-14 20:36:18,002 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:18,002 - DEBUG - send_request_headers.complete
2024-03-14 20:36:18,002 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:18,002 - DEBUG - send_request_body.complete
2024-03-14 20:36:18,002 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:18,036 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:17 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'86465e52ee3d09b9-HFA'), (b'CF-Cache-Status', b'HIT'), (b'Age', b'2141'), (b'Cache-Control', b'max-age=3600, public'), (b'ETag', b'W/"f308d06e6138e4b7c22b5744bfec4adc"'), (b'Vary', b'Accept-Encoding'), (b'referrer-policy', b'strict-origin-when-cross-origin'), (b'serpapi-search-id', b'65f33b408ccee01533c590d4'), (b'x-content-type-options', b'nosniff'), (b'x-download-options', b'noopen'), (b'x-frame-options', b'SAMEORIGIN'), (b'x-permitted-cross-domain-policies', b'none'), (b'x-request-id', b'75252ccc-ed47-4d29-ab3f-4a81d0fff3b1'), (b'x-robots-tag', b'noindex, nofollow'), (b'x-runtime', b'3.668249'), (b'x-xss-protection', b'1; mode=block'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-14 20:36:18,036 - INFO - HTTP Request: GET https://serpapi.com/search?engine=google_hotels&q=central%20hotels%20in%20Tokyo&check_in_date=2024-05-01&check_out_date=2024-05-08&currency=USD&api_key=669f434e4ba2136c8626035972520de9b20e743726e97f32db7f33e748d2e561 "HTTP/1.1 200 OK"
2024-03-14 20:36:18,036 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:18,036 - DEBUG - receive_response_body.complete
2024-03-14 20:36:18,036 - DEBUG - response_closed.started
2024-03-14 20:36:18,036 - DEBUG - response_closed.complete
2024-03-14 20:36:18,036 - DEBUG - close.started
2024-03-14 20:36:18,036 - DEBUG - close.complete
2024-03-14 20:36:18,086 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'This is the hotels list I have gathered so far. Write me a list of the top hotels and the info on each hotel you got.\nName: Shinagawa Prince Hotel, Link: http://www.princehotels.co.jp/shinagawa/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $134, Total Rate (Lowest): $938, Nearby Places: Shinagawa Station, Haneda Airport, 中国料理 品川大飯店\nName: Tokyo Bay Shiomi Prince Hotel, Link: https://www.princehotels.com/shiomi/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $173, Total Rate (Lowest): $1,210, Nearby Places: Shiomi Station, Haneda Airport\nName: Shinjuku Granbell Hotel, Link: https://www.granbellhotel.jp/shinjuku/, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $135, Total Rate (Lowest): $944, Nearby Places: Shinjuku Golden Gai, Higashi-Shinjuku Station, Haneda Airport, ペキンリョウリギョクラン\nName: The Prince Park Tower Tokyo, Link: http://www.princehotels.co.jp/parktower/, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $259, Total Rate (Lowest): $1,810, Nearby Places: Tokyo Tower, Shibakoen Sta., Haneda Airport, Brise Verte\nName: APA Hotel & Resort Ryogoku Eki Tower, Link: https://www.apahotel.com/resort/ryogokueki/?utm_source=google&utm_medium=maps, Check-in Time: 3:00\u202fPM, Check-out Time: 10:00\u202fAM, Rate Per Night (Lowest): $73, Total Rate (Lowest): $514, Nearby Places: Edo-Tokyo Museum, Ryogoku Sta., Haneda Airport, Ryogoku Terrace\nName: Keio Plaza Hotel Tokyo, Link: https://www.keioplaza.co.jp/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $210, Total Rate (Lowest): $1,470, Nearby Places: Tokyo Metropolitan Government Building, Tochomae Station, Haneda Airport, Teppan-Yaki YAMANAMI\nName: Hamacho Hotel, Link: https://hamachohotel.jp/?utm_source=google&utm_medium=bp&utm_campaign=hamacho, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $172, Total Rate (Lowest): $1,202, Nearby Places: Imperial Palace, Suitengumae Sta., Haneda Airport, ガスト 日本橋浜町店\nName: KOKO HOTEL Ginza 1-chome, Link: https://koko-hotels.com/ginza_1/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $103, Total Rate (Lowest): $721, Nearby Places: Imperial Palace, Ginza-itchome Sta., Haneda Airport, Periniiyon Restaurant\nName: ONE@Tokyo, Link: https://onetokyo.com/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $172, Total Rate (Lowest): $1,205, Nearby Places: Tokyo Skytree, Oshiage Sta.(SKYTREE), Haneda Airport\nName: Rembrandt Hotel Tokyo Machida, Link: https://rembrandt-group.com/machida, Check-in Time: 2:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $58, Total Rate (Lowest): $408, Nearby Places: Sagami-Ono Station, Haneda Airport, 中国料理 龍皇\nName: APA Hotel Nishi Shinjuku Gochome Eki Tower, Link: https://www.apahotel.com/resort/nishishinjuku-tower/?utm_source=google&utm_medium=maps, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $93, Total Rate (Lowest): $652, Nearby Places: Meiji Jingu, Nishi-Shinjuku-Gochome Station, Haneda Airport, Lunette\nName: Citadines Central Shinjuku Tokyo, Link: https://www.discoverasr.com/en/citadines/japan/citadines-central-shinjuku-tokyo?utm_source=google&utm_medium=organic&utm_campaign=HQ-google-organic-alwayson-20230628-all-en-jp-jp-citadinescentralshinjukutokyo-eme-gbp, Check-in Time: 2:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $169, Total Rate (Lowest): $1,183, Nearby Places: Shinjuku Golden Gai, Seibu-Shinjuku Station, Haneda Airport, Miyabi\nName: Hotel Sunlite Shinjuku, Link: https://www.pearlhotels.jp/shinjuku/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $67, Total Rate (Lowest): $469, Nearby Places: Shinjuku Golden Gai, Higashi-Shinjuku Station, Haneda Airport\nName: Tokyo Prince Hotel, Link: http://www.princehotels.co.jp/tokyo/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $185, Total Rate (Lowest): $1,293, Nearby Places: Tokyo Tower, Onarimon Sta., Haneda Airport\nName: Hyatt Regency Tokyo, Link: https://www.hyatt.com/en-US/hotel/japan/hyatt-regency-tokyo/tyoty?src=corp_lclb_gmb_seo_tyoty, Check-in Time: 2:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $320, Total Rate (Lowest): $2,240, Nearby Places: Tokyo Metropolitan Government Building, Tochomae Station, Haneda Airport, Ningyocho Imahan Odakyū Dai-ichi Seimei Building\nName: Miyako, Link: https://www.bluepillow.com/search?p_id=589dfc3a7c00cb10c8dabfa5&dest=bkng&cat=House&accomodationids=5aa733987c00cb325cedd0ae, Check-in Time: 1:00\u202fPM, Check-out Time: 10:00\u202fAM, Rate Per Night (Lowest): $46, Total Rate (Lowest): $322, Nearby Places: \nName: Mitsui Garden Hotel Gotanda, Link: https://www.gardenhotels.co.jp/gotanda/?utm_source=googlebusinessprofile&utm_medium=google&utm_campaign=maps, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $157, Total Rate (Lowest): $1,098, Nearby Places: Osakihirokoji Station, Haneda Airport, Tanto Tanto Za Gadenzu Gotandaten\nName: Hotel East 21 Tokyo, Link: http://www.hotel-east21.co.jp/, Check-in Time: 2:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $115, Total Rate (Lowest): $807, Nearby Places: Haneda Airport, 鍛冶屋 文蔵 東陽町店\nName: Shiba Park Hotel, Link: https://www.shibaparkhotel.com/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $194, Total Rate (Lowest): $1,358, Nearby Places: Onarimon Sta., Haneda Airport, ザ ダイニング\nName: 日久の宿, Link: https://www.bluepillow.com/search?p_id=589df90c7c00cb10c8da9250&dest=bkng&cat=House&accomodationids=64861d597f7e24c1922fb7a9, Check-in Time: 3:00\u202fPM, Check-out Time: 10:30\u202fAM, Rate Per Night (Lowest): $78, Total Rate (Lowest): $543, Nearby Places: \n'}], 'model': 'gpt-3.5-turbo'}}
2024-03-14 20:36:18,112 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:18,151 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C9D53D0160>
2024-03-14 20:36:18,152 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D4251640> server_hostname='api.openai.com' timeout=5.0
2024-03-14 20:36:18,170 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C9D53D0130>
2024-03-14 20:36:18,170 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-14 20:36:18,170 - DEBUG - send_request_headers.complete
2024-03-14 20:36:18,170 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-14 20:36:18,170 - DEBUG - send_request_body.complete
2024-03-14 20:36:18,170 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-14 20:36:27,859 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0125'), (b'openai-organization', b'reichman-university-wxioss'), (b'openai-processing-ms', b'9140'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'998493'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'90ms'), (b'x-request-id', b'req_4c86f61697567d0c1f4e4ac2165a8c0b'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=VvANTzBTLG5bbo8A.lWSWbwKmlCdwYMoEcr97OysVME-1710441387-1.0.1.1-OadTK2HAFDaWf70MJTR0WJ9wEru9kzTtT3JuwnybDHaUYvvVortKKvbHu0_VdHylL9J.zWSA5sHytlOPrwP3ug; path=/; expires=Thu, 14-Mar-24 19:06:27 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=L58SwCEWU2sK4oTdxtbb1n.KPmwAXPX9Y3wTVkkezoU-1710441387588-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'86465e53fbac09cb-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-14 20:36:27,859 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-03-14 20:36:27,859 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-14 20:36:27,860 - DEBUG - receive_response_body.complete
2024-03-14 20:36:27,860 - DEBUG - response_closed.started
2024-03-14 20:36:27,860 - DEBUG - response_closed.complete
2024-03-14 20:36:27,860 - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-03-14 20:36:27,883 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:27,883 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:27,891 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:28,178 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53E9610>
2024-03-14 20:36:28,178 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D4310BC0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:28,337 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D43908E0>
2024-03-14 20:36:28,337 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:28,337 - DEBUG - send_request_headers.complete
2024-03-14 20:36:28,338 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:28,338 - DEBUG - send_request_body.complete
2024-03-14 20:36:28,338 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:28,897 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:28 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3756'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'9743c464-3d2f-4cca-8a61-1c9edcf942f3'), (b'x-amz-apigw-id', b'UoeC8GilIAMEVBw='), (b'X-Amzn-Trace-Id', b'Root=1-65f343ac-197a3e5a5c5614a8206030b1')])
2024-03-14 20:36:28,897 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/search?key=7D8FF18728F342E29B426D6D5946FA6C&searchQuery=Tokyo&category=attractions&language=en "HTTP/1.1 200 OK"
2024-03-14 20:36:28,897 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:28,898 - DEBUG - receive_response_body.complete
2024-03-14 20:36:28,898 - DEBUG - response_closed.started
2024-03-14 20:36:28,898 - DEBUG - response_closed.complete
2024-03-14 20:36:28,899 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:28,899 - DEBUG - send_request_headers.complete
2024-03-14 20:36:28,899 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:28,899 - DEBUG - send_request_body.complete
2024-03-14 20:36:28,899 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:29,334 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:28 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3804'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'c9c9d2e6-212e-453d-a3b6-ec6cbe379cec'), (b'x-amz-apigw-id', b'UoeDCGlfoAMEQVg='), (b'X-Amzn-Trace-Id', b'Root=1-65f343ac-435264ab774932a5318ca388')])
2024-03-14 20:36:29,334 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/search?key=7D8FF18728F342E29B426D6D5946FA6C&searchQuery=Tokyo&category=restaurants&language=en "HTTP/1.1 200 OK"
2024-03-14 20:36:29,334 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:29,336 - DEBUG - receive_response_body.complete
2024-03-14 20:36:29,336 - DEBUG - response_closed.started
2024-03-14 20:36:29,336 - DEBUG - response_closed.complete
2024-03-14 20:36:29,336 - DEBUG - close.started
2024-03-14 20:36:29,336 - DEBUG - close.complete
2024-03-14 20:36:29,337 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:29,337 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:29,345 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:29,497 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53F76D0>
2024-03-14 20:36:29,497 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D43462C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:29,647 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53F7670>
2024-03-14 20:36:29,647 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:29,647 - DEBUG - send_request_headers.complete
2024-03-14 20:36:29,647 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:29,647 - DEBUG - send_request_body.complete
2024-03-14 20:36:29,648 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:30,081 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:29 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5577'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'cbd4d5f8-5852-49ee-ada0-6eff2c2980b8'), (b'x-amz-apigw-id', b'UoeDJETBIAMEgQg='), (b'X-Amzn-Trace-Id', b'Root=1-65f343ad-704c53ee5065f34a43100302')])
2024-03-14 20:36:30,081 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/14951238/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:30,081 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:30,082 - DEBUG - receive_response_body.complete
2024-03-14 20:36:30,082 - DEBUG - response_closed.started
2024-03-14 20:36:30,083 - DEBUG - response_closed.complete
2024-03-14 20:36:30,083 - DEBUG - close.started
2024-03-14 20:36:30,083 - DEBUG - close.complete
2024-03-14 20:36:30,083 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:30,084 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:30,092 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:30,240 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53F2430>
2024-03-14 20:36:30,240 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F33C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:30,394 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53F2460>
2024-03-14 20:36:30,394 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:30,394 - DEBUG - send_request_headers.complete
2024-03-14 20:36:30,394 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:30,395 - DEBUG - send_request_body.complete
2024-03-14 20:36:30,395 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:30,668 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'4359'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'3012204f-9427-42bd-921c-5e41c8d4d3d9'), (b'x-amz-apigw-id', b'UoeDRFDnoAMEoIg='), (b'X-Amzn-Trace-Id', b'Root=1-65f343ae-09c111511cca67182b62a4fc')])
2024-03-14 20:36:30,668 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/144151/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:30,668 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:30,668 - DEBUG - receive_response_body.complete
2024-03-14 20:36:30,668 - DEBUG - response_closed.started
2024-03-14 20:36:30,669 - DEBUG - response_closed.complete
2024-03-14 20:36:30,669 - DEBUG - close.started
2024-03-14 20:36:30,669 - DEBUG - close.complete
2024-03-14 20:36:30,669 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:30,670 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:30,677 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:30,818 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53E95E0>
2024-03-14 20:36:30,818 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F35C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:30,965 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53E9220>
2024-03-14 20:36:30,966 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:30,966 - DEBUG - send_request_headers.complete
2024-03-14 20:36:30,966 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:30,966 - DEBUG - send_request_body.complete
2024-03-14 20:36:30,966 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:31,327 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5275'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'f407493b-ced5-4c8c-b0c1-8848af1432f1'), (b'x-amz-apigw-id', b'UoeDWGySoAMEVBw='), (b'X-Amzn-Trace-Id', b'Root=1-65f343ae-73601f255a3dccf80cb11dcf')])
2024-03-14 20:36:31,327 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/320047/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:31,327 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:31,327 - DEBUG - receive_response_body.complete
2024-03-14 20:36:31,327 - DEBUG - response_closed.started
2024-03-14 20:36:31,328 - DEBUG - response_closed.complete
2024-03-14 20:36:31,328 - DEBUG - close.started
2024-03-14 20:36:31,328 - DEBUG - close.complete
2024-03-14 20:36:31,329 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:31,329 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:31,337 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:31,486 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53FC8B0>
2024-03-14 20:36:31,486 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F3340> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:31,640 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53FC850>
2024-03-14 20:36:31,641 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:31,641 - DEBUG - send_request_headers.complete
2024-03-14 20:36:31,641 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:31,641 - DEBUG - send_request_body.complete
2024-03-14 20:36:31,641 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:31,939 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'4793'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'e88f1cc2-5496-45e6-84f0-32c912b06531'), (b'x-amz-apigw-id', b'UoeDdHwsoAMEVJQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f343af-1fa3bc9f3085a8041177daf9')])
2024-03-14 20:36:31,939 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1872416/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:31,939 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:31,939 - DEBUG - receive_response_body.complete
2024-03-14 20:36:31,940 - DEBUG - response_closed.started
2024-03-14 20:36:31,940 - DEBUG - response_closed.complete
2024-03-14 20:36:31,940 - DEBUG - close.started
2024-03-14 20:36:31,940 - DEBUG - close.complete
2024-03-14 20:36:31,940 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:31,941 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:31,948 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:32,092 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53FDE50>
2024-03-14 20:36:32,092 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F30C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:32,239 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53FDDF0>
2024-03-14 20:36:32,239 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:32,239 - DEBUG - send_request_headers.complete
2024-03-14 20:36:32,239 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:32,240 - DEBUG - send_request_body.complete
2024-03-14 20:36:32,240 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:32,602 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5705'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'1d4d82a8-076f-42fe-8952-d7135b517c85'), (b'x-amz-apigw-id', b'UoeDjEFaIAMEYWQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f343b0-79885f30719fe16d1d7107e4')])
2024-03-14 20:36:32,603 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/320634/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:32,603 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:32,603 - DEBUG - receive_response_body.complete
2024-03-14 20:36:32,603 - DEBUG - response_closed.started
2024-03-14 20:36:32,603 - DEBUG - response_closed.complete
2024-03-14 20:36:32,603 - DEBUG - close.started
2024-03-14 20:36:32,604 - DEBUG - close.complete
2024-03-14 20:36:32,604 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:32,604 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:32,612 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:32,768 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D5403AF0>
2024-03-14 20:36:32,768 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F37C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:32,925 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D5403760>
2024-03-14 20:36:32,925 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:32,925 - DEBUG - send_request_headers.complete
2024-03-14 20:36:32,925 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:32,925 - DEBUG - send_request_body.complete
2024-03-14 20:36:32,926 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:33,194 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2864'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'de889025-3471-489b-a26d-4a0ba52e158c'), (b'x-amz-apigw-id', b'UoeDqHiCIAMEBrg='), (b'X-Amzn-Trace-Id', b'Root=1-65f343b0-652a456c1bb7a1b83f0894a1')])
2024-03-14 20:36:33,195 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1509275/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:33,195 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:33,195 - DEBUG - receive_response_body.complete
2024-03-14 20:36:33,195 - DEBUG - response_closed.started
2024-03-14 20:36:33,195 - DEBUG - response_closed.complete
2024-03-14 20:36:33,195 - DEBUG - close.started
2024-03-14 20:36:33,196 - DEBUG - close.complete
2024-03-14 20:36:33,196 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:33,196 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:33,203 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:33,345 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53FD040>
2024-03-14 20:36:33,345 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F36C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:33,495 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53FD220>
2024-03-14 20:36:33,495 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:33,495 - DEBUG - send_request_headers.complete
2024-03-14 20:36:33,495 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:33,495 - DEBUG - send_request_body.complete
2024-03-14 20:36:33,495 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:33,736 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:33 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5689'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'e883b23f-4410-4828-b48d-aaabdd4e1c2c'), (b'x-amz-apigw-id', b'UoeDwFk1IAMEaEw='), (b'X-Amzn-Trace-Id', b'Root=1-65f343b1-2d89b2e34e46670a75479897')])
2024-03-14 20:36:33,736 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/12310322/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:33,736 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:33,736 - DEBUG - receive_response_body.complete
2024-03-14 20:36:33,736 - DEBUG - response_closed.started
2024-03-14 20:36:33,736 - DEBUG - response_closed.complete
2024-03-14 20:36:33,736 - DEBUG - close.started
2024-03-14 20:36:33,736 - DEBUG - close.complete
2024-03-14 20:36:33,736 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:33,736 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:33,746 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:33,886 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53E61F0>
2024-03-14 20:36:33,886 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F3A40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:34,036 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53E6280>
2024-03-14 20:36:34,036 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:34,036 - DEBUG - send_request_headers.complete
2024-03-14 20:36:34,036 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:34,036 - DEBUG - send_request_body.complete
2024-03-14 20:36:34,046 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:34,320 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:33 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6132'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'7dc2e90a-f5b6-48bb-a61e-b6a632f7e5b9'), (b'x-amz-apigw-id', b'UoeD1GatIAMEkTw='), (b'X-Amzn-Trace-Id', b'Root=1-65f343b1-0bf971f53bb20dd0095cfe06')])
2024-03-14 20:36:34,320 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/7744338/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:34,320 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:34,320 - DEBUG - receive_response_body.complete
2024-03-14 20:36:34,320 - DEBUG - response_closed.started
2024-03-14 20:36:34,320 - DEBUG - response_closed.complete
2024-03-14 20:36:34,320 - DEBUG - close.started
2024-03-14 20:36:34,320 - DEBUG - close.complete
2024-03-14 20:36:34,320 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:34,320 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:34,330 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:34,471 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53E9CD0>
2024-03-14 20:36:34,471 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F3BC0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:34,621 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53E9B50>
2024-03-14 20:36:34,621 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:34,621 - DEBUG - send_request_headers.complete
2024-03-14 20:36:34,621 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:34,621 - DEBUG - send_request_body.complete
2024-03-14 20:36:34,621 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:34,938 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:34 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3931'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'752cff32-95b3-4ffa-ad04-565ccd9efb00'), (b'x-amz-apigw-id', b'UoeD7H0cIAMEAdw='), (b'X-Amzn-Trace-Id', b'Root=1-65f343b2-2258009f2a076e5d58fb4268')])
2024-03-14 20:36:34,938 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/550327/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:34,938 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:34,938 - DEBUG - receive_response_body.complete
2024-03-14 20:36:34,938 - DEBUG - response_closed.started
2024-03-14 20:36:34,938 - DEBUG - response_closed.complete
2024-03-14 20:36:34,938 - DEBUG - close.started
2024-03-14 20:36:34,938 - DEBUG - close.complete
2024-03-14 20:36:34,938 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:34,938 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:34,948 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:35,101 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D54073D0>
2024-03-14 20:36:35,101 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F3440> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:35,256 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53F7790>
2024-03-14 20:36:35,256 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:35,256 - DEBUG - send_request_headers.complete
2024-03-14 20:36:35,256 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:35,256 - DEBUG - send_request_body.complete
2024-03-14 20:36:35,256 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:35,607 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:35 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5166'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'3bdee95d-aef5-41c7-94be-6c82d12abe45'), (b'x-amz-apigw-id', b'UoeEBFaaoAMEdYw='), (b'X-Amzn-Trace-Id', b'Root=1-65f343b3-08f6abaa13d6d2615c78b7d9')])
2024-03-14 20:36:35,607 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/320639/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:35,607 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:35,607 - DEBUG - receive_response_body.complete
2024-03-14 20:36:35,607 - DEBUG - response_closed.started
2024-03-14 20:36:35,607 - DEBUG - response_closed.complete
2024-03-14 20:36:35,607 - DEBUG - close.started
2024-03-14 20:36:35,607 - DEBUG - close.complete
2024-03-14 20:36:35,607 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:35,607 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:35,616 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:35,774 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53F7850>
2024-03-14 20:36:35,774 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F3540> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:35,934 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53F7AF0>
2024-03-14 20:36:35,934 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:35,934 - DEBUG - send_request_headers.complete
2024-03-14 20:36:35,934 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:35,934 - DEBUG - send_request_body.complete
2024-03-14 20:36:35,934 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:36,191 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:35 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6776'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'8078d40f-acf9-48ba-91a5-fe9e021af0af'), (b'x-amz-apigw-id', b'UoeEIG5UoAMEBUw='), (b'X-Amzn-Trace-Id', b'Root=1-65f343b3-36be03f94dd5925d2bbd5d4f')])
2024-03-14 20:36:36,191 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/7604418/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:36,191 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:36,191 - DEBUG - receive_response_body.complete
2024-03-14 20:36:36,191 - DEBUG - response_closed.started
2024-03-14 20:36:36,191 - DEBUG - response_closed.complete
2024-03-14 20:36:36,191 - DEBUG - close.started
2024-03-14 20:36:36,191 - DEBUG - close.complete
2024-03-14 20:36:36,191 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:36,191 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:36,208 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:36,351 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53E6E50>
2024-03-14 20:36:36,351 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F30C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:36,504 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53E6E80>
2024-03-14 20:36:36,504 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:36,504 - DEBUG - send_request_headers.complete
2024-03-14 20:36:36,504 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:36,504 - DEBUG - send_request_body.complete
2024-03-14 20:36:36,504 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:36,853 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:36 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6349'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'3ffd6ca7-e467-4b7d-b218-063f02779d64'), (b'x-amz-apigw-id', b'UoeEOGKMIAMETfA='), (b'X-Amzn-Trace-Id', b'Root=1-65f343b4-6ded6fd06a6dcc20099087de')])
2024-03-14 20:36:36,853 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1010352/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:36,853 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:36,853 - DEBUG - receive_response_body.complete
2024-03-14 20:36:36,853 - DEBUG - response_closed.started
2024-03-14 20:36:36,853 - DEBUG - response_closed.complete
2024-03-14 20:36:36,853 - DEBUG - close.started
2024-03-14 20:36:36,853 - DEBUG - close.complete
2024-03-14 20:36:36,859 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:36,859 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:36,859 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:37,010 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53E94F0>
2024-03-14 20:36:37,010 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F39C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:37,160 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53FC940>
2024-03-14 20:36:37,160 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:37,160 - DEBUG - send_request_headers.complete
2024-03-14 20:36:37,160 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:37,160 - DEBUG - send_request_body.complete
2024-03-14 20:36:37,160 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:37,471 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:37 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5439'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'98a4d97d-05fe-4428-aeb9-289bff535104'), (b'x-amz-apigw-id', b'UoeEUFUwIAMEU_A='), (b'X-Amzn-Trace-Id', b'Root=1-65f343b4-5c75bd953884729a62af8c8a')])
2024-03-14 20:36:37,471 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1160290/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:37,471 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:37,471 - DEBUG - receive_response_body.complete
2024-03-14 20:36:37,471 - DEBUG - response_closed.started
2024-03-14 20:36:37,477 - DEBUG - response_closed.complete
2024-03-14 20:36:37,477 - DEBUG - close.started
2024-03-14 20:36:37,477 - DEBUG - close.complete
2024-03-14 20:36:37,477 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:37,477 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:37,477 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:37,628 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D54078E0>
2024-03-14 20:36:37,628 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F3340> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:37,778 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D5407A60>
2024-03-14 20:36:37,778 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:37,778 - DEBUG - send_request_headers.complete
2024-03-14 20:36:37,778 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:37,778 - DEBUG - send_request_body.complete
2024-03-14 20:36:37,778 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:38,079 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:37 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5505'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'7f537dae-bb55-4235-9f6d-fc9ccf56266b'), (b'x-amz-apigw-id', b'UoeEaF-qIAMElYQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f343b5-0245fa72700ecd0f036f90b2')])
2024-03-14 20:36:38,079 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/24035984/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:38,079 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:38,079 - DEBUG - receive_response_body.complete
2024-03-14 20:36:38,079 - DEBUG - response_closed.started
2024-03-14 20:36:38,079 - DEBUG - response_closed.complete
2024-03-14 20:36:38,079 - DEBUG - close.started
2024-03-14 20:36:38,079 - DEBUG - close.complete
2024-03-14 20:36:38,079 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:38,079 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:38,095 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:38,229 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53FDE50>
2024-03-14 20:36:38,229 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F3B40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:38,380 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53FD8B0>
2024-03-14 20:36:38,380 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:38,380 - DEBUG - send_request_headers.complete
2024-03-14 20:36:38,380 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:38,380 - DEBUG - send_request_body.complete
2024-03-14 20:36:38,380 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:38,690 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:38 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5287'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'702862b1-2565-4099-b046-63b591e26b65'), (b'x-amz-apigw-id', b'UoeEgGqcoAMESSA='), (b'X-Amzn-Trace-Id', b'Root=1-65f343b6-498aa40920d9975e0954cbd8')])
2024-03-14 20:36:38,690 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/16714835/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:38,690 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:38,690 - DEBUG - receive_response_body.complete
2024-03-14 20:36:38,690 - DEBUG - response_closed.started
2024-03-14 20:36:38,690 - DEBUG - response_closed.complete
2024-03-14 20:36:38,690 - DEBUG - close.started
2024-03-14 20:36:38,690 - DEBUG - close.complete
2024-03-14 20:36:38,690 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:38,690 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:38,697 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:38,857 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D5403E80>
2024-03-14 20:36:38,857 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F3CC0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:39,014 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D54030D0>
2024-03-14 20:36:39,014 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:39,014 - DEBUG - send_request_headers.complete
2024-03-14 20:36:39,014 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:39,014 - DEBUG - send_request_body.complete
2024-03-14 20:36:39,014 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:39,275 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:38 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6179'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'54483fd9-d853-4e50-9d08-946d791eb56a'), (b'x-amz-apigw-id', b'UoeEnGUloAMEq2A='), (b'X-Amzn-Trace-Id', b'Root=1-65f343b6-23b3152e3a01c1cb2607c13b')])
2024-03-14 20:36:39,275 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/9798604/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:39,275 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:39,275 - DEBUG - receive_response_body.complete
2024-03-14 20:36:39,275 - DEBUG - response_closed.started
2024-03-14 20:36:39,275 - DEBUG - response_closed.complete
2024-03-14 20:36:39,275 - DEBUG - close.started
2024-03-14 20:36:39,275 - DEBUG - close.complete
2024-03-14 20:36:39,275 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:39,275 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:39,281 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:39,442 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53FD5E0>
2024-03-14 20:36:39,442 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F3E40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:39,592 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53FD370>
2024-03-14 20:36:39,592 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:39,592 - DEBUG - send_request_headers.complete
2024-03-14 20:36:39,592 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:39,592 - DEBUG - send_request_body.complete
2024-03-14 20:36:39,592 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:39,859 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3645'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'8ada98b0-ddf9-4a24-bc95-8dd2f5f0cae9'), (b'x-amz-apigw-id', b'UoeEtFMKoAMEXig='), (b'X-Amzn-Trace-Id', b'Root=1-65f343b7-61d31075039b65cb6b1154cc')])
2024-03-14 20:36:39,859 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/5113133/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:39,859 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:39,859 - DEBUG - receive_response_body.complete
2024-03-14 20:36:39,859 - DEBUG - response_closed.started
2024-03-14 20:36:39,859 - DEBUG - response_closed.complete
2024-03-14 20:36:39,859 - DEBUG - close.started
2024-03-14 20:36:39,859 - DEBUG - close.complete
2024-03-14 20:36:39,859 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:39,859 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:39,866 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:40,016 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53E98B0>
2024-03-14 20:36:40,016 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F3840> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:40,160 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53E9B20>
2024-03-14 20:36:40,160 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:40,160 - DEBUG - send_request_headers.complete
2024-03-14 20:36:40,160 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:40,160 - DEBUG - send_request_body.complete
2024-03-14 20:36:40,160 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:40,434 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:40 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'7071'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'8d2e4338-15f1-4633-a456-c934bc4bd701'), (b'x-amz-apigw-id', b'UoeEyGGGoAMEEvQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f343b7-461fe1393ad2674a347a7755')])
2024-03-14 20:36:40,434 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/21356820/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:40,434 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:40,434 - DEBUG - receive_response_body.complete
2024-03-14 20:36:40,434 - DEBUG - response_closed.started
2024-03-14 20:36:40,434 - DEBUG - response_closed.complete
2024-03-14 20:36:40,434 - DEBUG - close.started
2024-03-14 20:36:40,434 - DEBUG - close.complete
2024-03-14 20:36:40,434 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:40,434 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:40,444 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:40,601 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53E6910>
2024-03-14 20:36:40,601 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F3740> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:40,751 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53FC7C0>
2024-03-14 20:36:40,751 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:40,751 - DEBUG - send_request_headers.complete
2024-03-14 20:36:40,751 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:40,751 - DEBUG - send_request_body.complete
2024-03-14 20:36:40,751 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:41,002 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:40 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5026'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'549af568-dfda-4ad4-8b50-4ad6f5d9e570'), (b'x-amz-apigw-id', b'UoeE4HAwIAMESew='), (b'X-Amzn-Trace-Id', b'Root=1-65f343b8-507974d556d0b18807808b40')])
2024-03-14 20:36:41,002 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/2167155/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:41,002 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:41,002 - DEBUG - receive_response_body.complete
2024-03-14 20:36:41,002 - DEBUG - response_closed.started
2024-03-14 20:36:41,002 - DEBUG - response_closed.complete
2024-03-14 20:36:41,002 - DEBUG - close.started
2024-03-14 20:36:41,002 - DEBUG - close.complete
2024-03-14 20:36:41,002 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:36:41,002 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:36:41,012 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:41,169 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D5408850>
2024-03-14 20:36:41,169 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D53F38C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-14 20:36:41,319 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001C9D53F7820>
2024-03-14 20:36:41,319 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-14 20:36:41,319 - DEBUG - send_request_headers.complete
2024-03-14 20:36:41,319 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-14 20:36:41,319 - DEBUG - send_request_body.complete
2024-03-14 20:36:41,319 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-14 20:36:41,587 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6968'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'f5ac704c-6ac6-46e0-ab31-fb7676d3987e'), (b'x-amz-apigw-id', b'UoeE-FXAoAMEGeQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f343b9-391b12ca666441717b160605')])
2024-03-14 20:36:41,587 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1106443/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-14 20:36:41,587 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-14 20:36:41,587 - DEBUG - receive_response_body.complete
2024-03-14 20:36:41,587 - DEBUG - response_closed.started
2024-03-14 20:36:41,587 - DEBUG - response_closed.complete
2024-03-14 20:36:41,587 - DEBUG - close.started
2024-03-14 20:36:41,587 - DEBUG - close.complete
2024-03-14 20:36:42,716 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=121)
           2	LOAD_DEREF(arg=2, lineno=121)
           4	LOAD_FAST(arg=0, lineno=121)
           6	CALL_FUNCTION(arg=1, lineno=121)
           8	STORE_FAST(arg=0, lineno=121)
          10	LOAD_DEREF(arg=2, lineno=122)
          12	LOAD_FAST(arg=1, lineno=122)
          14	CALL_FUNCTION(arg=1, lineno=122)
          16	STORE_FAST(arg=1, lineno=122)
          18	LOAD_DEREF(arg=2, lineno=123)
          20	LOAD_FAST(arg=2, lineno=123)
          22	CALL_FUNCTION(arg=1, lineno=123)
          24	STORE_FAST(arg=2, lineno=123)
          26	LOAD_DEREF(arg=2, lineno=124)
          28	LOAD_FAST(arg=3, lineno=124)
          30	CALL_FUNCTION(arg=1, lineno=124)
          32	STORE_FAST(arg=3, lineno=124)
          34	LOAD_FAST(arg=2, lineno=125)
          36	LOAD_FAST(arg=0, lineno=125)
          38	BINARY_SUBTRACT(arg=None, lineno=125)
          40	STORE_FAST(arg=4, lineno=125)
          42	LOAD_FAST(arg=3, lineno=126)
          44	LOAD_FAST(arg=1, lineno=126)
          46	BINARY_SUBTRACT(arg=None, lineno=126)
          48	STORE_FAST(arg=5, lineno=126)
          50	LOAD_DEREF(arg=3, lineno=127)
          52	LOAD_FAST(arg=4, lineno=127)
          54	LOAD_CONST(arg=1, lineno=127)
          56	BINARY_MULTIPLY(arg=None, lineno=127)
          58	CALL_FUNCTION(arg=1, lineno=127)
          60	LOAD_CONST(arg=2, lineno=127)
          62	BINARY_POWER(arg=None, lineno=127)
          64	LOAD_DEREF(arg=1, lineno=128)
          66	LOAD_FAST(arg=0, lineno=128)
          68	CALL_FUNCTION(arg=1, lineno=128)
          70	LOAD_DEREF(arg=1, lineno=128)
          72	LOAD_FAST(arg=2, lineno=128)
          74	CALL_FUNCTION(arg=1, lineno=128)
          76	BINARY_MULTIPLY(arg=None, lineno=128)
          78	LOAD_DEREF(arg=3, lineno=128)
          80	LOAD_FAST(arg=5, lineno=128)
          82	LOAD_CONST(arg=1, lineno=128)
          84	BINARY_MULTIPLY(arg=None, lineno=128)
          86	CALL_FUNCTION(arg=1, lineno=128)
          88	LOAD_CONST(arg=2, lineno=128)
          90	BINARY_POWER(arg=None, lineno=128)
          92	BINARY_MULTIPLY(arg=None, lineno=128)
          94	BINARY_ADD(arg=None, lineno=127)
          96	STORE_FAST(arg=6, lineno=127)
          98	LOAD_CONST(arg=2, lineno=131)
         100	LOAD_DEREF(arg=0, lineno=131)
         102	LOAD_DEREF(arg=4, lineno=131)
         104	LOAD_FAST(arg=6, lineno=131)
         106	CALL_FUNCTION(arg=1, lineno=131)
         108	CALL_FUNCTION(arg=1, lineno=131)
         110	BINARY_MULTIPLY(arg=None, lineno=131)
         112	RETURN_VALUE(arg=None, lineno=131)
2024-03-14 20:36:42,722 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-03-14 20:36:42,722 - DEBUG - stack: []
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=121)
2024-03-14 20:36:42,722 - DEBUG - stack []
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=2, inst=LOAD_DEREF(arg=2, lineno=121)
2024-03-14 20:36:42,722 - DEBUG - stack []
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=121)
2024-03-14 20:36:42,722 - DEBUG - stack ['$2load_deref.0']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=121)
2024-03-14 20:36:42,722 - DEBUG - stack ['$2load_deref.0', '$lat14.1']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=0, lineno=121)
2024-03-14 20:36:42,722 - DEBUG - stack ['$6call_function.2']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=10, inst=LOAD_DEREF(arg=2, lineno=122)
2024-03-14 20:36:42,722 - DEBUG - stack []
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=122)
2024-03-14 20:36:42,722 - DEBUG - stack ['$10load_deref.3']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=122)
2024-03-14 20:36:42,722 - DEBUG - stack ['$10load_deref.3', '$lng112.4']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=122)
2024-03-14 20:36:42,722 - DEBUG - stack ['$14call_function.5']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=18, inst=LOAD_DEREF(arg=2, lineno=123)
2024-03-14 20:36:42,722 - DEBUG - stack []
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=123)
2024-03-14 20:36:42,722 - DEBUG - stack ['$18load_deref.6']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=22, inst=CALL_FUNCTION(arg=1, lineno=123)
2024-03-14 20:36:42,722 - DEBUG - stack ['$18load_deref.6', '$lat220.7']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=24, inst=STORE_FAST(arg=2, lineno=123)
2024-03-14 20:36:42,722 - DEBUG - stack ['$22call_function.8']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=26, inst=LOAD_DEREF(arg=2, lineno=124)
2024-03-14 20:36:42,722 - DEBUG - stack []
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=3, lineno=124)
2024-03-14 20:36:42,722 - DEBUG - stack ['$26load_deref.9']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=124)
2024-03-14 20:36:42,722 - DEBUG - stack ['$26load_deref.9', '$lng228.10']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=32, inst=STORE_FAST(arg=3, lineno=124)
2024-03-14 20:36:42,722 - DEBUG - stack ['$30call_function.11']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=2, lineno=125)
2024-03-14 20:36:42,722 - DEBUG - stack []
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=125)
2024-03-14 20:36:42,722 - DEBUG - stack ['$lat234.12']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=38, inst=BINARY_SUBTRACT(arg=None, lineno=125)
2024-03-14 20:36:42,722 - DEBUG - stack ['$lat234.12', '$lat136.13']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=40, inst=STORE_FAST(arg=4, lineno=125)
2024-03-14 20:36:42,722 - DEBUG - stack ['$38binary_subtract.14']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=126)
2024-03-14 20:36:42,722 - DEBUG - stack []
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=44, inst=LOAD_FAST(arg=1, lineno=126)
2024-03-14 20:36:42,722 - DEBUG - stack ['$lng242.15']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=46, inst=BINARY_SUBTRACT(arg=None, lineno=126)
2024-03-14 20:36:42,722 - DEBUG - stack ['$lng242.15', '$lng144.16']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=5, lineno=126)
2024-03-14 20:36:42,722 - DEBUG - stack ['$46binary_subtract.17']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=50, inst=LOAD_DEREF(arg=3, lineno=127)
2024-03-14 20:36:42,722 - DEBUG - stack []
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=127)
2024-03-14 20:36:42,722 - DEBUG - stack ['$50load_deref.18']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=127)
2024-03-14 20:36:42,722 - DEBUG - stack ['$50load_deref.18', '$lat52.19']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=56, inst=BINARY_MULTIPLY(arg=None, lineno=127)
2024-03-14 20:36:42,722 - DEBUG - stack ['$50load_deref.18', '$lat52.19', '$const54.20']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=58, inst=CALL_FUNCTION(arg=1, lineno=127)
2024-03-14 20:36:42,722 - DEBUG - stack ['$50load_deref.18', '$56binary_multiply.21']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=127)
2024-03-14 20:36:42,722 - DEBUG - stack ['$58call_function.22']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=62, inst=BINARY_POWER(arg=None, lineno=127)
2024-03-14 20:36:42,722 - DEBUG - stack ['$58call_function.22', '$const60.23']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=64, inst=LOAD_DEREF(arg=1, lineno=128)
2024-03-14 20:36:42,722 - DEBUG - stack ['$62binary_power.24']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=128)
2024-03-14 20:36:42,722 - DEBUG - stack ['$62binary_power.24', '$64load_deref.25']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=68, inst=CALL_FUNCTION(arg=1, lineno=128)
2024-03-14 20:36:42,722 - DEBUG - stack ['$62binary_power.24', '$64load_deref.25', '$lat166.26']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=70, inst=LOAD_DEREF(arg=1, lineno=128)
2024-03-14 20:36:42,722 - DEBUG - stack ['$62binary_power.24', '$68call_function.27']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=72, inst=LOAD_FAST(arg=2, lineno=128)
2024-03-14 20:36:42,722 - DEBUG - stack ['$62binary_power.24', '$68call_function.27', '$70load_deref.28']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=74, inst=CALL_FUNCTION(arg=1, lineno=128)
2024-03-14 20:36:42,722 - DEBUG - stack ['$62binary_power.24', '$68call_function.27', '$70load_deref.28', '$lat272.29']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=76, inst=BINARY_MULTIPLY(arg=None, lineno=128)
2024-03-14 20:36:42,722 - DEBUG - stack ['$62binary_power.24', '$68call_function.27', '$74call_function.30']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=78, inst=LOAD_DEREF(arg=3, lineno=128)
2024-03-14 20:36:42,722 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=5, lineno=128)
2024-03-14 20:36:42,722 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$78load_deref.32']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=82, inst=LOAD_CONST(arg=1, lineno=128)
2024-03-14 20:36:42,722 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$78load_deref.32', '$lng80.33']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=84, inst=BINARY_MULTIPLY(arg=None, lineno=128)
2024-03-14 20:36:42,722 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$78load_deref.32', '$lng80.33', '$const82.34']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=86, inst=CALL_FUNCTION(arg=1, lineno=128)
2024-03-14 20:36:42,722 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$78load_deref.32', '$84binary_multiply.35']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=88, inst=LOAD_CONST(arg=2, lineno=128)
2024-03-14 20:36:42,722 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$86call_function.36']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=90, inst=BINARY_POWER(arg=None, lineno=128)
2024-03-14 20:36:42,722 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$86call_function.36', '$const88.37']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=92, inst=BINARY_MULTIPLY(arg=None, lineno=128)
2024-03-14 20:36:42,722 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$90binary_power.38']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=94, inst=BINARY_ADD(arg=None, lineno=127)
2024-03-14 20:36:42,722 - DEBUG - stack ['$62binary_power.24', '$92binary_multiply.39']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=96, inst=STORE_FAST(arg=6, lineno=127)
2024-03-14 20:36:42,722 - DEBUG - stack ['$94binary_add.40']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=2, lineno=131)
2024-03-14 20:36:42,722 - DEBUG - stack []
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=100, inst=LOAD_DEREF(arg=0, lineno=131)
2024-03-14 20:36:42,722 - DEBUG - stack ['$const98.41']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=102, inst=LOAD_DEREF(arg=4, lineno=131)
2024-03-14 20:36:42,722 - DEBUG - stack ['$const98.41', '$100load_deref.42']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=6, lineno=131)
2024-03-14 20:36:42,722 - DEBUG - stack ['$const98.41', '$100load_deref.42', '$102load_deref.43']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=106, inst=CALL_FUNCTION(arg=1, lineno=131)
2024-03-14 20:36:42,722 - DEBUG - stack ['$const98.41', '$100load_deref.42', '$102load_deref.43', '$d104.44']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=131)
2024-03-14 20:36:42,722 - DEBUG - stack ['$const98.41', '$100load_deref.42', '$106call_function.45']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=110, inst=BINARY_MULTIPLY(arg=None, lineno=131)
2024-03-14 20:36:42,722 - DEBUG - stack ['$const98.41', '$108call_function.46']
2024-03-14 20:36:42,722 - DEBUG - dispatch pc=112, inst=RETURN_VALUE(arg=None, lineno=131)
2024-03-14 20:36:42,722 - DEBUG - stack ['$110binary_multiply.47']
2024-03-14 20:36:42,722 - DEBUG - end state. edges=[]
2024-03-14 20:36:42,722 - DEBUG - -------------------------Prune PHIs-------------------------
2024-03-14 20:36:42,722 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-03-14 20:36:42,722 - DEBUG - defmap: {}
2024-03-14 20:36:42,722 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-03-14 20:36:42,722 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-03-14 20:36:42,722 - DEBUG - keep phismap: {}
2024-03-14 20:36:42,722 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-03-14 20:36:42,722 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-03-14 20:36:42,722 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$lat14.1'}), (6, {'func': '$2load_deref.0', 'args': ['$lat14.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$lng112.4'}), (14, {'func': '$10load_deref.3', 'args': ['$lng112.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$18load_deref.6'}), (20, {'res': '$lat220.7'}), (22, {'func': '$18load_deref.6', 'args': ['$lat220.7'], 'res': '$22call_function.8'}), (24, {'value': '$22call_function.8'}), (26, {'res': '$26load_deref.9'}), (28, {'res': '$lng228.10'}), (30, {'func': '$26load_deref.9', 'args': ['$lng228.10'], 'res': '$30call_function.11'}), (32, {'value': '$30call_function.11'}), (34, {'res': '$lat234.12'}), (36, {'res': '$lat136.13'}), (38, {'lhs': '$lat234.12', 'rhs': '$lat136.13', 'res': '$38binary_subtract.14'}), (40, {'value': '$38binary_subtract.14'}), (42, {'res': '$lng242.15'}), (44, {'res': '$lng144.16'}), (46, {'lhs': '$lng242.15', 'rhs': '$lng144.16', 'res': '$46binary_subtract.17'}), (48, {'value': '$46binary_subtract.17'}), (50, {'res': '$50load_deref.18'}), (52, {'res': '$lat52.19'}), (54, {'res': '$const54.20'}), (56, {'lhs': '$lat52.19', 'rhs': '$const54.20', 'res': '$56binary_multiply.21'}), (58, {'func': '$50load_deref.18', 'args': ['$56binary_multiply.21'], 'res': '$58call_function.22'}), (60, {'res': '$const60.23'}), (62, {'lhs': '$58call_function.22', 'rhs': '$const60.23', 'res': '$62binary_power.24'}), (64, {'res': '$64load_deref.25'}), (66, {'res': '$lat166.26'}), (68, {'func': '$64load_deref.25', 'args': ['$lat166.26'], 'res': '$68call_function.27'}), (70, {'res': '$70load_deref.28'}), (72, {'res': '$lat272.29'}), (74, {'func': '$70load_deref.28', 'args': ['$lat272.29'], 'res': '$74call_function.30'}), (76, {'lhs': '$68call_function.27', 'rhs': '$74call_function.30', 'res': '$76binary_multiply.31'}), (78, {'res': '$78load_deref.32'}), (80, {'res': '$lng80.33'}), (82, {'res': '$const82.34'}), (84, {'lhs': '$lng80.33', 'rhs': '$const82.34', 'res': '$84binary_multiply.35'}), (86, {'func': '$78load_deref.32', 'args': ['$84binary_multiply.35'], 'res': '$86call_function.36'}), (88, {'res': '$const88.37'}), (90, {'lhs': '$86call_function.36', 'rhs': '$const88.37', 'res': '$90binary_power.38'}), (92, {'lhs': '$76binary_multiply.31', 'rhs': '$90binary_power.38', 'res': '$92binary_multiply.39'}), (94, {'lhs': '$62binary_power.24', 'rhs': '$92binary_multiply.39', 'res': '$94binary_add.40'}), (96, {'value': '$94binary_add.40'}), (98, {'res': '$const98.41'}), (100, {'res': '$100load_deref.42'}), (102, {'res': '$102load_deref.43'}), (104, {'res': '$d104.44'}), (106, {'func': '$102load_deref.43', 'args': ['$d104.44'], 'res': '$106call_function.45'}), (108, {'func': '$100load_deref.42', 'args': ['$106call_function.45'], 'res': '$108call_function.46'}), (110, {'lhs': '$const98.41', 'rhs': '$108call_function.46', 'res': '$110binary_multiply.47'}), (112, {'retval': '$110binary_multiply.47', 'castval': '$112return_value.48'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-14 20:36:42,722 - DEBUG - label 0:
    lat1 = arg(0, name=lat1)                 ['lat1']
    lng1 = arg(1, name=lng1)                 ['lng1']
    lat2 = arg(2, name=lat2)                 ['lat2']
    lng2 = arg(3, name=lng2)                 ['lng2']
    $2load_deref.0 = freevar(radians: <built-in function radians>) ['$2load_deref.0']
    lat1.1 = call $2load_deref.0(lat1, func=$2load_deref.0, args=[Var(lat1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', 'lat1', 'lat1.1']
    $10load_deref.3 = freevar(radians: <built-in function radians>) ['$10load_deref.3']
    lng1.1 = call $10load_deref.3(lng1, func=$10load_deref.3, args=[Var(lng1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'lng1', 'lng1.1']
    $18load_deref.6 = freevar(radians: <built-in function radians>) ['$18load_deref.6']
    lat2.1 = call $18load_deref.6(lat2, func=$18load_deref.6, args=[Var(lat2, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_deref.6', 'lat2', 'lat2.1']
    $26load_deref.9 = freevar(radians: <built-in function radians>) ['$26load_deref.9']
    lng2.1 = call $26load_deref.9(lng2, func=$26load_deref.9, args=[Var(lng2, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_deref.9', 'lng2', 'lng2.1']
    lat = lat2.1 - lat1.1                    ['lat', 'lat1.1', 'lat2.1']
    lng = lng2.1 - lng1.1                    ['lng', 'lng1.1', 'lng2.1']
    $50load_deref.18 = freevar(sin: <built-in function sin>) ['$50load_deref.18']
    $const54.20 = const(float, 0.5)          ['$const54.20']
    $56binary_multiply.21 = lat * $const54.20 ['$56binary_multiply.21', '$const54.20', 'lat']
    $58call_function.22 = call $50load_deref.18($56binary_multiply.21, func=$50load_deref.18, args=[Var($56binary_multiply.21, haversine.py:127)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_deref.18', '$56binary_multiply.21', '$58call_function.22']
    $const60.23 = const(int, 2)              ['$const60.23']
    $62binary_power.24 = $58call_function.22 ** $const60.23 ['$58call_function.22', '$62binary_power.24', '$const60.23']
    $64load_deref.25 = freevar(cos: <built-in function cos>) ['$64load_deref.25']
    $68call_function.27 = call $64load_deref.25(lat1.1, func=$64load_deref.25, args=[Var(lat1.1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_deref.25', '$68call_function.27', 'lat1.1']
    $70load_deref.28 = freevar(cos: <built-in function cos>) ['$70load_deref.28']
    $74call_function.30 = call $70load_deref.28(lat2.1, func=$70load_deref.28, args=[Var(lat2.1, haversine.py:123)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_deref.28', '$74call_function.30', 'lat2.1']
    $76binary_multiply.31 = $68call_function.27 * $74call_function.30 ['$68call_function.27', '$74call_function.30', '$76binary_multiply.31']
    $78load_deref.32 = freevar(sin: <built-in function sin>) ['$78load_deref.32']
    $const82.34 = const(float, 0.5)          ['$const82.34']
    $84binary_multiply.35 = lng * $const82.34 ['$84binary_multiply.35', '$const82.34', 'lng']
    $86call_function.36 = call $78load_deref.32($84binary_multiply.35, func=$78load_deref.32, args=[Var($84binary_multiply.35, haversine.py:128)], kws=(), vararg=None, varkwarg=None, target=None) ['$78load_deref.32', '$84binary_multiply.35', '$86call_function.36']
    $const88.37 = const(int, 2)              ['$const88.37']
    $90binary_power.38 = $86call_function.36 ** $const88.37 ['$86call_function.36', '$90binary_power.38', '$const88.37']
    $92binary_multiply.39 = $76binary_multiply.31 * $90binary_power.38 ['$76binary_multiply.31', '$90binary_power.38', '$92binary_multiply.39']
    d = $62binary_power.24 + $92binary_multiply.39 ['$62binary_power.24', '$92binary_multiply.39', 'd']
    $const98.41 = const(int, 2)              ['$const98.41']
    $100load_deref.42 = freevar(asin: <built-in function asin>) ['$100load_deref.42']
    $102load_deref.43 = freevar(sqrt: <built-in function sqrt>) ['$102load_deref.43']
    $106call_function.45 = call $102load_deref.43(d, func=$102load_deref.43, args=[Var(d, haversine.py:127)], kws=(), vararg=None, varkwarg=None, target=None) ['$102load_deref.43', '$106call_function.45', 'd']
    $108call_function.46 = call $100load_deref.42($106call_function.45, func=$100load_deref.42, args=[Var($106call_function.45, haversine.py:131)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_deref.42', '$106call_function.45', '$108call_function.46']
    $110binary_multiply.47 = $const98.41 * $108call_function.46 ['$108call_function.46', '$110binary_multiply.47', '$const98.41']
    $112return_value.48 = cast(value=$110binary_multiply.47) ['$110binary_multiply.47', '$112return_value.48']
    return $112return_value.48               ['$112return_value.48']

2024-03-14 20:36:42,766 - DEBUG - ==== SSA block analysis pass on 0
2024-03-14 20:36:42,766 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C9EBBEFE80>
2024-03-14 20:36:42,766 - DEBUG - on stmt: lat1 = arg(0, name=lat1)
2024-03-14 20:36:42,766 - DEBUG - on stmt: lng1 = arg(1, name=lng1)
2024-03-14 20:36:42,766 - DEBUG - on stmt: lat2 = arg(2, name=lat2)
2024-03-14 20:36:42,766 - DEBUG - on stmt: lng2 = arg(3, name=lng2)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $2load_deref.0 = freevar(radians: <built-in function radians>)
2024-03-14 20:36:42,766 - DEBUG - on stmt: lat1.1 = call $2load_deref.0(lat1, func=$2load_deref.0, args=[Var(lat1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $10load_deref.3 = freevar(radians: <built-in function radians>)
2024-03-14 20:36:42,766 - DEBUG - on stmt: lng1.1 = call $10load_deref.3(lng1, func=$10load_deref.3, args=[Var(lng1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $18load_deref.6 = freevar(radians: <built-in function radians>)
2024-03-14 20:36:42,766 - DEBUG - on stmt: lat2.1 = call $18load_deref.6(lat2, func=$18load_deref.6, args=[Var(lat2, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $26load_deref.9 = freevar(radians: <built-in function radians>)
2024-03-14 20:36:42,766 - DEBUG - on stmt: lng2.1 = call $26load_deref.9(lng2, func=$26load_deref.9, args=[Var(lng2, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,766 - DEBUG - on stmt: lat = lat2.1 - lat1.1
2024-03-14 20:36:42,766 - DEBUG - on stmt: lng = lng2.1 - lng1.1
2024-03-14 20:36:42,766 - DEBUG - on stmt: $50load_deref.18 = freevar(sin: <built-in function sin>)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $const54.20 = const(float, 0.5)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $56binary_multiply.21 = lat * $const54.20
2024-03-14 20:36:42,766 - DEBUG - on stmt: $58call_function.22 = call $50load_deref.18($56binary_multiply.21, func=$50load_deref.18, args=[Var($56binary_multiply.21, haversine.py:127)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $const60.23 = const(int, 2)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $62binary_power.24 = $58call_function.22 ** $const60.23
2024-03-14 20:36:42,766 - DEBUG - on stmt: $64load_deref.25 = freevar(cos: <built-in function cos>)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $68call_function.27 = call $64load_deref.25(lat1.1, func=$64load_deref.25, args=[Var(lat1.1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $70load_deref.28 = freevar(cos: <built-in function cos>)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $74call_function.30 = call $70load_deref.28(lat2.1, func=$70load_deref.28, args=[Var(lat2.1, haversine.py:123)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $76binary_multiply.31 = $68call_function.27 * $74call_function.30
2024-03-14 20:36:42,766 - DEBUG - on stmt: $78load_deref.32 = freevar(sin: <built-in function sin>)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $const82.34 = const(float, 0.5)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $84binary_multiply.35 = lng * $const82.34
2024-03-14 20:36:42,766 - DEBUG - on stmt: $86call_function.36 = call $78load_deref.32($84binary_multiply.35, func=$78load_deref.32, args=[Var($84binary_multiply.35, haversine.py:128)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $const88.37 = const(int, 2)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $90binary_power.38 = $86call_function.36 ** $const88.37
2024-03-14 20:36:42,766 - DEBUG - on stmt: $92binary_multiply.39 = $76binary_multiply.31 * $90binary_power.38
2024-03-14 20:36:42,766 - DEBUG - on stmt: d = $62binary_power.24 + $92binary_multiply.39
2024-03-14 20:36:42,766 - DEBUG - on stmt: $const98.41 = const(int, 2)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $100load_deref.42 = freevar(asin: <built-in function asin>)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $102load_deref.43 = freevar(sqrt: <built-in function sqrt>)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $106call_function.45 = call $102load_deref.43(d, func=$102load_deref.43, args=[Var(d, haversine.py:127)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $108call_function.46 = call $100load_deref.42($106call_function.45, func=$100load_deref.42, args=[Var($106call_function.45, haversine.py:131)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,766 - DEBUG - on stmt: $110binary_multiply.47 = $const98.41 * $108call_function.46
2024-03-14 20:36:42,766 - DEBUG - on stmt: $112return_value.48 = cast(value=$110binary_multiply.47)
2024-03-14 20:36:42,766 - DEBUG - on stmt: return $112return_value.48
2024-03-14 20:36:42,766 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100load_deref.42': [<numba.core.ir.Assign object at 0x000001C9EBBFA670>],
             '$102load_deref.43': [<numba.core.ir.Assign object at 0x000001C9EBBFA7F0>],
             '$106call_function.45': [<numba.core.ir.Assign object at 0x000001C9EBBFAAF0>],
             '$108call_function.46': [<numba.core.ir.Assign object at 0x000001C9EBBFAC70>],
             '$10load_deref.3': [<numba.core.ir.Assign object at 0x000001C9EBBD19D0>],
             '$110binary_multiply.47': [<numba.core.ir.Assign object at 0x000001C9EBBFADC0>],
             '$112return_value.48': [<numba.core.ir.Assign object at 0x000001C9EBBFAF10>],
             '$18load_deref.6': [<numba.core.ir.Assign object at 0x000001C9EBBD1F10>],
             '$26load_deref.9': [<numba.core.ir.Assign object at 0x000001C9EBBEF490>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x000001C9EBBD13A0>],
             '$50load_deref.18': [<numba.core.ir.Assign object at 0x000001C9EBBF1250>],
             '$56binary_multiply.21': [<numba.core.ir.Assign object at 0x000001C9EBBF16A0>],
             '$58call_function.22': [<numba.core.ir.Assign object at 0x000001C9EBBF1850>],
             '$62binary_power.24': [<numba.core.ir.Assign object at 0x000001C9EBBF1B20>],
             '$64load_deref.25': [<numba.core.ir.Assign object at 0x000001C9EBBF1C70>],
             '$68call_function.27': [<numba.core.ir.Assign object at 0x000001C9EBBF1F70>],
             '$70load_deref.28': [<numba.core.ir.Assign object at 0x000001C9EBBF40D0>],
             '$74call_function.30': [<numba.core.ir.Assign object at 0x000001C9EBBF43D0>],
             '$76binary_multiply.31': [<numba.core.ir.Assign object at 0x000001C9EBBF4520>],
             '$78load_deref.32': [<numba.core.ir.Assign object at 0x000001C9EBBF4670>],
             '$84binary_multiply.35': [<numba.core.ir.Assign object at 0x000001C9EBBF4AC0>],
             '$86call_function.36': [<numba.core.ir.Assign object at 0x000001C9EBBF4C70>],
             '$90binary_power.38': [<numba.core.ir.Assign object at 0x000001C9EBBF4F40>],
             '$92binary_multiply.39': [<numba.core.ir.Assign object at 0x000001C9EBBFA100>],
             '$const54.20': [<numba.core.ir.Assign object at 0x000001C9EBBF14F0>],
             '$const60.23': [<numba.core.ir.Assign object at 0x000001C9EBBF1970>],
             '$const82.34': [<numba.core.ir.Assign object at 0x000001C9EBBF4910>],
             '$const88.37': [<numba.core.ir.Assign object at 0x000001C9EBBF4D90>],
             '$const98.41': [<numba.core.ir.Assign object at 0x000001C9EBBFA4F0>],
             'd': [<numba.core.ir.Assign object at 0x000001C9EBBFA280>],
             'lat': [<numba.core.ir.Assign object at 0x000001C9EBBEFC40>],
             'lat1': [<numba.core.ir.Assign object at 0x000001C9EBBC9130>],
             'lat1.1': [<numba.core.ir.Assign object at 0x000001C9EBBD1790>],
             'lat2': [<numba.core.ir.Assign object at 0x000001C9EBBBFD00>],
             'lat2.1': [<numba.core.ir.Assign object at 0x000001C9EBBEF250>],
             'lng': [<numba.core.ir.Assign object at 0x000001C9EBBEFFA0>],
             'lng1': [<numba.core.ir.Assign object at 0x000001C9EBBC9460>],
             'lng1.1': [<numba.core.ir.Assign object at 0x000001C9EBBD1CD0>],
             'lng2': [<numba.core.ir.Assign object at 0x000001C9EBBBFDF0>],
             'lng2.1': [<numba.core.ir.Assign object at 0x000001C9EBBEF790>]})
2024-03-14 20:36:42,766 - DEBUG - SSA violators set()
2024-03-14 20:36:42,833 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=216)
           2	LOAD_DEREF(arg=1, lineno=216)
           4	LOAD_CONST(arg=1, lineno=216)
           6	CALL_FUNCTION(arg=1, lineno=216)
           8	STORE_FAST(arg=2, lineno=216)
          10	LOAD_DEREF(arg=1, lineno=217)
          12	LOAD_FAST(arg=0, lineno=217)
          14	CALL_FUNCTION(arg=1, lineno=217)
          16	STORE_FAST(arg=0, lineno=217)
          18	LOAD_FAST(arg=1, lineno=218)
          20	LOAD_CONST(arg=2, lineno=218)
          22	COMPARE_OP(arg=0, lineno=218)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=218)
          26	LOAD_CONST(arg=3, lineno=219)
          28	STORE_FAST(arg=3, lineno=219)
          30	LOAD_FAST(arg=1, lineno=220)
          32	UNARY_NEGATIVE(arg=None, lineno=220)
          34	STORE_FAST(arg=4, lineno=220)
          36	LOAD_FAST(arg=4, lineno=221)
          38	LOAD_CONST(arg=2, lineno=221)
          40	COMPARE_OP(arg=0, lineno=221)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=221)
          44	LOAD_GLOBAL(arg=0, lineno=222)
          46	RAISE_VARARGS(arg=1, lineno=222)
>         48	LOAD_DEREF(arg=0, lineno=223)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=223)
          52	LOAD_FAST(arg=0, lineno=224)
          54	LOAD_CONST(arg=2, lineno=224)
          56	COMPARE_OP(arg=2, lineno=224)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=224)
          60	LOAD_DEREF(arg=2, lineno=225)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=225)
          64	LOAD_DEREF(arg=2, lineno=226)
          66	RETURN_VALUE(arg=None, lineno=226)
>         68	LOAD_GLOBAL(arg=1, lineno=228)
          70	LOAD_CONST(arg=4, lineno=228)
          72	CALL_FUNCTION(arg=1, lineno=228)
          74	RAISE_VARARGS(arg=1, lineno=228)
>         76	LOAD_FAST(arg=0, lineno=229)
          78	LOAD_CONST(arg=1, lineno=229)
          80	COMPARE_OP(arg=3, lineno=229)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=229)
          84	LOAD_FAST(arg=0, lineno=229)
          86	LOAD_CONST(arg=5, lineno=229)
          88	COMPARE_OP(arg=3, lineno=229)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=229)
          92	LOAD_CONST(arg=2, lineno=230)
          94	RETURN_VALUE(arg=None, lineno=230)
          96	JUMP_FORWARD(arg=8, lineno=230)
>         98	LOAD_CONST(arg=6, lineno=232)
         100	STORE_FAST(arg=3, lineno=232)
         102	LOAD_FAST(arg=1, lineno=233)
         104	STORE_FAST(arg=4, lineno=233)
>        106	LOAD_FAST(arg=4, lineno=234)
         108	LOAD_CONST(arg=7, lineno=234)
         110	COMPARE_OP(arg=4, lineno=234)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=234)
         114	LOAD_GLOBAL(arg=2, lineno=236)
         116	LOAD_METHOD(arg=3, lineno=236)
         118	LOAD_FAST(arg=0, lineno=236)
         120	LOAD_GLOBAL(arg=4, lineno=236)
         122	LOAD_FAST(arg=1, lineno=236)
         124	CALL_FUNCTION(arg=1, lineno=236)
         126	CALL_METHOD(arg=2, lineno=236)
         128	RETURN_VALUE(arg=None, lineno=236)
>        130	LOAD_FAST(arg=4, lineno=237)
         132	LOAD_CONST(arg=2, lineno=237)
         134	COMPARE_OP(arg=3, lineno=237)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=237)
         138	LOAD_FAST(arg=4, lineno=238)
         140	LOAD_CONST(arg=1, lineno=238)
         142	BINARY_AND(arg=None, lineno=238)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=238)
         146	LOAD_FAST(arg=2, lineno=239)
         148	LOAD_FAST(arg=0, lineno=239)
         150	INPLACE_MULTIPLY(arg=None, lineno=239)
         152	STORE_FAST(arg=2, lineno=239)
>        154	LOAD_FAST(arg=4, lineno=240)
         156	LOAD_CONST(arg=1, lineno=240)
         158	INPLACE_RSHIFT(arg=None, lineno=240)
         160	STORE_FAST(arg=4, lineno=240)
         162	LOAD_FAST(arg=0, lineno=241)
         164	LOAD_FAST(arg=0, lineno=241)
         166	INPLACE_MULTIPLY(arg=None, lineno=241)
         168	STORE_FAST(arg=0, lineno=241)
         170	JUMP_ABSOLUTE(arg=130, lineno=241)
>        172	LOAD_FAST(arg=3, lineno=243)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=243)
         176	LOAD_CONST(arg=8, lineno=243)
         178	LOAD_FAST(arg=2, lineno=243)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=243)
         182	RETURN_VALUE(arg=None, lineno=243)
>        184	LOAD_FAST(arg=2, lineno=243)
         186	RETURN_VALUE(arg=None, lineno=243)
2024-03-14 20:36:42,833 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-03-14 20:36:42,833 - DEBUG - stack: []
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=216)
2024-03-14 20:36:42,833 - DEBUG - stack []
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=216)
2024-03-14 20:36:42,833 - DEBUG - stack []
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=216)
2024-03-14 20:36:42,833 - DEBUG - stack ['$2load_deref.0']
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=216)
2024-03-14 20:36:42,833 - DEBUG - stack ['$2load_deref.0', '$const4.1']
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=2, lineno=216)
2024-03-14 20:36:42,833 - DEBUG - stack ['$6call_function.2']
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=217)
2024-03-14 20:36:42,833 - DEBUG - stack []
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=217)
2024-03-14 20:36:42,833 - DEBUG - stack ['$10load_deref.3']
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=217)
2024-03-14 20:36:42,833 - DEBUG - stack ['$10load_deref.3', '$a12.4']
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=0, lineno=217)
2024-03-14 20:36:42,833 - DEBUG - stack ['$14call_function.5']
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=218)
2024-03-14 20:36:42,833 - DEBUG - stack []
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=218)
2024-03-14 20:36:42,833 - DEBUG - stack ['$b18.6']
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=218)
2024-03-14 20:36:42,833 - DEBUG - stack ['$b18.6', '$const20.7']
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=218)
2024-03-14 20:36:42,833 - DEBUG - stack ['$22compare_op.8']
2024-03-14 20:36:42,833 - DEBUG - end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
2024-03-14 20:36:42,833 - DEBUG - pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
2024-03-14 20:36:42,833 - DEBUG - stack: []
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=219)
2024-03-14 20:36:42,833 - DEBUG - stack []
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=3, lineno=219)
2024-03-14 20:36:42,833 - DEBUG - stack ['$const26.0']
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=220)
2024-03-14 20:36:42,833 - DEBUG - stack []
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2024-03-14 20:36:42,833 - DEBUG - stack ['$b30.1']
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=34, inst=STORE_FAST(arg=4, lineno=220)
2024-03-14 20:36:42,833 - DEBUG - stack ['$32unary_negative.2']
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=221)
2024-03-14 20:36:42,833 - DEBUG - stack []
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=221)
2024-03-14 20:36:42,833 - DEBUG - stack ['$exp36.3']
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=221)
2024-03-14 20:36:42,833 - DEBUG - stack ['$exp36.3', '$const38.4']
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=221)
2024-03-14 20:36:42,833 - DEBUG - stack ['$40compare_op.5']
2024-03-14 20:36:42,833 - DEBUG - end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
2024-03-14 20:36:42,833 - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2024-03-14 20:36:42,833 - DEBUG - stack: []
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=232)
2024-03-14 20:36:42,833 - DEBUG - stack []
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=3, lineno=232)
2024-03-14 20:36:42,833 - DEBUG - stack ['$const98.0']
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=233)
2024-03-14 20:36:42,833 - DEBUG - stack []
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=104, inst=STORE_FAST(arg=4, lineno=233)
2024-03-14 20:36:42,833 - DEBUG - stack ['$b102.1']
2024-03-14 20:36:42,833 - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
2024-03-14 20:36:42,833 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-14 20:36:42,833 - DEBUG - stack: []
2024-03-14 20:36:42,833 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=222)
2024-03-14 20:36:42,839 - DEBUG - stack []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=222)
2024-03-14 20:36:42,839 - DEBUG - stack ['$44load_global.0']
2024-03-14 20:36:42,839 - DEBUG - end state. edges=[]
2024-03-14 20:36:42,839 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-14 20:36:42,839 - DEBUG - stack: []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=223)
2024-03-14 20:36:42,839 - DEBUG - stack []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=223)
2024-03-14 20:36:42,839 - DEBUG - stack ['$48load_deref.0']
2024-03-14 20:36:42,839 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
2024-03-14 20:36:42,839 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-14 20:36:42,839 - DEBUG - stack: []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=234)
2024-03-14 20:36:42,839 - DEBUG - stack []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=234)
2024-03-14 20:36:42,839 - DEBUG - stack ['$exp106.0']
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=234)
2024-03-14 20:36:42,839 - DEBUG - stack ['$exp106.0', '$const108.1']
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=234)
2024-03-14 20:36:42,839 - DEBUG - stack ['$110compare_op.2']
2024-03-14 20:36:42,839 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
2024-03-14 20:36:42,839 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-14 20:36:42,839 - DEBUG - stack: []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=224)
2024-03-14 20:36:42,839 - DEBUG - stack []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=224)
2024-03-14 20:36:42,839 - DEBUG - stack ['$a52.0']
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=224)
2024-03-14 20:36:42,839 - DEBUG - stack ['$a52.0', '$const54.1']
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=224)
2024-03-14 20:36:42,839 - DEBUG - stack ['$56compare_op.2']
2024-03-14 20:36:42,839 - DEBUG - end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
2024-03-14 20:36:42,839 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2024-03-14 20:36:42,839 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2024-03-14 20:36:42,839 - DEBUG - stack: []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=236)
2024-03-14 20:36:42,839 - DEBUG - stack []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=236)
2024-03-14 20:36:42,839 - DEBUG - stack ['$114load_global.0']
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=236)
2024-03-14 20:36:42,839 - DEBUG - stack ['$116load_method.1']
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=236)
2024-03-14 20:36:42,839 - DEBUG - stack ['$116load_method.1', '$a118.2']
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=236)
2024-03-14 20:36:42,839 - DEBUG - stack ['$116load_method.1', '$a118.2', '$120load_global.3']
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=236)
2024-03-14 20:36:42,839 - DEBUG - stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=236)
2024-03-14 20:36:42,839 - DEBUG - stack ['$116load_method.1', '$a118.2', '$124call_function.5']
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=236)
2024-03-14 20:36:42,839 - DEBUG - stack ['$126call_method.6']
2024-03-14 20:36:42,839 - DEBUG - end state. edges=[]
2024-03-14 20:36:42,839 - DEBUG - pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2024-03-14 20:36:42,839 - DEBUG - stack: []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=237)
2024-03-14 20:36:42,839 - DEBUG - stack []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=237)
2024-03-14 20:36:42,839 - DEBUG - stack ['$exp130.0']
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=237)
2024-03-14 20:36:42,839 - DEBUG - stack ['$exp130.0', '$const132.1']
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=237)
2024-03-14 20:36:42,839 - DEBUG - stack ['$134compare_op.2']
2024-03-14 20:36:42,839 - DEBUG - end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
2024-03-14 20:36:42,839 - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
2024-03-14 20:36:42,839 - DEBUG - stack: []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=225)
2024-03-14 20:36:42,839 - DEBUG - stack []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=225)
2024-03-14 20:36:42,839 - DEBUG - stack ['$60load_deref.0']
2024-03-14 20:36:42,839 - DEBUG - end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
2024-03-14 20:36:42,839 - DEBUG - pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
2024-03-14 20:36:42,839 - DEBUG - stack: []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=229)
2024-03-14 20:36:42,839 - DEBUG - stack []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=229)
2024-03-14 20:36:42,839 - DEBUG - stack ['$a76.0']
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=229)
2024-03-14 20:36:42,839 - DEBUG - stack ['$a76.0', '$const78.1']
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=229)
2024-03-14 20:36:42,839 - DEBUG - stack ['$80compare_op.2']
2024-03-14 20:36:42,839 - DEBUG - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
2024-03-14 20:36:42,839 - DEBUG - pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-14 20:36:42,839 - DEBUG - stack: []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=238)
2024-03-14 20:36:42,839 - DEBUG - stack []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=238)
2024-03-14 20:36:42,839 - DEBUG - stack ['$exp138.0']
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=142, inst=BINARY_AND(arg=None, lineno=238)
2024-03-14 20:36:42,839 - DEBUG - stack ['$exp138.0', '$const140.1']
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=238)
2024-03-14 20:36:42,839 - DEBUG - stack ['$142binary_and.2']
2024-03-14 20:36:42,839 - DEBUG - end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2024-03-14 20:36:42,839 - DEBUG - pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-03-14 20:36:42,839 - DEBUG - stack: []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=243)
2024-03-14 20:36:42,839 - DEBUG - stack []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=243)
2024-03-14 20:36:42,839 - DEBUG - stack ['$invert172.0']
2024-03-14 20:36:42,839 - DEBUG - end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
2024-03-14 20:36:42,839 - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
2024-03-14 20:36:42,839 - DEBUG - stack: []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=226)
2024-03-14 20:36:42,839 - DEBUG - stack []
2024-03-14 20:36:42,839 - DEBUG - dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=226)
2024-03-14 20:36:42,846 - DEBUG - stack ['$64load_deref.0']
2024-03-14 20:36:42,846 - DEBUG - end state. edges=[]
2024-03-14 20:36:42,846 - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
2024-03-14 20:36:42,846 - DEBUG - stack: []
2024-03-14 20:36:42,846 - DEBUG - dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=228)
2024-03-14 20:36:42,846 - DEBUG - stack []
2024-03-14 20:36:42,846 - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=228)
2024-03-14 20:36:42,846 - DEBUG - stack ['$68load_global.0']
2024-03-14 20:36:42,846 - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=228)
2024-03-14 20:36:42,846 - DEBUG - stack ['$68load_global.0', '$const70.1']
2024-03-14 20:36:42,846 - DEBUG - dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=228)
2024-03-14 20:36:42,846 - DEBUG - stack ['$72call_function.2']
2024-03-14 20:36:42,846 - DEBUG - end state. edges=[]
2024-03-14 20:36:42,846 - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
2024-03-14 20:36:42,846 - DEBUG - stack: []
2024-03-14 20:36:42,846 - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=229)
2024-03-14 20:36:42,847 - DEBUG - stack []
2024-03-14 20:36:42,847 - DEBUG - dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=229)
2024-03-14 20:36:42,847 - DEBUG - stack ['$a84.0']
2024-03-14 20:36:42,847 - DEBUG - dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=229)
2024-03-14 20:36:42,847 - DEBUG - stack ['$a84.0', '$const86.1']
2024-03-14 20:36:42,847 - DEBUG - dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=229)
2024-03-14 20:36:42,847 - DEBUG - stack ['$88compare_op.2']
2024-03-14 20:36:42,847 - DEBUG - end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
2024-03-14 20:36:42,847 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-14 20:36:42,847 - DEBUG - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-14 20:36:42,847 - DEBUG - stack: []
2024-03-14 20:36:42,847 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=239)
2024-03-14 20:36:42,847 - DEBUG - stack []
2024-03-14 20:36:42,847 - DEBUG - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=239)
2024-03-14 20:36:42,847 - DEBUG - stack ['$r146.0']
2024-03-14 20:36:42,847 - DEBUG - dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=239)
2024-03-14 20:36:42,848 - DEBUG - stack ['$r146.0', '$a148.1']
2024-03-14 20:36:42,848 - DEBUG - dispatch pc=152, inst=STORE_FAST(arg=2, lineno=239)
2024-03-14 20:36:42,848 - DEBUG - stack ['$150inplace_multiply.2']
2024-03-14 20:36:42,848 - DEBUG - end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
2024-03-14 20:36:42,849 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-03-14 20:36:42,849 - DEBUG - stack: []
2024-03-14 20:36:42,849 - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=240)
2024-03-14 20:36:42,849 - DEBUG - stack []
2024-03-14 20:36:42,849 - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=240)
2024-03-14 20:36:42,849 - DEBUG - stack ['$exp154.0']
2024-03-14 20:36:42,849 - DEBUG - dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=240)
2024-03-14 20:36:42,849 - DEBUG - stack ['$exp154.0', '$const156.1']
2024-03-14 20:36:42,849 - DEBUG - dispatch pc=160, inst=STORE_FAST(arg=4, lineno=240)
2024-03-14 20:36:42,849 - DEBUG - stack ['$158inplace_rshift.2']
2024-03-14 20:36:42,849 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=241)
2024-03-14 20:36:42,849 - DEBUG - stack []
2024-03-14 20:36:42,849 - DEBUG - dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=241)
2024-03-14 20:36:42,849 - DEBUG - stack ['$a162.3']
2024-03-14 20:36:42,849 - DEBUG - dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=241)
2024-03-14 20:36:42,850 - DEBUG - stack ['$a162.3', '$a164.4']
2024-03-14 20:36:42,850 - DEBUG - dispatch pc=168, inst=STORE_FAST(arg=0, lineno=241)
2024-03-14 20:36:42,850 - DEBUG - stack ['$166inplace_multiply.5']
2024-03-14 20:36:42,850 - DEBUG - dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=241)
2024-03-14 20:36:42,850 - DEBUG - stack []
2024-03-14 20:36:42,850 - DEBUG - end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
2024-03-14 20:36:42,850 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-14 20:36:42,850 - DEBUG - stack: []
2024-03-14 20:36:42,850 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=243)
2024-03-14 20:36:42,850 - DEBUG - stack []
2024-03-14 20:36:42,850 - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=243)
2024-03-14 20:36:42,850 - DEBUG - stack ['$const176.0']
2024-03-14 20:36:42,850 - DEBUG - dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=243)
2024-03-14 20:36:42,850 - DEBUG - stack ['$const176.0', '$r178.1']
2024-03-14 20:36:42,850 - DEBUG - dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=243)
2024-03-14 20:36:42,850 - DEBUG - stack ['$180binary_true_divide.2']
2024-03-14 20:36:42,851 - DEBUG - end state. edges=[]
2024-03-14 20:36:42,851 - DEBUG - pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-14 20:36:42,851 - DEBUG - stack: []
2024-03-14 20:36:42,851 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=243)
2024-03-14 20:36:42,851 - DEBUG - stack []
2024-03-14 20:36:42,851 - DEBUG - dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=243)
2024-03-14 20:36:42,851 - DEBUG - stack ['$r184.0']
2024-03-14 20:36:42,851 - DEBUG - end state. edges=[]
2024-03-14 20:36:42,851 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-14 20:36:42,851 - DEBUG - stack: []
2024-03-14 20:36:42,851 - DEBUG - dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=230)
2024-03-14 20:36:42,851 - DEBUG - stack []
2024-03-14 20:36:42,851 - DEBUG - dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=230)
2024-03-14 20:36:42,851 - DEBUG - stack ['$const92.0']
2024-03-14 20:36:42,851 - DEBUG - end state. edges=[]
2024-03-14 20:36:42,852 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-14 20:36:42,852 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-14 20:36:42,852 - DEBUG - pending: deque([State(pc_initial=130 nstack_initial=0)])
2024-03-14 20:36:42,852 - DEBUG - -------------------------Prune PHIs-------------------------
2024-03-14 20:36:42,852 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
2024-03-14 20:36:42,852 - DEBUG - defmap: {}
2024-03-14 20:36:42,852 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-03-14 20:36:42,852 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-03-14 20:36:42,852 - DEBUG - keep phismap: {}
2024-03-14 20:36:42,853 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-03-14 20:36:42,853 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-03-14 20:36:42,853 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
2024-03-14 20:36:42,853 - DEBUG - block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
2024-03-14 20:36:42,853 - DEBUG - block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-14 20:36:42,853 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
2024-03-14 20:36:42,853 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
2024-03-14 20:36:42,853 - DEBUG - block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
2024-03-14 20:36:42,853 - DEBUG - block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-14 20:36:42,853 - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-14 20:36:42,853 - DEBUG - block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
2024-03-14 20:36:42,853 - DEBUG - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
2024-03-14 20:36:42,853 - DEBUG - block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-14 20:36:42,854 - DEBUG - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
2024-03-14 20:36:42,854 - DEBUG - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
2024-03-14 20:36:42,854 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-14 20:36:42,854 - DEBUG - block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
2024-03-14 20:36:42,854 - DEBUG - block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
2024-03-14 20:36:42,854 - DEBUG - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
2024-03-14 20:36:42,854 - DEBUG - block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
2024-03-14 20:36:42,854 - DEBUG - block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
2024-03-14 20:36:42,854 - DEBUG - block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-14 20:36:42,854 - DEBUG - block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-14 20:36:42,857 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' (built-in)>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

2024-03-14 20:36:42,873 - DEBUG - ==== SSA block analysis pass on 0
2024-03-14 20:36:42,873 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C9EBC3E460>
2024-03-14 20:36:42,873 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:36:42,873 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:36:42,883 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:36:42,883 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:36:42,883 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,883 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:36:42,883 - DEBUG - ==== SSA block analysis pass on 26
2024-03-14 20:36:42,883 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C9EBC3E460>
2024-03-14 20:36:42,883 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:36:42,883 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:36:42,883 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,883 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:36:42,883 - DEBUG - ==== SSA block analysis pass on 44
2024-03-14 20:36:42,883 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C9EBC3E460>
2024-03-14 20:36:42,883 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:36:42,883 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:36:42,883 - DEBUG - ==== SSA block analysis pass on 48
2024-03-14 20:36:42,883 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C9EBC3E460>
2024-03-14 20:36:42,883 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:36:42,883 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,883 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,883 - DEBUG - ==== SSA block analysis pass on 98
2024-03-14 20:36:42,883 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C9EBC3E460>
2024-03-14 20:36:42,883 - DEBUG - on stmt: invert = const(bool, False)
2024-03-14 20:36:42,883 - DEBUG - on stmt: exp = b
2024-03-14 20:36:42,883 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,883 - DEBUG - ==== SSA block analysis pass on 106
2024-03-14 20:36:42,883 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C9EBC3E460>
2024-03-14 20:36:42,883 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:36:42,883 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,883 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:36:42,883 - DEBUG - ==== SSA block analysis pass on 114
2024-03-14 20:36:42,883 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C9EBC3E460>
2024-03-14 20:36:42,883 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:36:42,883 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:36:42,883 - DEBUG - ==== SSA block analysis pass on 130
2024-03-14 20:36:42,883 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C9EBC3E460>
2024-03-14 20:36:42,883 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:36:42,883 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,883 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:36:42,883 - DEBUG - ==== SSA block analysis pass on 138
2024-03-14 20:36:42,883 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C9EBC3E460>
2024-03-14 20:36:42,883 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:36:42,883 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,883 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:36:42,883 - DEBUG - ==== SSA block analysis pass on 146
2024-03-14 20:36:42,883 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C9EBC3E460>
2024-03-14 20:36:42,883 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,883 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-14 20:36:42,883 - DEBUG - on stmt: jump 154
2024-03-14 20:36:42,883 - DEBUG - ==== SSA block analysis pass on 154
2024-03-14 20:36:42,883 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C9EBC3E460>
2024-03-14 20:36:42,883 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,883 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-14 20:36:42,883 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,883 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-14 20:36:42,883 - DEBUG - on stmt: jump 130
2024-03-14 20:36:42,883 - DEBUG - ==== SSA block analysis pass on 172
2024-03-14 20:36:42,883 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C9EBC3E460>
2024-03-14 20:36:42,883 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,883 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:36:42,883 - DEBUG - ==== SSA block analysis pass on 176
2024-03-14 20:36:42,883 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C9EBC3E460>
2024-03-14 20:36:42,883 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:36:42,883 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-14 20:36:42,883 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:36:42,883 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:36:42,883 - DEBUG - ==== SSA block analysis pass on 184
2024-03-14 20:36:42,883 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C9EBC3E460>
2024-03-14 20:36:42,883 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-14 20:36:42,883 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:36:42,890 - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x000001C9EBC8BF70>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x000001C9EBCACF70>],
             '$112pred': [<numba.core.ir.Assign object at 0x000001C9EBCAF220>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x000001C9EBCAF460>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x000001C9EBCAF5E0>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x000001C9EBCAF880>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x000001C9EBCAFB80>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x000001C9EBCAFD30>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x000001C9EBCAFE20>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x000001C9EBCB2310>],
             '$136pred': [<numba.core.ir.Assign object at 0x000001C9EBCB2580>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x000001C9EBCB2A90>],
             '$144pred': [<numba.core.ir.Assign object at 0x000001C9EBCB2D00>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x000001C9EBCB41F0>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x000001C9EBCB4730>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x000001C9EBCB4BB0>],
             '$174pred': [<numba.core.ir.Assign object at 0x000001C9EBCB70A0>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x000001C9EBCB75B0>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x000001C9EBCB7700>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x000001C9EBCB7A60>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x000001C9EBCA17C0>],
             '$24pred': [<numba.core.ir.Assign object at 0x000001C9EBCA1A30>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x000001C9EBC8BD00>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x000001C9EBCA44C0>],
             '$42pred': [<numba.core.ir.Assign object at 0x000001C9EBCA4730>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x000001C9EBCA4850>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x000001C9EBC3EA00>],
             '$50pred': [<numba.core.ir.Assign object at 0x000001C9EBCA4B20>],
             '$const108.1': [<numba.core.ir.Assign object at 0x000001C9EBCACDC0>],
             '$const132.1': [<numba.core.ir.Assign object at 0x000001C9EBCB2160>],
             '$const140.1': [<numba.core.ir.Assign object at 0x000001C9EBCB28E0>],
             '$const156.1': [<numba.core.ir.Assign object at 0x000001C9EBCB4580>],
             '$const176.0': [<numba.core.ir.Assign object at 0x000001C9EBCB72E0>],
             '$const20.7': [<numba.core.ir.Assign object at 0x000001C9EBCA1610>],
             '$const38.4': [<numba.core.ir.Assign object at 0x000001C9EBCA4310>],
             '$const4.1': [<numba.core.ir.Assign object at 0x000001C9EBC8BAF0>],
             'a': [<numba.core.ir.Assign object at 0x000001C9EBC8B6D0>],
             'a.1': [<numba.core.ir.Assign object at 0x000001C9EBCA12B0>,
                     <numba.core.ir.Assign object at 0x000001C9EBCB4C70>],
             'b': [<numba.core.ir.Assign object at 0x000001C9EBC8B220>],
             'bool112': [<numba.core.ir.Assign object at 0x000001C9EBCAF100>],
             'bool136': [<numba.core.ir.Assign object at 0x000001C9EBCB2460>],
             'bool144': [<numba.core.ir.Assign object at 0x000001C9EBCB2BE0>],
             'bool174': [<numba.core.ir.Assign object at 0x000001C9EBCB4F40>],
             'bool24': [<numba.core.ir.Assign object at 0x000001C9EBCA1910>],
             'bool42': [<numba.core.ir.Assign object at 0x000001C9EBCA4610>],
             'bool50': [<numba.core.ir.Assign object at 0x000001C9EBCA4A00>],
             'exp': [<numba.core.ir.Assign object at 0x000001C9EBCA1F10>,
                     <numba.core.ir.Assign object at 0x000001C9EBCACB50>,
                     <numba.core.ir.Assign object at 0x000001C9EBCB47F0>],
             'invert': [<numba.core.ir.Assign object at 0x000001C9EBCA1B50>,
                        <numba.core.ir.Assign object at 0x000001C9EBCAC880>],
             'r': [<numba.core.ir.Assign object at 0x000001C9EBC8B3D0>,
                   <numba.core.ir.Assign object at 0x000001C9EBCB42B0>]})
2024-03-14 20:36:42,890 - DEBUG - SSA violators {'a.1', 'invert', 'r', 'exp'}
2024-03-14 20:36:42,890 - DEBUG - Fix SSA violator on var a.1
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:36:42,890 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:36:42,890 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:36:42,890 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - first assign: a.1
2024-03-14 20:36:42,890 - DEBUG - replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:36:42,890 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:36:42,890 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:36:42,890 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:36:42,890 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:36:42,890 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: invert = const(bool, False)
2024-03-14 20:36:42,890 - DEBUG - on stmt: exp = b
2024-03-14 20:36:42,890 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:36:42,890 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:36:42,890 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:36:42,890 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:36:42,890 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,890 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-14 20:36:42,890 - DEBUG - on stmt: jump 154
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,890 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-14 20:36:42,890 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,890 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-14 20:36:42,890 - DEBUG - replaced with: a.1.1 = $166inplace_multiply.5
2024-03-14 20:36:42,890 - DEBUG - on stmt: jump 130
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-14 20:36:42,890 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:36:42,890 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-14 20:36:42,890 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:36:42,890 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001C9EBC8BE20>],
             154: [<numba.core.ir.Assign object at 0x000001C9EBCB7FD0>]})
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:36:42,890 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:36:42,890 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:36:42,890 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:36:42,890 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:36:42,890 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:36:42,890 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:36:42,890 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:36:42,890 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,890 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: invert = const(bool, False)
2024-03-14 20:36:42,890 - DEBUG - on stmt: exp = b
2024-03-14 20:36:42,890 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,890 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-14 20:36:42,890 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,890 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:36:42,890 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,890 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,900 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:36:42,900 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-14 20:36:42,900 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,900 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:36:42,900 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:36:42,900 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:36:42,900 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,900 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,900 - DEBUG - find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,900 - DEBUG - find_def_from_top label 114
2024-03-14 20:36:42,900 - DEBUG - idom 106 from label 114
2024-03-14 20:36:42,900 - DEBUG - find_def_from_bottom label 106
2024-03-14 20:36:42,900 - DEBUG - find_def_from_top label 106
2024-03-14 20:36:42,900 - DEBUG - idom 0 from label 106
2024-03-14 20:36:42,900 - DEBUG - find_def_from_bottom label 0
2024-03-14 20:36:42,900 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:36:42,900 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:36:42,900 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-14 20:36:42,900 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,900 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:36:42,900 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:36:42,900 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,900 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,900 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:36:42,900 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-14 20:36:42,900 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,900 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:36:42,900 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:36:42,900 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,900 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,900 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:36:42,900 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-14 20:36:42,900 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,900 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,900 - DEBUG - find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,900 - DEBUG - find_def_from_top label 146
2024-03-14 20:36:42,900 - DEBUG - idom 138 from label 146
2024-03-14 20:36:42,900 - DEBUG - find_def_from_bottom label 138
2024-03-14 20:36:42,900 - DEBUG - find_def_from_top label 138
2024-03-14 20:36:42,900 - DEBUG - idom 130 from label 138
2024-03-14 20:36:42,900 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:36:42,900 - DEBUG - find_def_from_top label 130
2024-03-14 20:36:42,900 - DEBUG - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
2024-03-14 20:36:42,900 - DEBUG - find_def_from_bottom label 106
2024-03-14 20:36:42,900 - DEBUG - find_def_from_top label 106
2024-03-14 20:36:42,900 - DEBUG - idom 0 from label 106
2024-03-14 20:36:42,900 - DEBUG - find_def_from_bottom label 0
2024-03-14 20:36:42,900 - DEBUG - incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,900 - DEBUG - find_def_from_bottom label 154
2024-03-14 20:36:42,900 - DEBUG - incoming_def a.1.1 = $166inplace_multiply.5
2024-03-14 20:36:42,900 - DEBUG - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,900 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-14 20:36:42,900 - DEBUG - on stmt: jump 154
2024-03-14 20:36:42,900 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-14 20:36:42,900 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,900 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:36:42,900 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,900 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-14 20:36:42,900 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,900 - DEBUG - find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,900 - DEBUG - find_def_from_top label 154
2024-03-14 20:36:42,900 - DEBUG - idom 138 from label 154
2024-03-14 20:36:42,900 - DEBUG - find_def_from_bottom label 138
2024-03-14 20:36:42,900 - DEBUG - find_def_from_top label 138
2024-03-14 20:36:42,900 - DEBUG - idom 130 from label 138
2024-03-14 20:36:42,900 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:36:42,900 - DEBUG - replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,900 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-14 20:36:42,900 - DEBUG - on stmt: jump 130
2024-03-14 20:36:42,900 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-14 20:36:42,900 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,900 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,900 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,900 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:36:42,900 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-14 20:36:42,900 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,900 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:36:42,900 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-14 20:36:42,900 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:36:42,900 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:36:42,900 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-14 20:36:42,900 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,900 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-14 20:36:42,900 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:36:42,900 - DEBUG - Fix SSA violator on var invert
2024-03-14 20:36:42,900 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-14 20:36:42,900 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC3EE50>
2024-03-14 20:36:42,900 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:36:42,907 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:36:42,907 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:36:42,907 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:36:42,907 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC3EE50>
2024-03-14 20:36:42,907 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:36:42,907 - DEBUG - first assign: invert
2024-03-14 20:36:42,907 - DEBUG - replaced with: invert = const(bool, True)
2024-03-14 20:36:42,907 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:36:42,907 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC3EE50>
2024-03-14 20:36:42,907 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC3EE50>
2024-03-14 20:36:42,907 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:36:42,907 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC3EE50>
2024-03-14 20:36:42,907 - DEBUG - on stmt: invert = const(bool, False)
2024-03-14 20:36:42,907 - DEBUG - replaced with: invert.1 = const(bool, False)
2024-03-14 20:36:42,907 - DEBUG - on stmt: exp = b
2024-03-14 20:36:42,907 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC3EE50>
2024-03-14 20:36:42,907 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:36:42,907 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC3EE50>
2024-03-14 20:36:42,907 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:36:42,907 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC3EE50>
2024-03-14 20:36:42,907 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[106, 154])
2024-03-14 20:36:42,907 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:36:42,907 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC3EE50>
2024-03-14 20:36:42,907 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:36:42,907 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC3EE50>
2024-03-14 20:36:42,907 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,907 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-14 20:36:42,907 - DEBUG - on stmt: jump 154
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC3EE50>
2024-03-14 20:36:42,907 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,907 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-14 20:36:42,907 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,907 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-14 20:36:42,907 - DEBUG - on stmt: jump 130
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC3EE50>
2024-03-14 20:36:42,907 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC3EE50>
2024-03-14 20:36:42,907 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-14 20:36:42,907 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:36:42,907 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC3EE50>
2024-03-14 20:36:42,907 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-14 20:36:42,907 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:36:42,907 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x000001C9EBCB7F70>],
             98: [<numba.core.ir.Assign object at 0x000001C9EBCB7850>]})
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,907 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:36:42,907 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:36:42,907 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:36:42,907 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:36:42,907 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,907 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:36:42,907 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:36:42,907 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,907 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,907 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:36:42,907 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,907 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-03-14 20:36:42,907 - DEBUG - on stmt: exp = b
2024-03-14 20:36:42,907 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,907 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:36:42,907 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,907 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:36:42,907 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-14 20:36:42,907 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,907 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:36:42,907 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:36:42,917 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:36:42,917 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-14 20:36:42,917 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,917 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[106, 154])
2024-03-14 20:36:42,917 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:36:42,917 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,917 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:36:42,917 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-14 20:36:42,917 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,917 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:36:42,917 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,917 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:36:42,917 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-14 20:36:42,917 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,917 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,917 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-14 20:36:42,917 - DEBUG - on stmt: jump 154
2024-03-14 20:36:42,917 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-14 20:36:42,917 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,917 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,917 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-14 20:36:42,917 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,917 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-14 20:36:42,917 - DEBUG - on stmt: jump 130
2024-03-14 20:36:42,917 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-14 20:36:42,917 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,917 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,917 - DEBUG - find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,917 - DEBUG - find_def_from_top label 172
2024-03-14 20:36:42,917 - DEBUG - idom 130 from label 172
2024-03-14 20:36:42,917 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:36:42,917 - DEBUG - find_def_from_top label 130
2024-03-14 20:36:42,917 - DEBUG - idom 106 from label 130
2024-03-14 20:36:42,917 - DEBUG - find_def_from_bottom label 106
2024-03-14 20:36:42,917 - DEBUG - find_def_from_top label 106
2024-03-14 20:36:42,917 - DEBUG - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
2024-03-14 20:36:42,917 - DEBUG - find_def_from_bottom label 48
2024-03-14 20:36:42,917 - DEBUG - find_def_from_top label 48
2024-03-14 20:36:42,917 - DEBUG - idom 26 from label 48
2024-03-14 20:36:42,917 - DEBUG - find_def_from_bottom label 26
2024-03-14 20:36:42,917 - DEBUG - incoming_def invert = const(bool, True)
2024-03-14 20:36:42,917 - DEBUG - find_def_from_bottom label 98
2024-03-14 20:36:42,917 - DEBUG - incoming_def invert.1 = const(bool, False)
2024-03-14 20:36:42,917 - DEBUG - replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,917 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:36:42,917 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-14 20:36:42,917 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,917 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-14 20:36:42,917 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:36:42,917 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:36:42,917 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-14 20:36:42,917 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,917 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-14 20:36:42,917 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:36:42,917 - DEBUG - Fix SSA violator on var r
2024-03-14 20:36:42,917 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-14 20:36:42,917 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,917 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:36:42,917 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:36:42,917 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,917 - DEBUG - first assign: r
2024-03-14 20:36:42,917 - DEBUG - replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:36:42,917 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:36:42,917 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,917 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:36:42,917 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-14 20:36:42,917 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,917 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:36:42,917 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:36:42,917 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,917 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:36:42,917 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-14 20:36:42,917 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,917 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:36:42,917 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:36:42,917 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-14 20:36:42,917 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,917 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:36:42,917 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,917 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,917 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,917 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-03-14 20:36:42,923 - DEBUG - on stmt: exp = b
2024-03-14 20:36:42,923 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[48, 98])
2024-03-14 20:36:42,923 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:36:42,923 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,923 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:36:42,923 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[106, 154])
2024-03-14 20:36:42,923 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:36:42,923 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,923 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:36:42,923 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,923 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,923 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-14 20:36:42,923 - DEBUG - replaced with: r.1 = $150inplace_multiply.2
2024-03-14 20:36:42,923 - DEBUG - on stmt: jump 154
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,923 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-14 20:36:42,923 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,923 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-14 20:36:42,923 - DEBUG - on stmt: jump 130
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,923 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-14 20:36:42,923 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:36:42,923 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-14 20:36:42,923 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:36:42,923 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001C9EBC8B850>],
             146: [<numba.core.ir.Assign object at 0x000001C9EBCF34F0>]})
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:36:42,923 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:36:42,923 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:36:42,923 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:36:42,923 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,923 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:36:42,923 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:36:42,923 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,923 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:36:42,923 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:36:42,923 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,923 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-03-14 20:36:42,923 - DEBUG - on stmt: exp = b
2024-03-14 20:36:42,923 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[48, 98])
2024-03-14 20:36:42,923 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:36:42,923 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,923 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:36:42,923 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[106, 154])
2024-03-14 20:36:42,923 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:36:42,923 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,923 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:36:42,923 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,923 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,923 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:36:42,923 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-14 20:36:42,923 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,923 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,923 - DEBUG - find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,923 - DEBUG - find_def_from_top label 146
2024-03-14 20:36:42,923 - DEBUG - idom 138 from label 146
2024-03-14 20:36:42,923 - DEBUG - find_def_from_bottom label 138
2024-03-14 20:36:42,923 - DEBUG - find_def_from_top label 138
2024-03-14 20:36:42,923 - DEBUG - idom 130 from label 138
2024-03-14 20:36:42,923 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:36:42,923 - DEBUG - find_def_from_top label 130
2024-03-14 20:36:42,923 - DEBUG - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
2024-03-14 20:36:42,923 - DEBUG - find_def_from_bottom label 106
2024-03-14 20:36:42,923 - DEBUG - find_def_from_top label 106
2024-03-14 20:36:42,923 - DEBUG - idom 0 from label 106
2024-03-14 20:36:42,923 - DEBUG - find_def_from_bottom label 0
2024-03-14 20:36:42,923 - DEBUG - incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,933 - DEBUG - find_def_from_bottom label 154
2024-03-14 20:36:42,933 - DEBUG - find_def_from_top label 154
2024-03-14 20:36:42,933 - DEBUG - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
2024-03-14 20:36:42,933 - DEBUG - find_def_from_bottom label 138
2024-03-14 20:36:42,933 - DEBUG - find_def_from_top label 138
2024-03-14 20:36:42,933 - DEBUG - idom 130 from label 138
2024-03-14 20:36:42,933 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:36:42,933 - DEBUG - incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:216)], incoming_blocks=[106])
2024-03-14 20:36:42,933 - DEBUG - find_def_from_bottom label 146
2024-03-14 20:36:42,933 - DEBUG - incoming_def r.1 = $150inplace_multiply.2
2024-03-14 20:36:42,933 - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-14 20:36:42,933 - DEBUG - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,933 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-14 20:36:42,933 - DEBUG - on stmt: jump 154
2024-03-14 20:36:42,933 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-14 20:36:42,933 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,933 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:36:42,933 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,933 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-14 20:36:42,933 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,933 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-14 20:36:42,933 - DEBUG - on stmt: jump 130
2024-03-14 20:36:42,933 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-14 20:36:42,933 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,933 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,933 - DEBUG - on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,933 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:36:42,933 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-14 20:36:42,933 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,933 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:36:42,933 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-14 20:36:42,933 - DEBUG - find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
2024-03-14 20:36:42,933 - DEBUG - find_def_from_top label 176
2024-03-14 20:36:42,933 - DEBUG - idom 172 from label 176
2024-03-14 20:36:42,933 - DEBUG - find_def_from_bottom label 172
2024-03-14 20:36:42,933 - DEBUG - find_def_from_top label 172
2024-03-14 20:36:42,933 - DEBUG - idom 130 from label 172
2024-03-14 20:36:42,933 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:36:42,933 - DEBUG - replaced with: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-14 20:36:42,933 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:36:42,933 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:36:42,933 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-14 20:36:42,933 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC58BB0>
2024-03-14 20:36:42,933 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-14 20:36:42,933 - DEBUG - find_def var='r' stmt=$186return_value.1 = cast(value=r)
2024-03-14 20:36:42,933 - DEBUG - find_def_from_top label 184
2024-03-14 20:36:42,933 - DEBUG - idom 172 from label 184
2024-03-14 20:36:42,933 - DEBUG - find_def_from_bottom label 172
2024-03-14 20:36:42,933 - DEBUG - find_def_from_top label 172
2024-03-14 20:36:42,933 - DEBUG - idom 130 from label 172
2024-03-14 20:36:42,933 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:36:42,933 - DEBUG - replaced with: $186return_value.1 = cast(value=r.2)
2024-03-14 20:36:42,933 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:36:42,933 - DEBUG - Fix SSA violator on var exp
2024-03-14 20:36:42,933 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-14 20:36:42,933 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBCB7E50>
2024-03-14 20:36:42,933 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:36:42,933 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:36:42,933 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:36:42,933 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:36:42,933 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,933 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:36:42,933 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,933 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:36:42,933 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:36:42,933 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,933 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,933 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:36:42,933 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-14 20:36:42,933 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBCB7E50>
2024-03-14 20:36:42,933 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:36:42,933 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:36:42,933 - DEBUG - first assign: exp
2024-03-14 20:36:42,933 - DEBUG - replaced with: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:36:42,933 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:36:42,933 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:36:42,933 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,933 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,933 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:36:42,933 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-14 20:36:42,933 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBCB7E50>
2024-03-14 20:36:42,933 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:36:42,933 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:36:42,933 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-14 20:36:42,933 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBCB7E50>
2024-03-14 20:36:42,933 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:36:42,933 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,933 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,933 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,933 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-14 20:36:42,933 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBCB7E50>
2024-03-14 20:36:42,933 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-03-14 20:36:42,933 - DEBUG - on stmt: exp = b
2024-03-14 20:36:42,939 - DEBUG - replaced with: exp.1 = b
2024-03-14 20:36:42,939 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBCB7E50>
2024-03-14 20:36:42,939 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[48, 98])
2024-03-14 20:36:42,939 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:36:42,939 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,939 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBCB7E50>
2024-03-14 20:36:42,939 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:36:42,939 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBCB7E50>
2024-03-14 20:36:42,939 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
2024-03-14 20:36:42,939 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[106, 154])
2024-03-14 20:36:42,939 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:36:42,939 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,939 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBCB7E50>
2024-03-14 20:36:42,939 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:36:42,939 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,939 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBCB7E50>
2024-03-14 20:36:42,939 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,939 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-14 20:36:42,939 - DEBUG - on stmt: jump 154
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBCB7E50>
2024-03-14 20:36:42,939 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-14 20:36:42,939 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,939 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-14 20:36:42,939 - DEBUG - replaced with: exp.2 = $158inplace_rshift.2
2024-03-14 20:36:42,939 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,939 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-14 20:36:42,939 - DEBUG - on stmt: jump 130
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBCB7E50>
2024-03-14 20:36:42,939 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,939 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBCB7E50>
2024-03-14 20:36:42,939 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-14 20:36:42,939 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:36:42,939 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C9EBCB7E50>
2024-03-14 20:36:42,939 - DEBUG - on stmt: $186return_value.1 = cast(value=r.2)
2024-03-14 20:36:42,939 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:36:42,939 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x000001C9EBCB7BB0>],
             98: [<numba.core.ir.Assign object at 0x000001C9EBC3E040>],
             154: [<numba.core.ir.Assign object at 0x000001C9EBCF3100>]})
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,939 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-14 20:36:42,939 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-14 20:36:42,939 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-14 20:36:42,939 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-14 20:36:42,939 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,939 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,939 - DEBUG - on stmt: invert = const(bool, True)
2024-03-14 20:36:42,939 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-14 20:36:42,939 - DEBUG - find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
2024-03-14 20:36:42,939 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,939 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,939 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-14 20:36:42,939 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,939 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-14 20:36:42,939 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,939 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,939 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-03-14 20:36:42,939 - DEBUG - on stmt: exp.1 = b
2024-03-14 20:36:42,939 - DEBUG - on stmt: jump 106
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,939 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[48, 98])
2024-03-14 20:36:42,939 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-14 20:36:42,939 - DEBUG - find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
2024-03-14 20:36:42,939 - DEBUG - find_def_from_top label 106
2024-03-14 20:36:42,939 - DEBUG - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
2024-03-14 20:36:42,939 - DEBUG - find_def_from_bottom label 48
2024-03-14 20:36:42,939 - DEBUG - find_def_from_top label 48
2024-03-14 20:36:42,939 - DEBUG - idom 26 from label 48
2024-03-14 20:36:42,939 - DEBUG - find_def_from_bottom label 26
2024-03-14 20:36:42,939 - DEBUG - incoming_def exp = unary(fn=<built-in function neg>, value=b)
2024-03-14 20:36:42,939 - DEBUG - find_def_from_bottom label 98
2024-03-14 20:36:42,939 - DEBUG - incoming_def exp.1 = b
2024-03-14 20:36:42,939 - DEBUG - replaced with: $110compare_op.2 = exp.3 > $const108.1
2024-03-14 20:36:42,939 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,939 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,939 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-14 20:36:42,939 - DEBUG - on stmt: return $128return_value.7
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,939 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
2024-03-14 20:36:42,939 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[106, 154])
2024-03-14 20:36:42,939 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-14 20:36:42,939 - DEBUG - find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
2024-03-14 20:36:42,939 - DEBUG - find_def_from_top label 130
2024-03-14 20:36:42,939 - DEBUG - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
2024-03-14 20:36:42,939 - DEBUG - find_def_from_bottom label 106
2024-03-14 20:36:42,939 - DEBUG - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
2024-03-14 20:36:42,939 - DEBUG - find_def_from_bottom label 154
2024-03-14 20:36:42,939 - DEBUG - incoming_def exp.2 = $158inplace_rshift.2
2024-03-14 20:36:42,939 - DEBUG - replaced with: $134compare_op.2 = exp.4 != $const132.1
2024-03-14 20:36:42,939 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,939 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-14 20:36:42,939 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-14 20:36:42,939 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,939 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-14 20:36:42,939 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-14 20:36:42,939 - DEBUG - find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
2024-03-14 20:36:42,939 - DEBUG - find_def_from_top label 138
2024-03-14 20:36:42,939 - DEBUG - idom 130 from label 138
2024-03-14 20:36:42,949 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:36:42,949 - DEBUG - replaced with: $142binary_and.2 = exp.4 & $const140.1
2024-03-14 20:36:42,949 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,949 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,949 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-14 20:36:42,949 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-14 20:36:42,949 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,949 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,949 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-14 20:36:42,949 - DEBUG - on stmt: jump 154
2024-03-14 20:36:42,949 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-14 20:36:42,949 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,949 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-14 20:36:42,949 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-14 20:36:42,949 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,949 - DEBUG - find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,949 - DEBUG - find_def_from_top label 154
2024-03-14 20:36:42,949 - DEBUG - idom 138 from label 154
2024-03-14 20:36:42,949 - DEBUG - find_def_from_bottom label 138
2024-03-14 20:36:42,949 - DEBUG - find_def_from_top label 138
2024-03-14 20:36:42,949 - DEBUG - idom 130 from label 138
2024-03-14 20:36:42,949 - DEBUG - find_def_from_bottom label 130
2024-03-14 20:36:42,949 - DEBUG - replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,949 - DEBUG - on stmt: exp.2 = $158inplace_rshift.2
2024-03-14 20:36:42,949 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-14 20:36:42,949 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-14 20:36:42,949 - DEBUG - on stmt: jump 130
2024-03-14 20:36:42,949 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-14 20:36:42,949 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,949 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-14 20:36:42,949 - DEBUG - on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-14 20:36:42,949 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-14 20:36:42,949 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-14 20:36:42,949 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,949 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-14 20:36:42,949 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-14 20:36:42,949 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-14 20:36:42,949 - DEBUG - on stmt: return $182return_value.3
2024-03-14 20:36:42,949 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-14 20:36:42,949 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C9EBC8B8B0>
2024-03-14 20:36:42,949 - DEBUG - on stmt: $186return_value.1 = cast(value=r.2)
2024-03-14 20:36:42,949 - DEBUG - on stmt: return $186return_value.1
2024-03-14 20:36:43,567 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'I have this list of activities and the distances in km between each activity. Write a new list that is divided into 7 days. And in each day, write to me which attractions and restaurants to go to. I need you to also take into account the distances so we won\'t have too long trips. Also, don\'t repeat attractions on separate days. Don\'t assume any activity as a starting point. Just give the plan and also try to combine restaurants and attractions. If there is a bit of travel that\'s also ok; we don\'t need the closest attractions each day.\n{\n  "teamLab Planets TOKYO to Little Tokyo": 8811.197817791051,\n  "teamLab Planets TOKYO to Tokyo Tower": 4.135015472644106,\n  "teamLab Planets TOKYO to Tokyo Skytree": 7.0150617126516055,\n  "teamLab Planets TOKYO to Tokyo Disneyland": 8.392217763537737,\n  "teamLab Planets TOKYO to Tokyo Metro": 5.954032744460858,\n  "teamLab Planets TOKYO to Tokyo Localized - Free Walking Tour in Tokyo & More": 5.737941297891147,\n  "teamLab Planets TOKYO to Waho-An NATURE Tokyo": 7.627152918162808,\n  "teamLab Planets TOKYO to Tokyo Central Railway Station": 4.205173985387373,\n  "teamLab Planets TOKYO to Tokyo DisneySea": 8.963852776598237,\n  "teamLab Planets TOKYO to Tokyo Bay": 8827.426881886113,\n  "teamLab Planets TOKYO to NINJA TOKYO": 4.460968554128433,\n  "teamLab Planets TOKYO to Tokyo": 8700.281765643073,\n  "teamLab Planets TOKYO to Tokyo Restaurant": 9564.172623855065,\n  "teamLab Planets TOKYO to Starbucks Reserve(R) Roastery Tokyo": 8.780898806668041,\n  "teamLab Planets TOKYO to Tokyo Sushi": 10887.647579810606,\n  "teamLab Planets TOKYO to Tokyo Jo\'s": 12802.16153309465,\n  "teamLab Planets TOKYO to Tokyo Tokyo Central": 7934.728083918277,\n  "teamLab Planets TOKYO to Tokyo Pot": 10106.32645115756,\n  "teamLab Planets TOKYO to Tokyo Japanese Restaurant": 8862.338733678802,\n  "Little Tokyo to Tokyo Tower": 8813.918275333936,\n  "Little Tokyo to Tokyo Skytree": 8805.823764938723,\n  "Little Tokyo to Tokyo Disneyland": 8805.47377072589,\n  "Little Tokyo to Tokyo Metro": 8812.88031305338,\n  "Little Tokyo to Tokyo Localized - Free Walking Tour in Tokyo & More": 8809.334212222395,\n  "Little Tokyo to Waho-An NATURE Tokyo": 8817.367197940146,\n  "Little Tokyo to Tokyo Central Railway Station": 8810.983924597826,\n  "Little Tokyo to Tokyo DisneySea": 8805.50728334144,\n  "Little Tokyo to Tokyo Bay": 10491.66302046837,\n  "Little Tokyo to NINJA TOKYO": 8810.647619250398,\n  "Little Tokyo to Tokyo": 13288.966351208515,\n  "Little Tokyo to Tokyo Restaurant": 12199.9096149629,\n  "Little Tokyo to Starbucks Reserve(R) Roastery Tokyo": 8818.436052933388,\n  "Little Tokyo to Tokyo Sushi": 8991.65438696015,\n  "Little Tokyo to Tokyo Jo\'s": 4341.403849148749,\n  "Little Tokyo to Tokyo Tokyo Central": 13383.859439583257,\n  "Little Tokyo to Tokyo Pot": 1936.8583954228507,\n  "Little Tokyo to Tokyo Japanese Restaurant": 10251.18739155637,\n  "Tokyo Tower to Tokyo Skytree": 8.213889903337146,\n  "Tokyo Tower to Tokyo Disneyland": 12.525753567177098,\n  "Tokyo Tower to Tokyo Metro": 2.797157293748747,\n  "Tokyo Tower to Tokyo Localized - Free Walking Tour in Tokyo & More": 5.134596840379827,\n  "Tokyo Tower to Waho-An NATURE Tokyo": 3.7112389980622926,\n  "Tokyo Tower to Tokyo Central Railway Station": 3.128810254400667,\n  "Tokyo Tower to Tokyo DisneySea": 13.097586696445354,\n  "Tokyo Tower to Tokyo Bay": 8830.210118127101,\n  "Tokyo Tower to NINJA TOKYO": 3.5243810892747476,\n  "Tokyo Tower to Tokyo": 8696.18360635475,\n  "Tokyo Tower to Tokyo Restaurant": 9560.291762745408,\n  "Tokyo Tower to Starbucks Reserve(R) Roastery Tokyo": 4.8845133102841265,\n  "Tokyo Tower to Tokyo Sushi": 10885.105506482565,\n  "Tokyo Tower to Tokyo Jo\'s": 12803.932899650215,\n  "Tokyo Tower to Tokyo Tokyo Central": 7930.601952270996,\n  "Tokyo Tower to Tokyo Pot": 10108.275016587551,\n  "Tokyo Tower to Tokyo Japanese Restaurant": 8859.031650682731,\n  "Tokyo Skytree to Tokyo Disneyland": 10.650973885279516,\n  "Tokyo Skytree to Tokyo Metro": 7.158163180600412,\n  "Tokyo Skytree to Tokyo Localized - Free Walking Tour in Tokyo & More": 3.628394811361775,\n  "Tokyo Skytree to Waho-An NATURE Tokyo": 11.543460207581022,\n  "Tokyo Skytree to Tokyo Central Railway Station": 5.169435666026619,\n  "Tokyo Skytree to Tokyo DisneySea": 11.438318023870755,\n  "Tokyo Skytree to Tokyo Bay": 8832.520177657918,\n  "Tokyo Skytree to NINJA TOKYO": 4.824557368971413,\n  "Tokyo Skytree to Tokyo": 8699.487120062606,\n  "Tokyo Skytree to Tokyo Restaurant": 9561.883411806246,\n  "Tokyo Skytree to Starbucks Reserve(R) Roastery Tokyo": 12.620721072193188,\n  "Tokyo Skytree to Tokyo Sushi": 10882.201598241214,\n  "Tokyo Skytree to Tokyo Jo\'s": 12795.76408274421,\n  "Tokyo Skytree to Tokyo Tokyo Central": 7934.4097211396875,\n  "Tokyo Skytree to Tokyo Pot": 10100.074334587627,\n  "Tokyo Skytree to Tokyo Japanese Restaurant": 8858.241140326772,\n  "Tokyo Disneyland to Tokyo Metro": 13.972698517686116,\n  "Tokyo Disneyland to Tokyo Localized - Free Walking Tour in Tokyo & More": 12.190772005650029,\n  "Tokyo Disneyland to Waho-An NATURE Tokyo": 15.946171684789565,\n  "Tokyo Disneyland to Tokyo Central Railway Station": 11.713456300540646,\n  "Tokyo Disneyland to Tokyo DisneySea": 0.7894192111742601,\n  "Tokyo Disneyland to Tokyo Bay": 8821.98489989564,\n  "Tokyo Disneyland to NINJA TOKYO": 11.762609119991005,\n  "Tokyo Disneyland to Tokyo": 8708.558247871384,\n  "Tokyo Disneyland to Tokyo Restaurant": 9571.950227087083,\n  "Tokyo Disneyland to Starbucks Reserve(R) Roastery Tokyo": 17.071025896485512,\n  "Tokyo Disneyland to Tokyo Sushi": 10892.5870361196,\n  "Tokyo Disneyland to Tokyo Jo\'s": 12798.317487057548,\n  "Tokyo Disneyland to Tokyo Tokyo Central": 7943.079854621317,\n  "Tokyo Disneyland to Tokyo Pot": 10102.131863457127,\n  "Tokyo Disneyland to Tokyo Japanese Restaurant": 8868.882980916867,\n  "Tokyo Metro to Tokyo Localized - Free Walking Tour in Tokyo & More": 3.557471105667721,\n  "Tokyo Metro to Waho-An NATURE Tokyo": 4.6516607904663125,\n  "Tokyo Metro to Tokyo Central Railway Station": 2.425069214639181,\n  "Tokyo Metro to Tokyo DisneySea": 14.630615889909867,\n  "Tokyo Metro to Tokyo Bay": 8832.908967785435,\n  "Tokyo Metro to NINJA TOKYO": 2.575723076600498,\n  "Tokyo Metro to Tokyo": 8694.590179092567,\n  "Tokyo Metro to Tokyo Restaurant": 9558.237241258788,\n  "Tokyo Metro to Starbucks Reserve(R) Roastery Tokyo": 5.604901683052084,\n  "Tokyo Metro to Tokyo Sushi": 10882.358483339243,\n  "Tokyo Metro to Tokyo Jo\'s": 12802.227191868225,\n  "Tokyo Metro to Tokyo Tokyo Central": 7929.1686075730095,\n  "Tokyo Metro to Tokyo Pot": 10106.678106111867,\n  "Tokyo Metro to Tokyo Japanese Restaurant": 8856.518333104455,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Waho-An NATURE Tokyo": 8.088126557852785,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Central Railway Station": 2.056130331502995,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo DisneySea": 12.931391558087347,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Bay": 8833.031024620439,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to NINJA TOKYO": 1.6507944573933817,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo": 8696.78430506213,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Restaurant": 9559.770922236501,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Starbucks Reserve(R) Roastery Tokyo": 9.113279578810547,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Sushi": 10881.965864990136,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Jo\'s": 12798.892387543652,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Tokyo Central": 7931.548278903899,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Pot": 10103.287448088757,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Japanese Restaurant": 8857.065089816233,\n  "Waho-An NATURE Tokyo to Tokyo Central Railway Station": 6.389611700932529,\n  "Waho-An NATURE Tokyo to Tokyo DisneySea": 16.457977649573362,\n  "Waho-An NATURE Tokyo to Tokyo Bay": 8831.178604315166,\n  "Waho-An NATURE Tokyo to NINJA TOKYO": 6.719823092420816,\n  "Waho-An NATURE Tokyo to Tokyo": 8693.137700429264,\n  "Waho-An NATURE Tokyo to Tokyo Restaurant": 9557.778697978676,\n  "Waho-An NATURE Tokyo to Starbucks Reserve(R) Roastery Tokyo": 1.1743400722765946,\n  "Waho-An NATURE Tokyo to Tokyo Sushi": 10884.41296380771,\n  "Waho-An NATURE Tokyo to Tokyo Jo\'s": 12806.87867328609,\n  "Waho-An NATURE Tokyo to Tokyo Tokyo Central": 7927.418941722609,\n  "Waho-An NATURE Tokyo to Tokyo Pot": 10111.326138507902,\n  "Waho-An NATURE Tokyo to Tokyo Japanese Restaurant": 8857.409446448097,\n  "Tokyo Central Railway Station to Tokyo DisneySea": 12.400219243482875,\n  "Tokyo Central Railway Station to Tokyo Bay": 8831.623575373893,\n  "Tokyo Central Railway Station to NINJA TOKYO": 0.40585766498951203,\n  "Tokyo Central Railway Station to Tokyo": 8696.897232849338,\n  "Tokyo Central Railway Station to Tokyo Restaurant": 9560.326989898429,\n  "Tokyo Central Railway Station to Starbucks Reserve(R) Roastery Tokyo": 7.491899076881146,\n  "Tokyo Central Railway Station to Tokyo Sushi": 10883.483429053842,\n  "Tokyo Central Railway Station to Tokyo Jo\'s": 12800.81381646971,\n  "Tokyo Central Railway Station to Tokyo Tokyo Central": 7931.521171685702,\n  "Tokyo Central Railway Station to Tokyo Pot": 10105.171406400828,\n  "Tokyo Central Railway Station to Tokyo Japanese Restaurant": 8858.166425772439,\n  "Tokyo DisneySea to Tokyo Bay": 8821.197548282538,\n  "Tokyo DisneySea to NINJA TOKYO": 12.461946575206555,\n  "Tokyo DisneySea to Tokyo": 8709.197655323742,\n  "Tokyo DisneySea to Tokyo Restaurant": 9572.674888935611,\n  "Tokyo DisneySea to Starbucks Reserve(R) Roastery Tokyo": 17.569883766517393,\n  "Tokyo DisneySea to Tokyo Sushi": 10893.367751851234,\n  "Tokyo DisneySea to Tokyo Jo\'s": 12798.563446189875,\n  "Tokyo DisneySea to Tokyo Tokyo Central": 7943.686304849698,\n  "Tokyo DisneySea to Tokyo Pot": 10102.342081377912,\n  "Tokyo DisneySea to Tokyo Japanese Restaurant": 8869.667042842935,\n  "Tokyo Bay to NINJA TOKYO": 8831.887659837299,\n  "Tokyo Bay to Tokyo": 14940.212789376603,\n  "Tokyo Bay to Tokyo Restaurant": 16564.588877978913,\n  "Tokyo Bay to Starbucks Reserve(R) Roastery Tokyo": 8831.54016650305,\n  "Tokyo Bay to Tokyo Sushi": 19449.411700450462,\n  "Tokyo Bay to Tokyo Jo\'s": 12742.527669438521,\n  "Tokyo Bay to Tokyo Tokyo Central": 14201.33748823976,\n  "Tokyo Bay to Tokyo Pot": 12165.239942037651,\n  "Tokyo Bay to Tokyo Japanese Restaurant": 17400.67777156807,\n  "NINJA TOKYO to Tokyo": 8696.89336059579,\n  "NINJA TOKYO to Tokyo Restaurant": 9560.23508532595,\n  "NINJA TOKYO to Starbucks Reserve(R) Roastery Tokyo": 7.8073883582054755,\n  "NINJA TOKYO to Tokyo Sushi": 10883.196629119515,\n  "NINJA TOKYO to Tokyo Jo\'s": 12800.428379149746,\n  "NINJA TOKYO to Tokyo Tokyo Central": 7931.544931719195,\n  "NINJA TOKYO to Tokyo Pot": 10104.792533230335,\n  "NINJA TOKYO to Tokyo Japanese Restaurant": 8857.964818233182,\n  "Tokyo to Tokyo Restaurant": 1627.9152994233568,\n  "Tokyo to Starbucks Reserve(R) Roastery Tokyo": 8692.142285267944,\n  "Tokyo to Tokyo Sushi": 5375.908537313108,\n  "Tokyo to Tokyo Jo\'s": 12328.372374226441,\n  "Tokyo to Tokyo Tokyo Central": 872.2715749670297,\n  "Tokyo to Tokyo Pot": 12253.937589299188,\n  "Tokyo to Tokyo Japanese Restaurant": 3193.399954217947,\n  "Tokyo Restaurant to Starbucks Reserve(R) Roastery Tokyo": 9556.94223465533,\n  "Tokyo Restaurant to Tokyo Sushi": 3775.3070252306284,\n  "Tokyo Restaurant to Tokyo Jo\'s": 10716.70958295395,\n  "Tokyo Restaurant to Tokyo Tokyo Central": 2417.9068583399135,\n  "Tokyo Restaurant to Tokyo Pot": 10893.166758880021,\n  "Tokyo Restaurant to Tokyo Japanese Restaurant": 1970.3584626872782,\n  "Starbucks Reserve(R) Roastery Tokyo to Tokyo Sushi": 10884.13765073737,\n  "Starbucks Reserve(R) Roastery Tokyo to Tokyo Jo\'s": 12807.774697111814,\n  "Starbucks Reserve(R) Roastery Tokyo to Tokyo Tokyo Central": 7926.3834805403785,\n  "Starbucks Reserve(R) Roastery Tokyo to Tokyo Pot": 10112.257774767299,\n  "Starbucks Reserve(R) Roastery Tokyo to Tokyo Japanese Restaurant": 8856.845201881451,\n  "Tokyo Sushi to Tokyo Jo\'s": 6952.854690291814,\n  "Tokyo Sushi to Tokyo Tokyo Central": 6064.247941222804,\n  "Tokyo Sushi to Tokyo Pot": 7356.597399649553,\n  "Tokyo Sushi to Tokyo Japanese Restaurant": 2631.5080580354766,\n  "Tokyo Jo\'s to Tokyo Tokyo Central": 12994.024647983984,\n  "Tokyo Jo\'s to Tokyo Pot": 2711.870048111382,\n  "Tokyo Jo\'s to Tokyo Japanese Restaurant": 9357.201273336948,\n  "Tokyo Tokyo Central to Tokyo Pot": 12599.604809957538,\n  "Tokyo Tokyo Central to Tokyo Japanese Restaurant": 3679.221696114399,\n  "Tokyo Pot to Tokyo Japanese Restaurant": 9065.684493795221\n}'}], 'model': 'gpt-3.5-turbo'}}
2024-03-14 20:36:43,567 - DEBUG - close.started
2024-03-14 20:36:43,567 - DEBUG - close.complete
2024-03-14 20:36:43,567 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-14 20:36:43,575 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C9D53D0310>
2024-03-14 20:36:43,575 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C9D4251640> server_hostname='api.openai.com' timeout=5.0
2024-03-14 20:36:43,591 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C9D53D0520>
2024-03-14 20:36:43,591 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-14 20:36:43,591 - DEBUG - send_request_headers.complete
2024-03-14 20:36:43,601 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-14 20:36:43,601 - DEBUG - send_request_body.complete
2024-03-14 20:36:43,601 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-14 20:36:47,192 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:36:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0125'), (b'openai-organization', b'reichman-university-wxioss'), (b'openai-processing-ms', b'3222'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'996796'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'192ms'), (b'x-request-id', b'req_89e9a23f93f0b43da0e1831035dcfa8b'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'86465ef2e8ea09c1-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-14 20:36:47,192 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-03-14 20:36:47,192 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-14 20:36:47,192 - DEBUG - receive_response_body.complete
2024-03-14 20:36:47,192 - DEBUG - response_closed.started
2024-03-14 20:36:47,192 - DEBUG - response_closed.complete
2024-03-14 20:36:47,192 - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-03-14 20:36:47,199 - INFO - Destination: Tokyo
    Budget: 7000
    Dates: From 2024-05-01 to 2024-05-08
    Flights Info: {'search_metadata': {'id': '65f339e3351764ab52b38f92', 'status': 'Success', 'json_endpoint': 'https://serpapi.com/searches/0d91aaecbbcff35c/65f339e3351764ab52b38f92.json', 'created_at': '2024-03-14 17:54:43 UTC', 'processed_at': '2024-03-14 17:54:43 UTC', 'google_flights_url': 'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&q=Flights+to+NRT+from+TLV+on+2024-05-01+through+2024-05-08', 'raw_html_file': 'https://serpapi.com/searches/0d91aaecbbcff35c/65f339e3351764ab52b38f92.html', 'prettify_html_file': 'https://serpapi.com/searches/0d91aaecbbcff35c/65f339e3351764ab52b38f92.prettify', 'total_time_taken': 5.55}, 'search_parameters': {'engine': 'google_flights', 'hl': 'en', 'gl': 'us', 'departure_id': 'TLV', 'arrival_id': 'NRT', 'outbound_date': '2024-05-01', 'return_date': '2024-05-08', 'currency': 'USD'}, 'other_flights': [{'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 15:20'}, 'arrival_airport': {'name': 'Vienna International Airport', 'id': 'VIE', 'time': '2024-05-01 18:05'}, 'duration': 225, 'airplane': 'Airbus A321', 'airline': 'Austrian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OS.png', 'travel_class': 'Economy', 'flight_number': 'OS 858', 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'Carbon emissions estimate: 216 kg'], 'often_delayed_by_over_30_min': True}, {'departure_airport': {'name': 'Vienna International Airport', 'id': 'VIE', 'time': '2024-05-02 13:30'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-03 08:50'}, 'duration': 740, 'airplane': 'Boeing 777', 'airline': 'Austrian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OS.png', 'travel_class': 'Economy', 'flight_number': 'OS 51', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 693 kg'], 'overnight': True}], 'layovers': [{'duration': 1165, 'name': 'Vienna International Airport', 'id': 'VIE', 'overnight': True}], 'total_duration': 2130, 'carbon_emissions': {'this_flight': 911000, 'typical_for_this_route': 891000, 'difference_percent': 2}, 'price': 967, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OS.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFZ3BQVXpnMU9IeFBVelV4R2dzSWxmTUZFQUlhQTFWVFJEZ2NjSlh6QlE9PSIsW1siVExWIiwiMjAyNC0wNS0wMSIsIlZJRSIsbnVsbCwiT1MiLCI4NTgiXSxbIlZJRSIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk9TIiwiNTEiXV1d'}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 13:55'}, 'arrival_airport': {'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH', 'time': '2024-05-01 16:10'}, 'duration': 135, 'airplane': 'Airbus A320', 'airline': 'Aegean', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/A3.png', 'travel_class': 'Economy', 'flight_number': 'A3 925', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Carbon emissions estimate: 115 kg']}, {'departure_airport': {'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH', 'time': '2024-05-01 21:25'}, 'arrival_airport': {'name': 'Vienna International Airport', 'id': 'VIE', 'time': '2024-05-01 22:40'}, 'duration': 135, 'airplane': 'Airbus A320', 'airline': 'Austrian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OS.png', 'travel_class': 'Economy', 'flight_number': 'OS 808', 'legroom': '28 in', 'extensions': ['Below average legroom (28 in)', 'In-seat USB outlet', 'Carbon emissions estimate: 128 kg']}, {'departure_airport': {'name': 'Vienna International Airport', 'id': 'VIE', 'time': '2024-05-02 13:30'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-03 08:50'}, 'duration': 740, 'airplane': 'Boeing 777', 'airline': 'Austrian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OS.png', 'travel_class': 'Economy', 'flight_number': 'OS 51', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 693 kg'], 'overnight': True}], 'layovers': [{'duration': 315, 'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH'}, {'duration': 890, 'name': 'Vienna International Airport', 'id': 'VIE', 'overnight': True}], 'total_duration': 2215, 'carbon_emissions': {'this_flight': 938000, 'typical_for_this_route': 891000, 'difference_percent': 5}, 'price': 1185, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaEJCTXpreU5YeFBVemd3T0h4UFV6VXhHZ3NJd1owSEVBSWFBMVZUUkRnY2NNR2RCdz09IixbWyJUTFYiLCIyMDI0LTA1LTAxIiwiQVRIIixudWxsLCJBMyIsIjkyNSJdLFsiQVRIIiwiMjAyNC0wNS0wMSIsIlZJRSIsbnVsbCwiT1MiLCI4MDgiXSxbIlZJRSIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk9TIiwiNTEiXV1d'}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 10:00'}, 'arrival_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2024-05-01 14:15'}, 'duration': 255, 'airplane': 'Boeing 737MAX 8 Passenger', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 415', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Stream media to your device', 'Carbon emissions estimate: 188 kg']}, {'departure_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2024-05-01 22:35'}, 'arrival_airport': {'name': 'Incheon International Airport', 'id': 'ICN', 'time': '2024-05-02 16:00'}, 'duration': 685, 'airplane': 'Boeing 787', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 672', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 664 kg'], 'overnight': True}, {'departure_airport': {'name': 'Incheon International Airport', 'id': 'ICN', 'time': '2024-05-02 17:40'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-02 20:05'}, 'duration': 145, 'airplane': 'Boeing 787', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 672', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 118 kg']}], 'layovers': [{'duration': 500, 'name': 'Bole Addis Ababa International Airport', 'id': 'ADD'}, {'duration': 100, 'name': 'Incheon International Airport', 'id': 'ICN'}], 'total_duration': 1685, 'carbon_emissions': {'this_flight': 971000, 'typical_for_this_route': 891000, 'difference_percent': 9}, 'price': 1203, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaEZGVkRReE5YeEZWRFkzTW54RlZEWTNNaG9MQ09lckJ4QUNHZ05WVTBRNEhIRG5xd2M9IixbWyJUTFYiLCIyMDI0LTA1LTAxIiwiQUREIixudWxsLCJFVCIsIjQxNSJdLFsiQUREIiwiMjAyNC0wNS0wMSIsIklDTiIsbnVsbCwiRVQiLCI2NzIiXSxbIklDTiIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIkVUIiwiNjcyIl1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 05:00'}, 'arrival_airport': {'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH', 'time': '2024-05-01 07:10'}, 'duration': 130, 'airplane': 'Airbus A320', 'airline': 'Aegean', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/A3.png', 'travel_class': 'Economy', 'flight_number': 'A3 929', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Carbon emissions estimate: 115 kg']}, {'departure_airport': {'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH', 'time': '2024-05-01 08:35'}, 'arrival_airport': {'name': 'Munich International Airport', 'id': 'MUC', 'time': '2024-05-01 10:15'}, 'duration': 160, 'airplane': 'Airbus A320neo', 'airline': 'Aegean', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/A3.png', 'travel_class': 'Economy', 'flight_number': 'A3 802', 'ticket_also_sold_by': ['Lufthansa'], 'legroom': '28 in', 'extensions': ['Below average legroom (28 in)', 'Free Wi-Fi', 'In-seat USB outlet', 'Carbon emissions estimate: 109 kg']}, {'departure_airport': {'name': 'Munich International Airport', 'id': 'MUC', 'time': '2024-05-01 11:55'}, 'arrival_airport': {'name': 'Kansai International Airport', 'id': 'KIX', 'time': '2024-05-02 06:55'}, 'duration': 720, 'airplane': 'Airbus A350', 'airline': 'Lufthansa', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LH.png', 'travel_class': 'Economy', 'flight_number': 'LH 742', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 556 kg'], 'overnight': True}, {'departure_airport': {'name': 'Osaka International Airport', 'id': 'ITM', 'time': '2024-05-02 14:15'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-02 15:40'}, 'duration': 85, 'airplane': 'Boeing 737', 'airline': 'ANA', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/NH.png', 'travel_class': 'Economy', 'flight_number': 'NH 2178', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'Free Wi-Fi', 'Stream media to your device', 'Carbon emissions estimate: 84 kg']}], 'layovers': [{'duration': 85, 'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH'}, {'duration': 100, 'name': 'Munich International Airport', 'id': 'MUC'}, {'duration': 440, 'name': 'Osaka International Airport', 'id': 'KIX'}], 'total_duration': 1720, 'carbon_emissions': {'this_flight': 867000, 'typical_for_this_route': 891000, 'difference_percent': -3}, 'price': 1282, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaGhCTXpreU9YeEJNemd3TW54TVNEYzBNbnhPU0RJeE56Z2FDd2pENlFjUUFob0RWVk5FT0J4d3cra0giLFtbIlRMViIsIjIwMjQtMDUtMDEiLCJBVEgiLG51bGwsIkEzIiwiOTI5Il0sWyJBVEgiLCIyMDI0LTA1LTAxIiwiTVVDIixudWxsLCJBMyIsIjgwMiJdLFsiTVVDIiwiMjAyNC0wNS0wMSIsIktJWCIsbnVsbCwiTEgiLCI3NDIiXSxbIklUTSIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk5IIiwiMjE3OCJdXV0='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 10:00'}, 'arrival_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2024-05-01 14:15'}, 'duration': 255, 'airplane': 'Boeing 737MAX 8 Passenger', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 415', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Stream media to your device', 'Carbon emissions estimate: 188 kg']}, {'departure_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2024-05-01 22:35'}, 'arrival_airport': {'name': 'Incheon International Airport', 'id': 'ICN', 'time': '2024-05-02 16:00'}, 'duration': 685, 'airplane': 'Boeing 787', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 672', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 664 kg'], 'overnight': True}, {'departure_airport': {'name': 'Incheon International Airport', 'id': 'ICN', 'time': '2024-05-02 18:30'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-02 21:00'}, 'duration': 150, 'airplane': 'Airbus A330', 'airline': 'Asiana', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OZ.png', 'travel_class': 'Economy', 'flight_number': 'OZ 108', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'In-seat power outlet', 'On-demand video', 'Carbon emissions estimate: 123 kg']}], 'layovers': [{'duration': 500, 'name': 'Bole Addis Ababa International Airport', 'id': 'ADD'}, {'duration': 150, 'name': 'Incheon International Airport', 'id': 'ICN'}], 'total_duration': 1740, 'carbon_emissions': {'this_flight': 976000, 'typical_for_this_route': 891000, 'difference_percent': 10}, 'price': 1312, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaEZGVkRReE5YeEZWRFkzTW54UFdqRXdPQm9MQ1B1QUNCQUNHZ05WVTBRNEhIRDdnQWc9IixbWyJUTFYiLCIyMDI0LTA1LTAxIiwiQUREIixudWxsLCJFVCIsIjQxNSJdLFsiQUREIiwiMjAyNC0wNS0wMSIsIklDTiIsbnVsbCwiRVQiLCI2NzIiXSxbIklDTiIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk9aIiwiMTA4Il1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 04:45'}, 'arrival_airport': {'name': 'Frankfurt Airport', 'id': 'FRA', 'time': '2024-05-01 08:20'}, 'duration': 275, 'airplane': 'Airbus A321neo', 'airline': 'Lufthansa', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LH.png', 'travel_class': 'Economy', 'flight_number': 'LH 691', 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'In-seat USB outlet', 'Carbon emissions estimate: 213 kg'], 'overnight': True}, {'departure_airport': {'name': 'Frankfurt Airport', 'id': 'FRA', 'time': '2024-05-01 10:15'}, 'arrival_airport': {'name': 'Munich International Airport', 'id': 'MUC', 'time': '2024-05-01 11:10'}, 'duration': 55, 'airplane': 'Airbus A321', 'airline': 'Lufthansa', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LH.png', 'travel_class': 'Economy', 'flight_number': 'LH 100', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Wi-Fi for a fee', 'Carbon emissions estimate: 54 kg'], 'often_delayed_by_over_30_min': True}, {'departure_airport': {'name': 'Munich International Airport', 'id': 'MUC', 'time': '2024-05-01 11:55'}, 'arrival_airport': {'name': 'Kansai International Airport', 'id': 'KIX', 'time': '2024-05-02 06:55'}, 'duration': 720, 'airplane': 'Airbus A350', 'airline': 'Lufthansa', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LH.png', 'travel_class': 'Premium Economy', 'flight_number': 'LH 742', 'extensions': ['Extra reclining seat', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 834 kg'], 'overnight': True}, {'departure_airport': {'name': 'Osaka International Airport', 'id': 'ITM', 'time': '2024-05-02 14:15'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-02 15:40'}, 'duration': 85, 'airplane': 'Boeing 737', 'airline': 'ANA', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/NH.png', 'travel_class': 'Economy', 'flight_number': 'NH 2178', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'Free Wi-Fi', 'Stream media to your device', 'Carbon emissions estimate: 84 kg']}], 'layovers': [{'duration': 115, 'name': 'Frankfurt Airport', 'id': 'FRA'}, {'duration': 45, 'name': 'Munich International Airport', 'id': 'MUC'}, {'duration': 440, 'name': 'Osaka International Airport', 'id': 'KIX'}], 'total_duration': 1735, 'carbon_emissions': {'this_flight': 1188000, 'typical_for_this_route': 891000, 'difference_percent': 33}, 'price': 1322, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaGhNU0RZNU1YeE1TREV3TUh4TVNEYzBNbnhPU0RJeE56Z2FDd2luaUFnUUFob0RWVk5FT0J4d3A0Z0kiLFtbIlRMViIsIjIwMjQtMDUtMDEiLCJGUkEiLG51bGwsIkxIIiwiNjkxIl0sWyJGUkEiLCIyMDI0LTA1LTAxIiwiTVVDIixudWxsLCJMSCIsIjEwMCJdLFsiTVVDIiwiMjAyNC0wNS0wMSIsIktJWCIsbnVsbCwiTEgiLCI3NDIiXSxbIklUTSIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk5IIiwiMjE3OCJdXV0='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 05:00'}, 'arrival_airport': {'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH', 'time': '2024-05-01 07:10'}, 'duration': 130, 'airplane': 'Airbus A320', 'airline': 'Aegean', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/A3.png', 'travel_class': 'Economy', 'flight_number': 'A3 929', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Carbon emissions estimate: 115 kg']}, {'departure_airport': {'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH', 'time': '2024-05-01 08:30'}, 'arrival_airport': {'name': 'Zurich Airport', 'id': 'ZRH', 'time': '2024-05-01 10:20'}, 'duration': 170, 'airplane': 'Airbus A320neo', 'airline': 'Aegean', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/A3.png', 'travel_class': 'Economy', 'flight_number': 'A3 850', 'ticket_also_sold_by': ['SWISS'], 'legroom': '28 in', 'extensions': ['Below average legroom (28 in)', 'Free Wi-Fi', 'In-seat USB outlet', 'Carbon emissions estimate: 116 kg']}, {'departure_airport': {'name': 'Zurich Airport', 'id': 'ZRH', 'time': '2024-05-01 13:05'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-02 08:50'}, 'duration': 765, 'airplane': 'Boeing 777', 'airline': 'SWISS', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LX.png', 'travel_class': 'Economy', 'flight_number': 'LX 160', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 774 kg'], 'overnight': True}], 'layovers': [{'duration': 80, 'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH'}, {'duration': 165, 'name': 'Zurich Airport', 'id': 'ZRH'}], 'total_duration': 1310, 'carbon_emissions': {'this_flight': 1006000, 'typical_for_this_route': 891000, 'difference_percent': 13}, 'price': 1425, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaEZCTXpreU9YeEJNemcxTUh4TVdERTJNQm9MQ05uWUNCQUNHZ05WVTBRNEhIRFoyQWc9IixbWyJUTFYiLCIyMDI0LTA1LTAxIiwiQVRIIixudWxsLCJBMyIsIjkyOSJdLFsiQVRIIiwiMjAyNC0wNS0wMSIsIlpSSCIsbnVsbCwiQTMiLCI4NTAiXSxbIlpSSCIsIjIwMjQtMDUtMDEiLCJOUlQiLG51bGwsIkxYIiwiMTYwIl1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 14:45'}, 'arrival_airport': {'name': 'Zayed International Airport', 'id': 'AUH', 'time': '2024-05-01 18:55'}, 'duration': 190, 'airplane': 'Airbus A321', 'airline': 'Etihad', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/EY.png', 'travel_class': 'Economy', 'flight_number': 'EY 594', 'ticket_also_sold_by': ['El Al'], 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'Stream media to your device', 'Carbon emissions estimate: 192 kg']}, {'departure_airport': {'name': 'Zayed International Airport', 'id': 'AUH', 'time': '2024-05-01 21:55'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-02 13:00'}, 'duration': 605, 'airplane': 'Airbus A350', 'airline': 'Etihad', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/EY.png', 'travel_class': 'Economy', 'flight_number': 'EY 878', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 472 kg'], 'overnight': True}], 'layovers': [{'duration': 180, 'name': 'Zayed International Airport', 'id': 'AUH'}], 'total_duration': 975, 'carbon_emissions': {'this_flight': 665000, 'typical_for_this_route': 891000, 'difference_percent': -25}, 'price': 1702, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/EY.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFZ3RGV1RVNU5IeEZXVGczT0JvTENLdXhDaEFDR2dOVlUwUTRISENyc1FvPSIsW1siVExWIiwiMjAyNC0wNS0wMSIsIkFVSCIsbnVsbCwiRVkiLCI1OTQiXSxbIkFVSCIsIjIwMjQtMDUtMDEiLCJOUlQiLG51bGwsIkVZIiwiODc4Il1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 20:15'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-02 13:50'}, 'duration': 695, 'airplane': 'Boeing 787', 'airline': 'El Al', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'travel_class': 'Economy', 'flight_number': 'LY 91', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 634 kg'], 'overnight': True}], 'total_duration': 695, 'carbon_emissions': {'this_flight': 634000, 'typical_for_this_route': 891000, 'difference_percent': -29}, 'price': 2012, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFZ1JNV1RreEdnc0l4Nk1NRUFJYUExVlRSRGdjY01lakRBPT0iLFtbIlRMViIsIjIwMjQtMDUtMDEiLCJOUlQiLG51bGwsIkxZIiwiOTEiXV1d'}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-05-01 19:50'}, 'arrival_airport': {'name': 'Dubai International Airport', 'id': 'DXB', 'time': '2024-05-02 00:10'}, 'duration': 200, 'airplane': 'Boeing 737MAX 8 Passenger', 'airline': 'flydubai', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/FZ.png', 'travel_class': 'Economy', 'flight_number': 'FZ 1126', 'ticket_also_sold_by': ['Emirates'], 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 149 kg']}, {'departure_airport': {'name': 'Dubai International Airport', 'id': 'DXB', 'time': '2024-05-02 02:40'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-05-02 17:35'}, 'duration': 595, 'airplane': 'Airbus A380', 'airline': 'Emirates', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/EK.png', 'travel_class': 'Economy', 'flight_number': 'EK 318', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 671 kg'], 'overnight': True}], 'layovers': [{'duration': 150, 'name': 'Dubai International Airport', 'id': 'DXB', 'overnight': True}], 'total_duration': 945, 'carbon_emissions': {'this_flight': 820000, 'typical_for_this_route': 891000, 'difference_percent': -8}, 'price': 3203, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'departure_token': 'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFZ3hHV2pFeE1qWjhSVXN6TVRnYUN3ai94Uk1RQWhvRFZWTkVPQnh3LzhVVCIsW1siVExWIiwiMjAyNC0wNS0wMSIsIkRYQiIsbnVsbCwiRloiLCIxMTI2Il0sWyJEWEIiLCIyMDI0LTA1LTAyIiwiTlJUIixudWxsLCJFSyIsIjMxOCJdXV0='}], 'price_insights': {'lowest_price': 967, 'price_level': 'typical', 'typical_price_range': [760, 1150], 'price_history': [[1705183200, 1034], [1705269600, 1034], [1705356000, 1034], [1705442400, 1034], [1705528800, 1034], [1705615200, 1033], [1705701600, 1033], [1705788000, 1033], [1705874400, 1033], [1705960800, 1033], [1706047200, 1033], [1706133600, 1033], [1706220000, 1033], [1706306400, 1033], [1706392800, 1033], [1706479200, 1033], [1706565600, 1033], [1706652000, 1033], [1706738400, 1033], [1706824800, 1033], [1706911200, 1033], [1706997600, 983], [1707084000, 983], [1707170400, 982], [1707256800, 906], [1707343200, 982], [1707429600, 982], [1707516000, 982], [1707602400, 982], [1707688800, 982], [1707775200, 982], [1707861600, 982], [1707948000, 982], [1708034400, 982], [1708120800, 1002], [1708207200, 1003], [1708293600, 1033], [1708380000, 1033], [1708466400, 1005], [1708552800, 1005], [1708639200, 1055], [1708725600, 1056], [1708812000, 1057], [1708898400, 1007], [1708984800, 1006], [1709071200, 1057], [1709157600, 948], [1709244000, 897], [1709330400, 947], [1709416800, 947], [1709503200, 997], [1709589600, 997], [1709676000, 997], [1709762400, 1008], [1709848800, 949], [1709935200, 949], [1710021600, 951], [1710108000, 951], [1710194400, 1061], [1710280800, 1002], [1710367200, 967]]}}
    Accommodation Info: Top Hotels:
1. Shinagawa Prince Hotel
   - Check-in Time: 3:00 PM
   - Check-out Time: 11:00 AM
   - Rate Per Night (Lowest): $134
   - Total Rate (Lowest): $938
   - Nearby Places: Shinagawa Station, Haneda Airport, 中国料理 品川大飯店
   - Link: http://www.princehotels.co.jp/shinagawa/

2. Tokyo Bay Shiomi Prince Hotel
   - Check-in Time: 3:00 PM
   - Check-out Time: 11:00 AM
   - Rate Per Night (Lowest): $173
   - Total Rate (Lowest): $1,210
   - Nearby Places: Shiomi Station, Haneda Airport
   - Link: https://www.princehotels.com/shiomi/

3. Shinjuku Granbell Hotel
   - Check-in Time: 3:00 PM
   - Check-out Time: 12:00 PM
   - Rate Per Night (Lowest): $135
   - Total Rate (Lowest): $944
   - Nearby Places: Shinjuku Golden Gai, Higashi-Shinjuku Station, Haneda Airport, ペキンリョウリギョクラン
   - Link: https://www.granbellhotel.jp/shinjuku/

4. The Prince Park Tower Tokyo
   - Check-in Time: 3:00 PM
   - Check-out Time: 12:00 PM
   - Rate Per Night (Lowest): $259
   - Total Rate (Lowest): $1,810
   - Nearby Places: Tokyo Tower, Shibakoen Sta., Haneda Airport, Brise Verte
   - Link: http://www.princehotels.co.jp/parktower/

5. APA Hotel & Resort Ryogoku Eki Tower
   - Check-in Time: 3:00 PM
   - Check-out Time: 10:00 AM
   - Rate Per Night (Lowest): $73
   - Total Rate (Lowest): $514
   - Nearby Places: Edo-Tokyo Museum, Ryogoku Sta., Haneda Airport, Ryogoku Terrace
   - Link: https://www.apahotel.com/resort/ryogokueki/?utm_source=google&utm_medium=maps
    how to arrange the activities: Day 1:
- Visit Little Tokyo
- Lunch at Tokyo Sushi
- Dinner at Tokyo Jo's

Day 2:
- Visit teamLab Planets TOKYO
- Lunch at Waho-An NATURE Tokyo
- Dinner at Tokyo Restaurant

Day 3:
- Visit Tokyo Tower
- Lunch at NINJA TOKYO
- Dinner at Starbucks Reserve(R) Roastery Tokyo

Day 4:
- Visit Tokyo Skytree
- Lunch at Tokyo Localized - Free Walking Tour in Tokyo & More
- Dinner at Tokyo Central Railway Station

Day 5:
- Visit Tokyo Disneyland
- Lunch at Tokyo DisneySea
- Dinner at Tokyo Bay

Day 6:
- Visit Tokyo Metro
- Lunch at Tokyo Japanese Restaurant
- Dinner at Tokyo Pot

Day 7:
- Visit Tokyo
- Lunch at Tokyo Jo's
- Dinner at Tokyo Tokyo Central
    Activities Info: [{'location_id': '14951238', 'name': 'teamLab Planets TOKYO', 'address_obj': {'street1': '6-1-16', 'city': 'Toyosu', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '135-0061', 'address_string': '6-1-16, Toyosu, Koto 135-0061 Tokyo Prefecture'}}, {'location_id': '144151', 'name': 'Little Tokyo', 'address_obj': {'street1': 'Downtown', 'street2': 'Southeast of the Civic Center; bounded by 1st', 'city': 'Los Angeles', 'state': 'California', 'country': 'United States', 'postalcode': '', 'address_string': 'Downtown Southeast of the Civic Center; bounded by 1st, Los Angeles, CA'}}, {'location_id': '320047', 'name': 'Tokyo Tower', 'address_obj': {'street1': '4-chome 2-8', 'street2': '', 'city': 'Shibakoen', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '105-0011', 'address_string': '4-chome 2-8, Shibakoen, Minato 105-0011 Tokyo Prefecture'}}, {'location_id': '1872416', 'name': 'Tokyo Skytree', 'address_obj': {'street1': '1 Chome-1-2', 'street2': '', 'city': 'Oshiage', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '131-8634', 'address_string': '1 Chome-1-2, Oshiage, Sumida 131-8634 Tokyo Prefecture'}}, {'location_id': '320634', 'name': 'Tokyo Disneyland', 'address_obj': {'street1': '1-1 Maihama', 'street2': '', 'city': 'Maihama', 'state': 'Chiba Prefecture', 'country': 'Japan', 'postalcode': '279-0031', 'address_string': '1-1 Maihama, Maihama, Urayasu 279-0031 Chiba Prefecture'}}, {'location_id': '1509275', 'name': 'Tokyo Metro', 'address_obj': {'street1': '', 'street2': '', 'city': 'Kanto', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'address_string': 'Tokyo Prefecture'}}, {'location_id': '12310322', 'name': 'Tokyo Localized - Free Walking Tour in Tokyo & More', 'address_obj': {'street2': 'Meeting Place: AKB48 Cafe', 'city': 'Chiyoda', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '110-0006', 'address_string': 'Meeting Place: AKB48 Cafe, Chiyoda 110-0006 Tokyo Prefecture'}}, {'location_id': '7744338', 'name': 'Waho-An NATURE Tokyo', 'address_obj': {'street1': '7-8', 'street2': 'Dokken-Daikanyama-Heights1F', 'city': 'Daikanyama', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '150-0034', 'address_string': '7-8 Dokken-Daikanyama-Heights1F, Daikanyama, Shibuya 150-0034 Tokyo Prefecture'}}, {'location_id': '550327', 'name': 'Tokyo Central Railway Station', 'address_obj': {'street1': '1-9-1', 'street2': '', 'city': 'Marunouchi', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '100-0005', 'address_string': '1-9-1, Marunouchi, Chiyoda 100-0005 Tokyo Prefecture'}}, {'location_id': '320639', 'name': 'Tokyo DisneySea', 'address_obj': {'street1': '1-13', 'city': 'Maihama', 'state': 'Chiba Prefecture', 'country': 'Japan', 'postalcode': '279-0031', 'address_string': '1-13, Maihama, Urayasu 279-0031 Chiba Prefecture'}}, {'location_id': '7604418', 'name': 'Tokyo Bay', 'address_obj': {'street1': '20 The Strand', 'street2': 'Takapuna Beach', 'city': 'Takapuna', 'country': 'New Zealand', 'postalcode': '0622', 'address_string': '20 The Strand Takapuna Beach, Takapuna, Auckland 0622 New Zealand'}}, {'location_id': '1010352', 'name': 'NINJA TOKYO', 'address_obj': {'street1': '2-2-1 Otemachi', 'street2': 'Shinotemachi Bldg. B1F', 'city': 'Chiyoda', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '100-0004', 'address_string': '2-2-1 Otemachi Shinotemachi Bldg. B1F, Chiyoda 100-0004 Tokyo Prefecture'}}, {'location_id': '1160290', 'name': 'Tokyo', 'address_obj': {'street1': 'Al uruba Street', 'street2': '', 'city': 'Riyadh', 'state': 'Riyadh Province', 'country': 'Saudi Arabia', 'postalcode': '11323', 'address_string': 'Al uruba Street, Riyadh 11323 Saudi Arabia'}}, {'location_id': '24035984', 'name': 'Tokyo Restaurant', 'address_obj': {'street1': '13 El Thawra St', 'street2': 'Korba, Heliopolis', 'city': 'Cairo', 'state': 'Cairo Governorate', 'country': 'Egypt', 'postalcode': '4460242', 'address_string': '13 El Thawra St Korba, Heliopolis, Cairo 4460242 Egypt'}}, {'location_id': '16714835', 'name': 'Starbucks Reserve(R) Roastery Tokyo', 'address_obj': {'street1': '2-19-23 Aodabai', 'city': 'Meguro', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '153-0042', 'address_string': '2-19-23 Aodabai, Meguro 153-0042 Tokyo Prefecture'}}, {'location_id': '9798604', 'name': 'Tokyo Sushi', 'address_obj': {'street1': 'Rua de Alexandre Herculano 345', 'city': 'Porto', 'country': 'Portugal', 'postalcode': '4000-055', 'address_string': 'Rua de Alexandre Herculano 345, Porto 4000-055 Portugal'}}, {'location_id': '5113133', 'name': "Tokyo Jo's", 'address_obj': {'street1': 'Kent Avenue', 'street2': 'Sandals Montego Bay', 'city': 'Montego Bay', 'state': 'Jamaica', 'country': 'Caribbean', 'address_string': 'Kent Avenue Sandals Montego Bay, Montego Bay Jamaica'}}, {'location_id': '21356820', 'name': 'Tokyo Tokyo Central', 'address_obj': {'street1': '157 Salah Al Din St - Deira', 'street2': 'at Ramada By Wyndham Dubai Deira', 'city': 'Dubai', 'state': 'Emirate of Dubai', 'country': 'United Arab Emirates', 'address_string': '157 Salah Al Din St - Deira at Ramada By Wyndham Dubai Deira, Dubai United Arab Emirates'}}, {'location_id': '2167155', 'name': 'Tokyo Pot', 'address_obj': {'street1': '108 W 10th Ave', 'street2': '', 'city': 'Stillwater', 'state': 'Oklahoma', 'country': 'United States', 'postalcode': '74074-4627', 'address_string': '108 W 10th Ave, Stillwater, OK 74074-4627'}}, {'location_id': '1106443', 'name': 'Tokyo Japanese Restaurant', 'address_obj': {'street1': 'Strada profesor Marinescu Gheorghe No. 5', 'street2': '', 'city': 'Cluj-Napoca', 'country': 'Romania', 'postalcode': '400337', 'address_string': 'Strada profesor Marinescu Gheorghe No. 5, Cluj-Napoca 400337 Romania'}}]
    activities websites: [{'location_id': '14951238', 'name': 'teamLab Planets TOKYO', 'location': (35.649307, 139.78976), 'website': 'http://www.teamlab.art/e/planets/'}, {'location_id': '144151', 'name': 'Little Tokyo', 'location': (34.05114, -118.23803), 'website': 'http://www.visitlittletokyo.com/'}, {'location_id': '320047', 'name': 'Tokyo Tower', 'location': (35.65858, 139.74544), 'website': 'http://www.tokyotower.co.jp/'}, {'location_id': '1872416', 'name': 'Tokyo Skytree', 'location': (35.71007, 139.81065), 'website': 'http://www.tokyo-skytree.jp/en/'}, {'location_id': '320634', 'name': 'Tokyo Disneyland', 'location': (35.632835, 139.88039), 'website': 'https://www.tokyodisneyresort.jp/en/index.html'}, {'location_id': '1509275', 'name': 'Tokyo Metro', 'location': (35.683125, 139.73866), 'website': 'http://www.tokyometro.jp/index.html'}, {'location_id': '12310322', 'name': 'Tokyo Localized - Free Walking Tour in Tokyo & More', 'location': (35.699043, 139.77283), 'website': 'http://www.tokyolocalized.com/'}, {'location_id': '7744338', 'name': 'Waho-An NATURE Tokyo', 'location': (35.651203, 139.70538), 'website': 'http://www.natura-w.com/'}, {'location_id': '550327', 'name': 'Tokyo Central Railway Station', 'location': (35.681553, 139.76544), 'website': 'http://www.tokyostationcity.com/'}, {'location_id': '320639', 'name': 'Tokyo DisneySea', 'location': (35.62681, 139.88501), 'website': 'https://www.tokyodisneyresort.jp/tds/'}, {'location_id': '7604418', 'name': 'Tokyo Bay', 'location': (-36.786903, 174.77399), 'website': 'http://www.tokyobay.co.nz/'}, {'location_id': '1010352', 'name': 'NINJA TOKYO', 'location': (35.684948, 139.76709), 'website': 'https://www.ninja-tokyo.jp/home/home-en/'}, {'location_id': '1160290', 'name': 'Tokyo', 'location': (24.718328, 46.686707), 'website': 'http://www.tokyoarabia.com'}, {'location_id': '24035984', 'name': 'Tokyo Restaurant', 'location': (30.090359, 31.326263), 'website': 'https://www.instagram.com/tokyorestaurant_/?igshid=YmMyMTA2M2Y%3D'}, {'location_id': '16714835', 'name': 'Starbucks Reserve(R) Roastery Tokyo', 'location': (35.649372, 139.69258), 'website': 'http://store.starbucks.co.jp/detail-2381/'}, {'location_id': '9798604', 'name': 'Tokyo Sushi', 'location': (41.14435, -8.605821), 'website': 'http://www.facebook.com/Tokyosushi2'}, {'location_id': '5113133', 'name': "Tokyo Jo's", 'location': (18.509495, -77.9045), 'website': 'http://www.sandals.com/main/montego/mo-dining.cfm'}, {'location_id': '21356820', 'name': 'Tokyo Tokyo Central', 'location': (25.270615, 55.321823), 'website': 'https://www.facebook.com/TokyoTokyoCentralOfiicial'}, {'location_id': '2167155', 'name': 'Tokyo Pot', 'location': (36.111465, -97.059135), 'website': 'http://www.facebook.com/TokyoPot?rf=123605501023078'}, {'location_id': '1106443', 'name': 'Tokyo Japanese Restaurant', 'location': (46.763035, 23.583824), 'website': 'http://www.tokyorestaurant.ro/'}]
2024-03-14 20:36:47,199 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'Destination: Tokyo\n    Budget: 7000\n    Dates: From 2024-05-01 to 2024-05-08\n    Flights Info: {\'search_metadata\': {\'id\': \'65f339e3351764ab52b38f92\', \'status\': \'Success\', \'json_endpoint\': \'https://serpapi.com/searches/0d91aaecbbcff35c/65f339e3351764ab52b38f92.json\', \'created_at\': \'2024-03-14 17:54:43 UTC\', \'processed_at\': \'2024-03-14 17:54:43 UTC\', \'google_flights_url\': \'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&q=Flights+to+NRT+from+TLV+on+2024-05-01+through+2024-05-08\', \'raw_html_file\': \'https://serpapi.com/searches/0d91aaecbbcff35c/65f339e3351764ab52b38f92.html\', \'prettify_html_file\': \'https://serpapi.com/searches/0d91aaecbbcff35c/65f339e3351764ab52b38f92.prettify\', \'total_time_taken\': 5.55}, \'search_parameters\': {\'engine\': \'google_flights\', \'hl\': \'en\', \'gl\': \'us\', \'departure_id\': \'TLV\', \'arrival_id\': \'NRT\', \'outbound_date\': \'2024-05-01\', \'return_date\': \'2024-05-08\', \'currency\': \'USD\'}, \'other_flights\': [{\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 15:20\'}, \'arrival_airport\': {\'name\': \'Vienna International Airport\', \'id\': \'VIE\', \'time\': \'2024-05-01 18:05\'}, \'duration\': 225, \'airplane\': \'Airbus A321\', \'airline\': \'Austrian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OS.png\', \'travel_class\': \'Economy\', \'flight_number\': \'OS 858\', \'legroom\': \'29 in\', \'extensions\': [\'Below average legroom (29 in)\', \'Wi-Fi for a fee\', \'In-seat USB outlet\', \'Carbon emissions estimate: 216 kg\'], \'often_delayed_by_over_30_min\': True}, {\'departure_airport\': {\'name\': \'Vienna International Airport\', \'id\': \'VIE\', \'time\': \'2024-05-02 13:30\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-03 08:50\'}, \'duration\': 740, \'airplane\': \'Boeing 777\', \'airline\': \'Austrian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OS.png\', \'travel_class\': \'Economy\', \'flight_number\': \'OS 51\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 693 kg\'], \'overnight\': True}], \'layovers\': [{\'duration\': 1165, \'name\': \'Vienna International Airport\', \'id\': \'VIE\', \'overnight\': True}], \'total_duration\': 2130, \'carbon_emissions\': {\'this_flight\': 911000, \'typical_for_this_route\': 891000, \'difference_percent\': 2}, \'price\': 967, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OS.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFZ3BQVXpnMU9IeFBVelV4R2dzSWxmTUZFQUlhQTFWVFJEZ2NjSlh6QlE9PSIsW1siVExWIiwiMjAyNC0wNS0wMSIsIlZJRSIsbnVsbCwiT1MiLCI4NTgiXSxbIlZJRSIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk9TIiwiNTEiXV1d\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 13:55\'}, \'arrival_airport\': {\'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\', \'time\': \'2024-05-01 16:10\'}, \'duration\': 135, \'airplane\': \'Airbus A320\', \'airline\': \'Aegean\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/A3.png\', \'travel_class\': \'Economy\', \'flight_number\': \'A3 925\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Carbon emissions estimate: 115 kg\']}, {\'departure_airport\': {\'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\', \'time\': \'2024-05-01 21:25\'}, \'arrival_airport\': {\'name\': \'Vienna International Airport\', \'id\': \'VIE\', \'time\': \'2024-05-01 22:40\'}, \'duration\': 135, \'airplane\': \'Airbus A320\', \'airline\': \'Austrian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OS.png\', \'travel_class\': \'Economy\', \'flight_number\': \'OS 808\', \'legroom\': \'28 in\', \'extensions\': [\'Below average legroom (28 in)\', \'In-seat USB outlet\', \'Carbon emissions estimate: 128 kg\']}, {\'departure_airport\': {\'name\': \'Vienna International Airport\', \'id\': \'VIE\', \'time\': \'2024-05-02 13:30\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-03 08:50\'}, \'duration\': 740, \'airplane\': \'Boeing 777\', \'airline\': \'Austrian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OS.png\', \'travel_class\': \'Economy\', \'flight_number\': \'OS 51\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 693 kg\'], \'overnight\': True}], \'layovers\': [{\'duration\': 315, \'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\'}, {\'duration\': 890, \'name\': \'Vienna International Airport\', \'id\': \'VIE\', \'overnight\': True}], \'total_duration\': 2215, \'carbon_emissions\': {\'this_flight\': 938000, \'typical_for_this_route\': 891000, \'difference_percent\': 5}, \'price\': 1185, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaEJCTXpreU5YeFBVemd3T0h4UFV6VXhHZ3NJd1owSEVBSWFBMVZUUkRnY2NNR2RCdz09IixbWyJUTFYiLCIyMDI0LTA1LTAxIiwiQVRIIixudWxsLCJBMyIsIjkyNSJdLFsiQVRIIiwiMjAyNC0wNS0wMSIsIlZJRSIsbnVsbCwiT1MiLCI4MDgiXSxbIlZJRSIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk9TIiwiNTEiXV1d\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 10:00\'}, \'arrival_airport\': {\'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'time\': \'2024-05-01 14:15\'}, \'duration\': 255, \'airplane\': \'Boeing 737MAX 8 Passenger\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 415\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Stream media to your device\', \'Carbon emissions estimate: 188 kg\']}, {\'departure_airport\': {\'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'time\': \'2024-05-01 22:35\'}, \'arrival_airport\': {\'name\': \'Incheon International Airport\', \'id\': \'ICN\', \'time\': \'2024-05-02 16:00\'}, \'duration\': 685, \'airplane\': \'Boeing 787\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 672\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 664 kg\'], \'overnight\': True}, {\'departure_airport\': {\'name\': \'Incheon International Airport\', \'id\': \'ICN\', \'time\': \'2024-05-02 17:40\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-02 20:05\'}, \'duration\': 145, \'airplane\': \'Boeing 787\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 672\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 118 kg\']}], \'layovers\': [{\'duration\': 500, \'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\'}, {\'duration\': 100, \'name\': \'Incheon International Airport\', \'id\': \'ICN\'}], \'total_duration\': 1685, \'carbon_emissions\': {\'this_flight\': 971000, \'typical_for_this_route\': 891000, \'difference_percent\': 9}, \'price\': 1203, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaEZGVkRReE5YeEZWRFkzTW54RlZEWTNNaG9MQ09lckJ4QUNHZ05WVTBRNEhIRG5xd2M9IixbWyJUTFYiLCIyMDI0LTA1LTAxIiwiQUREIixudWxsLCJFVCIsIjQxNSJdLFsiQUREIiwiMjAyNC0wNS0wMSIsIklDTiIsbnVsbCwiRVQiLCI2NzIiXSxbIklDTiIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIkVUIiwiNjcyIl1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 05:00\'}, \'arrival_airport\': {\'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\', \'time\': \'2024-05-01 07:10\'}, \'duration\': 130, \'airplane\': \'Airbus A320\', \'airline\': \'Aegean\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/A3.png\', \'travel_class\': \'Economy\', \'flight_number\': \'A3 929\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Carbon emissions estimate: 115 kg\']}, {\'departure_airport\': {\'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\', \'time\': \'2024-05-01 08:35\'}, \'arrival_airport\': {\'name\': \'Munich International Airport\', \'id\': \'MUC\', \'time\': \'2024-05-01 10:15\'}, \'duration\': 160, \'airplane\': \'Airbus A320neo\', \'airline\': \'Aegean\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/A3.png\', \'travel_class\': \'Economy\', \'flight_number\': \'A3 802\', \'ticket_also_sold_by\': [\'Lufthansa\'], \'legroom\': \'28 in\', \'extensions\': [\'Below average legroom (28 in)\', \'Free Wi-Fi\', \'In-seat USB outlet\', \'Carbon emissions estimate: 109 kg\']}, {\'departure_airport\': {\'name\': \'Munich International Airport\', \'id\': \'MUC\', \'time\': \'2024-05-01 11:55\'}, \'arrival_airport\': {\'name\': \'Kansai International Airport\', \'id\': \'KIX\', \'time\': \'2024-05-02 06:55\'}, \'duration\': 720, \'airplane\': \'Airbus A350\', \'airline\': \'Lufthansa\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LH.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LH 742\', \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'Wi-Fi for a fee\', \'In-seat power & USB outlets\', \'On-demand video\', \'Carbon emissions estimate: 556 kg\'], \'overnight\': True}, {\'departure_airport\': {\'name\': \'Osaka International Airport\', \'id\': \'ITM\', \'time\': \'2024-05-02 14:15\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-02 15:40\'}, \'duration\': 85, \'airplane\': \'Boeing 737\', \'airline\': \'ANA\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/NH.png\', \'travel_class\': \'Economy\', \'flight_number\': \'NH 2178\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'Free Wi-Fi\', \'Stream media to your device\', \'Carbon emissions estimate: 84 kg\']}], \'layovers\': [{\'duration\': 85, \'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\'}, {\'duration\': 100, \'name\': \'Munich International Airport\', \'id\': \'MUC\'}, {\'duration\': 440, \'name\': \'Osaka International Airport\', \'id\': \'KIX\'}], \'total_duration\': 1720, \'carbon_emissions\': {\'this_flight\': 867000, \'typical_for_this_route\': 891000, \'difference_percent\': -3}, \'price\': 1282, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaGhCTXpreU9YeEJNemd3TW54TVNEYzBNbnhPU0RJeE56Z2FDd2pENlFjUUFob0RWVk5FT0J4d3cra0giLFtbIlRMViIsIjIwMjQtMDUtMDEiLCJBVEgiLG51bGwsIkEzIiwiOTI5Il0sWyJBVEgiLCIyMDI0LTA1LTAxIiwiTVVDIixudWxsLCJBMyIsIjgwMiJdLFsiTVVDIiwiMjAyNC0wNS0wMSIsIktJWCIsbnVsbCwiTEgiLCI3NDIiXSxbIklUTSIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk5IIiwiMjE3OCJdXV0=\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 10:00\'}, \'arrival_airport\': {\'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'time\': \'2024-05-01 14:15\'}, \'duration\': 255, \'airplane\': \'Boeing 737MAX 8 Passenger\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 415\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Stream media to your device\', \'Carbon emissions estimate: 188 kg\']}, {\'departure_airport\': {\'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'time\': \'2024-05-01 22:35\'}, \'arrival_airport\': {\'name\': \'Incheon International Airport\', \'id\': \'ICN\', \'time\': \'2024-05-02 16:00\'}, \'duration\': 685, \'airplane\': \'Boeing 787\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 672\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 664 kg\'], \'overnight\': True}, {\'departure_airport\': {\'name\': \'Incheon International Airport\', \'id\': \'ICN\', \'time\': \'2024-05-02 18:30\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-02 21:00\'}, \'duration\': 150, \'airplane\': \'Airbus A330\', \'airline\': \'Asiana\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OZ.png\', \'travel_class\': \'Economy\', \'flight_number\': \'OZ 108\', \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'In-seat power outlet\', \'On-demand video\', \'Carbon emissions estimate: 123 kg\']}], \'layovers\': [{\'duration\': 500, \'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\'}, {\'duration\': 150, \'name\': \'Incheon International Airport\', \'id\': \'ICN\'}], \'total_duration\': 1740, \'carbon_emissions\': {\'this_flight\': 976000, \'typical_for_this_route\': 891000, \'difference_percent\': 10}, \'price\': 1312, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaEZGVkRReE5YeEZWRFkzTW54UFdqRXdPQm9MQ1B1QUNCQUNHZ05WVTBRNEhIRDdnQWc9IixbWyJUTFYiLCIyMDI0LTA1LTAxIiwiQUREIixudWxsLCJFVCIsIjQxNSJdLFsiQUREIiwiMjAyNC0wNS0wMSIsIklDTiIsbnVsbCwiRVQiLCI2NzIiXSxbIklDTiIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk9aIiwiMTA4Il1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 04:45\'}, \'arrival_airport\': {\'name\': \'Frankfurt Airport\', \'id\': \'FRA\', \'time\': \'2024-05-01 08:20\'}, \'duration\': 275, \'airplane\': \'Airbus A321neo\', \'airline\': \'Lufthansa\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LH.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LH 691\', \'legroom\': \'29 in\', \'extensions\': [\'Below average legroom (29 in)\', \'In-seat USB outlet\', \'Carbon emissions estimate: 213 kg\'], \'overnight\': True}, {\'departure_airport\': {\'name\': \'Frankfurt Airport\', \'id\': \'FRA\', \'time\': \'2024-05-01 10:15\'}, \'arrival_airport\': {\'name\': \'Munich International Airport\', \'id\': \'MUC\', \'time\': \'2024-05-01 11:10\'}, \'duration\': 55, \'airplane\': \'Airbus A321\', \'airline\': \'Lufthansa\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LH.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LH 100\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Wi-Fi for a fee\', \'Carbon emissions estimate: 54 kg\'], \'often_delayed_by_over_30_min\': True}, {\'departure_airport\': {\'name\': \'Munich International Airport\', \'id\': \'MUC\', \'time\': \'2024-05-01 11:55\'}, \'arrival_airport\': {\'name\': \'Kansai International Airport\', \'id\': \'KIX\', \'time\': \'2024-05-02 06:55\'}, \'duration\': 720, \'airplane\': \'Airbus A350\', \'airline\': \'Lufthansa\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LH.png\', \'travel_class\': \'Premium Economy\', \'flight_number\': \'LH 742\', \'extensions\': [\'Extra reclining seat\', \'Wi-Fi for a fee\', \'In-seat power & USB outlets\', \'On-demand video\', \'Carbon emissions estimate: 834 kg\'], \'overnight\': True}, {\'departure_airport\': {\'name\': \'Osaka International Airport\', \'id\': \'ITM\', \'time\': \'2024-05-02 14:15\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-02 15:40\'}, \'duration\': 85, \'airplane\': \'Boeing 737\', \'airline\': \'ANA\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/NH.png\', \'travel_class\': \'Economy\', \'flight_number\': \'NH 2178\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'Free Wi-Fi\', \'Stream media to your device\', \'Carbon emissions estimate: 84 kg\']}], \'layovers\': [{\'duration\': 115, \'name\': \'Frankfurt Airport\', \'id\': \'FRA\'}, {\'duration\': 45, \'name\': \'Munich International Airport\', \'id\': \'MUC\'}, {\'duration\': 440, \'name\': \'Osaka International Airport\', \'id\': \'KIX\'}], \'total_duration\': 1735, \'carbon_emissions\': {\'this_flight\': 1188000, \'typical_for_this_route\': 891000, \'difference_percent\': 33}, \'price\': 1322, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaGhNU0RZNU1YeE1TREV3TUh4TVNEYzBNbnhPU0RJeE56Z2FDd2luaUFnUUFob0RWVk5FT0J4d3A0Z0kiLFtbIlRMViIsIjIwMjQtMDUtMDEiLCJGUkEiLG51bGwsIkxIIiwiNjkxIl0sWyJGUkEiLCIyMDI0LTA1LTAxIiwiTVVDIixudWxsLCJMSCIsIjEwMCJdLFsiTVVDIiwiMjAyNC0wNS0wMSIsIktJWCIsbnVsbCwiTEgiLCI3NDIiXSxbIklUTSIsIjIwMjQtMDUtMDIiLCJOUlQiLG51bGwsIk5IIiwiMjE3OCJdXV0=\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 05:00\'}, \'arrival_airport\': {\'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\', \'time\': \'2024-05-01 07:10\'}, \'duration\': 130, \'airplane\': \'Airbus A320\', \'airline\': \'Aegean\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/A3.png\', \'travel_class\': \'Economy\', \'flight_number\': \'A3 929\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Carbon emissions estimate: 115 kg\']}, {\'departure_airport\': {\'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\', \'time\': \'2024-05-01 08:30\'}, \'arrival_airport\': {\'name\': \'Zurich Airport\', \'id\': \'ZRH\', \'time\': \'2024-05-01 10:20\'}, \'duration\': 170, \'airplane\': \'Airbus A320neo\', \'airline\': \'Aegean\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/A3.png\', \'travel_class\': \'Economy\', \'flight_number\': \'A3 850\', \'ticket_also_sold_by\': [\'SWISS\'], \'legroom\': \'28 in\', \'extensions\': [\'Below average legroom (28 in)\', \'Free Wi-Fi\', \'In-seat USB outlet\', \'Carbon emissions estimate: 116 kg\']}, {\'departure_airport\': {\'name\': \'Zurich Airport\', \'id\': \'ZRH\', \'time\': \'2024-05-01 13:05\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-02 08:50\'}, \'duration\': 765, \'airplane\': \'Boeing 777\', \'airline\': \'SWISS\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LX.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LX 160\', \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'Wi-Fi for a fee\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 774 kg\'], \'overnight\': True}], \'layovers\': [{\'duration\': 80, \'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\'}, {\'duration\': 165, \'name\': \'Zurich Airport\', \'id\': \'ZRH\'}], \'total_duration\': 1310, \'carbon_emissions\': {\'this_flight\': 1006000, \'typical_for_this_route\': 891000, \'difference_percent\': 13}, \'price\': 1425, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFaEZCTXpreU9YeEJNemcxTUh4TVdERTJNQm9MQ05uWUNCQUNHZ05WVTBRNEhIRFoyQWc9IixbWyJUTFYiLCIyMDI0LTA1LTAxIiwiQVRIIixudWxsLCJBMyIsIjkyOSJdLFsiQVRIIiwiMjAyNC0wNS0wMSIsIlpSSCIsbnVsbCwiQTMiLCI4NTAiXSxbIlpSSCIsIjIwMjQtMDUtMDEiLCJOUlQiLG51bGwsIkxYIiwiMTYwIl1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 14:45\'}, \'arrival_airport\': {\'name\': \'Zayed International Airport\', \'id\': \'AUH\', \'time\': \'2024-05-01 18:55\'}, \'duration\': 190, \'airplane\': \'Airbus A321\', \'airline\': \'Etihad\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/EY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'EY 594\', \'ticket_also_sold_by\': [\'El Al\'], \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'Wi-Fi for a fee\', \'In-seat USB outlet\', \'Stream media to your device\', \'Carbon emissions estimate: 192 kg\']}, {\'departure_airport\': {\'name\': \'Zayed International Airport\', \'id\': \'AUH\', \'time\': \'2024-05-01 21:55\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-02 13:00\'}, \'duration\': 605, \'airplane\': \'Airbus A350\', \'airline\': \'Etihad\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/EY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'EY 878\', \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'Wi-Fi for a fee\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 472 kg\'], \'overnight\': True}], \'layovers\': [{\'duration\': 180, \'name\': \'Zayed International Airport\', \'id\': \'AUH\'}], \'total_duration\': 975, \'carbon_emissions\': {\'this_flight\': 665000, \'typical_for_this_route\': 891000, \'difference_percent\': -25}, \'price\': 1702, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/EY.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFZ3RGV1RVNU5IeEZXVGczT0JvTENLdXhDaEFDR2dOVlUwUTRISENyc1FvPSIsW1siVExWIiwiMjAyNC0wNS0wMSIsIkFVSCIsbnVsbCwiRVkiLCI1OTQiXSxbIkFVSCIsIjIwMjQtMDUtMDEiLCJOUlQiLG51bGwsIkVZIiwiODc4Il1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 20:15\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-02 13:50\'}, \'duration\': 695, \'airplane\': \'Boeing 787\', \'airline\': \'El Al\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LY 91\', \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'Wi-Fi for a fee\', \'In-seat power & USB outlets\', \'On-demand video\', \'Carbon emissions estimate: 634 kg\'], \'overnight\': True}], \'total_duration\': 695, \'carbon_emissions\': {\'this_flight\': 634000, \'typical_for_this_route\': 891000, \'difference_percent\': -29}, \'price\': 2012, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFZ1JNV1RreEdnc0l4Nk1NRUFJYUExVlRSRGdjY01lakRBPT0iLFtbIlRMViIsIjIwMjQtMDUtMDEiLCJOUlQiLG51bGwsIkxZIiwiOTEiXV1d\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-05-01 19:50\'}, \'arrival_airport\': {\'name\': \'Dubai International Airport\', \'id\': \'DXB\', \'time\': \'2024-05-02 00:10\'}, \'duration\': 200, \'airplane\': \'Boeing 737MAX 8 Passenger\', \'airline\': \'flydubai\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/FZ.png\', \'travel_class\': \'Economy\', \'flight_number\': \'FZ 1126\', \'ticket_also_sold_by\': [\'Emirates\'], \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 149 kg\']}, {\'departure_airport\': {\'name\': \'Dubai International Airport\', \'id\': \'DXB\', \'time\': \'2024-05-02 02:40\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-05-02 17:35\'}, \'duration\': 595, \'airplane\': \'Airbus A380\', \'airline\': \'Emirates\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/EK.png\', \'travel_class\': \'Economy\', \'flight_number\': \'EK 318\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'Wi-Fi for a fee\', \'In-seat power & USB outlets\', \'On-demand video\', \'Carbon emissions estimate: 671 kg\'], \'overnight\': True}], \'layovers\': [{\'duration\': 150, \'name\': \'Dubai International Airport\', \'id\': \'DXB\', \'overnight\': True}], \'total_duration\': 945, \'carbon_emissions\': {\'this_flight\': 820000, \'typical_for_this_route\': 891000, \'difference_percent\': -8}, \'price\': 3203, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'departure_token\': \'WyJDalJJZWtGMlVVSllkMnB6VWtGQlJUazNUVUZDUnkwdExTMHRMUzB0TFhaMGQyRXpOa0ZCUVVGQlIxaDZUMlZuUTNaVFJrTkJFZ3hHV2pFeE1qWjhSVXN6TVRnYUN3ai94Uk1RQWhvRFZWTkVPQnh3LzhVVCIsW1siVExWIiwiMjAyNC0wNS0wMSIsIkRYQiIsbnVsbCwiRloiLCIxMTI2Il0sWyJEWEIiLCIyMDI0LTA1LTAyIiwiTlJUIixudWxsLCJFSyIsIjMxOCJdXV0=\'}], \'price_insights\': {\'lowest_price\': 967, \'price_level\': \'typical\', \'typical_price_range\': [760, 1150], \'price_history\': [[1705183200, 1034], [1705269600, 1034], [1705356000, 1034], [1705442400, 1034], [1705528800, 1034], [1705615200, 1033], [1705701600, 1033], [1705788000, 1033], [1705874400, 1033], [1705960800, 1033], [1706047200, 1033], [1706133600, 1033], [1706220000, 1033], [1706306400, 1033], [1706392800, 1033], [1706479200, 1033], [1706565600, 1033], [1706652000, 1033], [1706738400, 1033], [1706824800, 1033], [1706911200, 1033], [1706997600, 983], [1707084000, 983], [1707170400, 982], [1707256800, 906], [1707343200, 982], [1707429600, 982], [1707516000, 982], [1707602400, 982], [1707688800, 982], [1707775200, 982], [1707861600, 982], [1707948000, 982], [1708034400, 982], [1708120800, 1002], [1708207200, 1003], [1708293600, 1033], [1708380000, 1033], [1708466400, 1005], [1708552800, 1005], [1708639200, 1055], [1708725600, 1056], [1708812000, 1057], [1708898400, 1007], [1708984800, 1006], [1709071200, 1057], [1709157600, 948], [1709244000, 897], [1709330400, 947], [1709416800, 947], [1709503200, 997], [1709589600, 997], [1709676000, 997], [1709762400, 1008], [1709848800, 949], [1709935200, 949], [1710021600, 951], [1710108000, 951], [1710194400, 1061], [1710280800, 1002], [1710367200, 967]]}}\n    Accommodation Info: Top Hotels:\n1. Shinagawa Prince Hotel\n   - Check-in Time: 3:00\u202fPM\n   - Check-out Time: 11:00\u202fAM\n   - Rate Per Night (Lowest): $134\n   - Total Rate (Lowest): $938\n   - Nearby Places: Shinagawa Station, Haneda Airport, 中国料理 品川大飯店\n   - Link: http://www.princehotels.co.jp/shinagawa/\n\n2. Tokyo Bay Shiomi Prince Hotel\n   - Check-in Time: 3:00\u202fPM\n   - Check-out Time: 11:00\u202fAM\n   - Rate Per Night (Lowest): $173\n   - Total Rate (Lowest): $1,210\n   - Nearby Places: Shiomi Station, Haneda Airport\n   - Link: https://www.princehotels.com/shiomi/\n\n3. Shinjuku Granbell Hotel\n   - Check-in Time: 3:00\u202fPM\n   - Check-out Time: 12:00\u202fPM\n   - Rate Per Night (Lowest): $135\n   - Total Rate (Lowest): $944\n   - Nearby Places: Shinjuku Golden Gai, Higashi-Shinjuku Station, Haneda Airport, ペキンリョウリギョクラン\n   - Link: https://www.granbellhotel.jp/shinjuku/\n\n4. The Prince Park Tower Tokyo\n   - Check-in Time: 3:00\u202fPM\n   - Check-out Time: 12:00\u202fPM\n   - Rate Per Night (Lowest): $259\n   - Total Rate (Lowest): $1,810\n   - Nearby Places: Tokyo Tower, Shibakoen Sta., Haneda Airport, Brise Verte\n   - Link: http://www.princehotels.co.jp/parktower/\n\n5. APA Hotel & Resort Ryogoku Eki Tower\n   - Check-in Time: 3:00\u202fPM\n   - Check-out Time: 10:00\u202fAM\n   - Rate Per Night (Lowest): $73\n   - Total Rate (Lowest): $514\n   - Nearby Places: Edo-Tokyo Museum, Ryogoku Sta., Haneda Airport, Ryogoku Terrace\n   - Link: https://www.apahotel.com/resort/ryogokueki/?utm_source=google&utm_medium=maps\n    how to arrange the activities: Day 1:\n- Visit Little Tokyo\n- Lunch at Tokyo Sushi\n- Dinner at Tokyo Jo\'s\n\nDay 2:\n- Visit teamLab Planets TOKYO\n- Lunch at Waho-An NATURE Tokyo\n- Dinner at Tokyo Restaurant\n\nDay 3:\n- Visit Tokyo Tower\n- Lunch at NINJA TOKYO\n- Dinner at Starbucks Reserve(R) Roastery Tokyo\n\nDay 4:\n- Visit Tokyo Skytree\n- Lunch at Tokyo Localized - Free Walking Tour in Tokyo & More\n- Dinner at Tokyo Central Railway Station\n\nDay 5:\n- Visit Tokyo Disneyland\n- Lunch at Tokyo DisneySea\n- Dinner at Tokyo Bay\n\nDay 6:\n- Visit Tokyo Metro\n- Lunch at Tokyo Japanese Restaurant\n- Dinner at Tokyo Pot\n\nDay 7:\n- Visit Tokyo\n- Lunch at Tokyo Jo\'s\n- Dinner at Tokyo Tokyo Central\n    Activities Info: [{\'location_id\': \'14951238\', \'name\': \'teamLab Planets TOKYO\', \'address_obj\': {\'street1\': \'6-1-16\', \'city\': \'Toyosu\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'135-0061\', \'address_string\': \'6-1-16, Toyosu, Koto 135-0061 Tokyo Prefecture\'}}, {\'location_id\': \'144151\', \'name\': \'Little Tokyo\', \'address_obj\': {\'street1\': \'Downtown\', \'street2\': \'Southeast of the Civic Center; bounded by 1st\', \'city\': \'Los Angeles\', \'state\': \'California\', \'country\': \'United States\', \'postalcode\': \'\', \'address_string\': \'Downtown Southeast of the Civic Center; bounded by 1st, Los Angeles, CA\'}}, {\'location_id\': \'320047\', \'name\': \'Tokyo Tower\', \'address_obj\': {\'street1\': \'4-chome 2-8\', \'street2\': \'\', \'city\': \'Shibakoen\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'105-0011\', \'address_string\': \'4-chome 2-8, Shibakoen, Minato 105-0011 Tokyo Prefecture\'}}, {\'location_id\': \'1872416\', \'name\': \'Tokyo Skytree\', \'address_obj\': {\'street1\': \'1 Chome-1-2\', \'street2\': \'\', \'city\': \'Oshiage\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'131-8634\', \'address_string\': \'1 Chome-1-2, Oshiage, Sumida 131-8634 Tokyo Prefecture\'}}, {\'location_id\': \'320634\', \'name\': \'Tokyo Disneyland\', \'address_obj\': {\'street1\': \'1-1 Maihama\', \'street2\': \'\', \'city\': \'Maihama\', \'state\': \'Chiba Prefecture\', \'country\': \'Japan\', \'postalcode\': \'279-0031\', \'address_string\': \'1-1 Maihama, Maihama, Urayasu 279-0031 Chiba Prefecture\'}}, {\'location_id\': \'1509275\', \'name\': \'Tokyo Metro\', \'address_obj\': {\'street1\': \'\', \'street2\': \'\', \'city\': \'Kanto\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'address_string\': \'Tokyo Prefecture\'}}, {\'location_id\': \'12310322\', \'name\': \'Tokyo Localized - Free Walking Tour in Tokyo & More\', \'address_obj\': {\'street2\': \'Meeting Place: AKB48 Cafe\', \'city\': \'Chiyoda\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'110-0006\', \'address_string\': \'Meeting Place: AKB48 Cafe, Chiyoda 110-0006 Tokyo Prefecture\'}}, {\'location_id\': \'7744338\', \'name\': \'Waho-An NATURE Tokyo\', \'address_obj\': {\'street1\': \'7-8\', \'street2\': \'Dokken-Daikanyama-Heights1F\', \'city\': \'Daikanyama\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'150-0034\', \'address_string\': \'7-8 Dokken-Daikanyama-Heights1F, Daikanyama, Shibuya 150-0034 Tokyo Prefecture\'}}, {\'location_id\': \'550327\', \'name\': \'Tokyo Central Railway Station\', \'address_obj\': {\'street1\': \'1-9-1\', \'street2\': \'\', \'city\': \'Marunouchi\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'100-0005\', \'address_string\': \'1-9-1, Marunouchi, Chiyoda 100-0005 Tokyo Prefecture\'}}, {\'location_id\': \'320639\', \'name\': \'Tokyo DisneySea\', \'address_obj\': {\'street1\': \'1-13\', \'city\': \'Maihama\', \'state\': \'Chiba Prefecture\', \'country\': \'Japan\', \'postalcode\': \'279-0031\', \'address_string\': \'1-13, Maihama, Urayasu 279-0031 Chiba Prefecture\'}}, {\'location_id\': \'7604418\', \'name\': \'Tokyo Bay\', \'address_obj\': {\'street1\': \'20 The Strand\', \'street2\': \'Takapuna Beach\', \'city\': \'Takapuna\', \'country\': \'New Zealand\', \'postalcode\': \'0622\', \'address_string\': \'20 The Strand Takapuna Beach, Takapuna, Auckland 0622 New Zealand\'}}, {\'location_id\': \'1010352\', \'name\': \'NINJA TOKYO\', \'address_obj\': {\'street1\': \'2-2-1 Otemachi\', \'street2\': \'Shinotemachi Bldg. B1F\', \'city\': \'Chiyoda\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'100-0004\', \'address_string\': \'2-2-1 Otemachi Shinotemachi Bldg. B1F, Chiyoda 100-0004 Tokyo Prefecture\'}}, {\'location_id\': \'1160290\', \'name\': \'Tokyo\', \'address_obj\': {\'street1\': \'Al uruba Street\', \'street2\': \'\', \'city\': \'Riyadh\', \'state\': \'Riyadh Province\', \'country\': \'Saudi Arabia\', \'postalcode\': \'11323\', \'address_string\': \'Al uruba Street, Riyadh 11323 Saudi Arabia\'}}, {\'location_id\': \'24035984\', \'name\': \'Tokyo Restaurant\', \'address_obj\': {\'street1\': \'13 El Thawra St\', \'street2\': \'Korba, Heliopolis\', \'city\': \'Cairo\', \'state\': \'Cairo Governorate\', \'country\': \'Egypt\', \'postalcode\': \'4460242\', \'address_string\': \'13 El Thawra St Korba, Heliopolis, Cairo 4460242 Egypt\'}}, {\'location_id\': \'16714835\', \'name\': \'Starbucks Reserve(R) Roastery Tokyo\', \'address_obj\': {\'street1\': \'2-19-23 Aodabai\', \'city\': \'Meguro\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'153-0042\', \'address_string\': \'2-19-23 Aodabai, Meguro 153-0042 Tokyo Prefecture\'}}, {\'location_id\': \'9798604\', \'name\': \'Tokyo Sushi\', \'address_obj\': {\'street1\': \'Rua de Alexandre Herculano 345\', \'city\': \'Porto\', \'country\': \'Portugal\', \'postalcode\': \'4000-055\', \'address_string\': \'Rua de Alexandre Herculano 345, Porto 4000-055 Portugal\'}}, {\'location_id\': \'5113133\', \'name\': "Tokyo Jo\'s", \'address_obj\': {\'street1\': \'Kent Avenue\', \'street2\': \'Sandals Montego Bay\', \'city\': \'Montego Bay\', \'state\': \'Jamaica\', \'country\': \'Caribbean\', \'address_string\': \'Kent Avenue Sandals Montego Bay, Montego Bay Jamaica\'}}, {\'location_id\': \'21356820\', \'name\': \'Tokyo Tokyo Central\', \'address_obj\': {\'street1\': \'157 Salah Al Din St - Deira\', \'street2\': \'at Ramada By Wyndham Dubai Deira\', \'city\': \'Dubai\', \'state\': \'Emirate of Dubai\', \'country\': \'United Arab Emirates\', \'address_string\': \'157 Salah Al Din St - Deira at Ramada By Wyndham Dubai Deira, Dubai United Arab Emirates\'}}, {\'location_id\': \'2167155\', \'name\': \'Tokyo Pot\', \'address_obj\': {\'street1\': \'108 W 10th Ave\', \'street2\': \'\', \'city\': \'Stillwater\', \'state\': \'Oklahoma\', \'country\': \'United States\', \'postalcode\': \'74074-4627\', \'address_string\': \'108 W 10th Ave, Stillwater, OK 74074-4627\'}}, {\'location_id\': \'1106443\', \'name\': \'Tokyo Japanese Restaurant\', \'address_obj\': {\'street1\': \'Strada profesor Marinescu Gheorghe No. 5\', \'street2\': \'\', \'city\': \'Cluj-Napoca\', \'country\': \'Romania\', \'postalcode\': \'400337\', \'address_string\': \'Strada profesor Marinescu Gheorghe No. 5, Cluj-Napoca 400337 Romania\'}}]\n    activities websites: [{\'location_id\': \'14951238\', \'name\': \'teamLab Planets TOKYO\', \'location\': (35.649307, 139.78976), \'website\': \'http://www.teamlab.art/e/planets/\'}, {\'location_id\': \'144151\', \'name\': \'Little Tokyo\', \'location\': (34.05114, -118.23803), \'website\': \'http://www.visitlittletokyo.com/\'}, {\'location_id\': \'320047\', \'name\': \'Tokyo Tower\', \'location\': (35.65858, 139.74544), \'website\': \'http://www.tokyotower.co.jp/\'}, {\'location_id\': \'1872416\', \'name\': \'Tokyo Skytree\', \'location\': (35.71007, 139.81065), \'website\': \'http://www.tokyo-skytree.jp/en/\'}, {\'location_id\': \'320634\', \'name\': \'Tokyo Disneyland\', \'location\': (35.632835, 139.88039), \'website\': \'https://www.tokyodisneyresort.jp/en/index.html\'}, {\'location_id\': \'1509275\', \'name\': \'Tokyo Metro\', \'location\': (35.683125, 139.73866), \'website\': \'http://www.tokyometro.jp/index.html\'}, {\'location_id\': \'12310322\', \'name\': \'Tokyo Localized - Free Walking Tour in Tokyo & More\', \'location\': (35.699043, 139.77283), \'website\': \'http://www.tokyolocalized.com/\'}, {\'location_id\': \'7744338\', \'name\': \'Waho-An NATURE Tokyo\', \'location\': (35.651203, 139.70538), \'website\': \'http://www.natura-w.com/\'}, {\'location_id\': \'550327\', \'name\': \'Tokyo Central Railway Station\', \'location\': (35.681553, 139.76544), \'website\': \'http://www.tokyostationcity.com/\'}, {\'location_id\': \'320639\', \'name\': \'Tokyo DisneySea\', \'location\': (35.62681, 139.88501), \'website\': \'https://www.tokyodisneyresort.jp/tds/\'}, {\'location_id\': \'7604418\', \'name\': \'Tokyo Bay\', \'location\': (-36.786903, 174.77399), \'website\': \'http://www.tokyobay.co.nz/\'}, {\'location_id\': \'1010352\', \'name\': \'NINJA TOKYO\', \'location\': (35.684948, 139.76709), \'website\': \'https://www.ninja-tokyo.jp/home/home-en/\'}, {\'location_id\': \'1160290\', \'name\': \'Tokyo\', \'location\': (24.718328, 46.686707), \'website\': \'http://www.tokyoarabia.com\'}, {\'location_id\': \'24035984\', \'name\': \'Tokyo Restaurant\', \'location\': (30.090359, 31.326263), \'website\': \'https://www.instagram.com/tokyorestaurant_/?igshid=YmMyMTA2M2Y%3D\'}, {\'location_id\': \'16714835\', \'name\': \'Starbucks Reserve(R) Roastery Tokyo\', \'location\': (35.649372, 139.69258), \'website\': \'http://store.starbucks.co.jp/detail-2381/\'}, {\'location_id\': \'9798604\', \'name\': \'Tokyo Sushi\', \'location\': (41.14435, -8.605821), \'website\': \'http://www.facebook.com/Tokyosushi2\'}, {\'location_id\': \'5113133\', \'name\': "Tokyo Jo\'s", \'location\': (18.509495, -77.9045), \'website\': \'http://www.sandals.com/main/montego/mo-dining.cfm\'}, {\'location_id\': \'21356820\', \'name\': \'Tokyo Tokyo Central\', \'location\': (25.270615, 55.321823), \'website\': \'https://www.facebook.com/TokyoTokyoCentralOfiicial\'}, {\'location_id\': \'2167155\', \'name\': \'Tokyo Pot\', \'location\': (36.111465, -97.059135), \'website\': \'http://www.facebook.com/TokyoPot?rf=123605501023078\'}, {\'location_id\': \'1106443\', \'name\': \'Tokyo Japanese Restaurant\', \'location\': (46.763035, 23.583824), \'website\': \'http://www.tokyorestaurant.ro/\'}]I\'m planning a trip and need a detailed plan based on this information. Please create a comprehensive trip plan that includes in this order:1. The best flight option considering price and timing.2. Top 3 hotel recommendations based on the data.3. show now the budget that was left after the flight and hotel4. A day-by-day itinerary that: (in the first day take into account the arrival time of the flight in the planning)- Allocates activities and attractions based on their proximity (using the data).- Suggests dining options near each activity or attraction.- Utilizes the budget effectively, considering the cost of flights and accommodation.- Incorporates free time for shopping and exploration.- Include addresses and websites of attractions4. Ensure all recommendations are presented in a way that will be visually appealing on a webpage, using HTML formatting where appropriate (e.g., <b> for bold).Summarize the trip plan, ensuring it is well-organized and includes all relevant details.'}], 'model': 'gpt-4-0125-preview', 'temperature': 0.4}}
2024-03-14 20:36:47,199 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-14 20:36:47,199 - DEBUG - send_request_headers.complete
2024-03-14 20:36:47,199 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-14 20:36:47,199 - DEBUG - send_request_body.complete
2024-03-14 20:36:47,199 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-14 20:37:53,362 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:37:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-4-0125-preview'), (b'openai-organization', b'reichman-university-wxioss'), (b'openai-processing-ms', b'65506'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'800000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'790735'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'694ms'), (b'x-request-id', b'req_ef5346f5958d753ed645a418736a84c8'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'86465f096a5a09c1-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-14 20:37:53,362 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-03-14 20:37:53,362 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-14 20:37:53,362 - DEBUG - receive_response_body.complete
2024-03-14 20:37:53,362 - DEBUG - response_closed.started
2024-03-14 20:37:53,362 - DEBUG - response_closed.complete
2024-03-14 20:37:53,362 - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-03-14 20:37:53,362 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': "I'm planning a trip to Tokyo. Can you help me to create a photo for the trip?", 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}}
2024-03-14 20:37:53,362 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-14 20:37:53,362 - DEBUG - send_request_headers.complete
2024-03-14 20:37:53,362 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-14 20:37:53,362 - DEBUG - send_request_body.complete
2024-03-14 20:37:53,362 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-14 20:38:06,470 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 14 Mar 2024 18:38:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'reichman-university-wxioss'), (b'x-request-id', b'req_c21b717c743feb2687ad73aa48cdd84b'), (b'openai-processing-ms', b'12885'), (b'access-control-allow-origin', b'*'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'864660a6ebed09c1-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-14 20:38:06,470 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2024-03-14 20:38:06,470 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-14 20:38:06,470 - DEBUG - receive_response_body.complete
2024-03-14 20:38:06,470 - DEBUG - response_closed.started
2024-03-14 20:38:06,470 - DEBUG - response_closed.complete
2024-03-14 20:38:06,470 - DEBUG - HTTP Request: POST https://api.openai.com/v1/images/generations "200 OK"
2024-03-14 20:40:48,618 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:40:48,620 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-14 20:41:33,802 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-14 20:41:33,805 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-16 15:46:14,602 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-16 15:46:14,788 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-16 15:46:56,475 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-16 15:46:56,477 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-16 15:55:50,281 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-16 15:55:50,409 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-16 15:59:08,524 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-16 15:59:08,525 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-16 15:59:23,813 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-16 15:59:23,815 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-16 15:59:45,281 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-16 15:59:45,283 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-16 17:35:57,626 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-16 17:35:57,686 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-16 17:38:43,752 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-16 17:38:43,754 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-16 17:40:37,930 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-16 17:40:37,932 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-16 17:47:03,365 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-16 17:47:03,366 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-16 18:22:36,761 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-16 18:22:36,959 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 12:58:09,684 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 12:58:09,783 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:36:59,574 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:36:59,586 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:37:32,733 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:37:32,735 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:44:58,572 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:44:58,572 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:44:58,620 - DEBUG - connect_tcp.started host='serpapi.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:44:58,667 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1173520>
2024-03-17 15:44:58,667 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E112F4C0> server_hostname='serpapi.com' timeout=5.0
2024-03-17 15:44:58,910 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11240D0>
2024-03-17 15:44:58,910 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:44:58,910 - DEBUG - send_request_headers.complete
2024-03-17 15:44:58,910 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:44:58,910 - DEBUG - send_request_body.complete
2024-03-17 15:44:58,910 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:00,696 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:00 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'865d6bba18df09c9-HFA'), (b'CF-Cache-Status', b'MISS'), (b'Cache-Control', b'max-age=3600, public'), (b'ETag', b'W/"726662f0b051c9696c839ff493e91ee9"'), (b'Vary', b'Accept-Encoding'), (b'referrer-policy', b'strict-origin-when-cross-origin'), (b'serpapi-search-id', b'65f6f3dbaf6304338c3a47ea'), (b'x-content-type-options', b'nosniff'), (b'x-download-options', b'noopen'), (b'x-frame-options', b'SAMEORIGIN'), (b'x-permitted-cross-domain-policies', b'none'), (b'x-request-id', b'ff757542-02ee-4a75-b3d8-e5195c7cb61d'), (b'x-robots-tag', b'noindex, nofollow'), (b'x-runtime', b'1.469459'), (b'x-xss-protection', b'1; mode=block'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 15:45:00,696 - INFO - HTTP Request: GET https://serpapi.com/search?engine=google_flights&departure_id=TLV&arrival_id=CDG&outbound_date=2024-03-19&return_date=2024-03-24&currency=USD&hl=en&api_key=669f434e4ba2136c8626035972520de9b20e743726e97f32db7f33e748d2e561 "HTTP/1.1 200 OK"
2024-03-17 15:45:00,719 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:00,730 - DEBUG - receive_response_body.complete
2024-03-17 15:45:00,731 - DEBUG - response_closed.started
2024-03-17 15:45:00,731 - DEBUG - response_closed.complete
2024-03-17 15:45:00,731 - DEBUG - close.started
2024-03-17 15:45:00,732 - DEBUG - close.complete
2024-03-17 15:45:00,732 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:00,732 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:00,740 - DEBUG - connect_tcp.started host='serpapi.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:00,756 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11CA130>
2024-03-17 15:45:00,756 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E114F640> server_hostname='serpapi.com' timeout=5.0
2024-03-17 15:45:00,789 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11AFFD0>
2024-03-17 15:45:00,790 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:00,790 - DEBUG - send_request_headers.complete
2024-03-17 15:45:00,790 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:00,790 - DEBUG - send_request_body.complete
2024-03-17 15:45:00,790 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:04,720 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:05 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'865d6bc5dfdc09c1-HFA'), (b'CF-Cache-Status', b'MISS'), (b'Cache-Control', b'max-age=3600, public'), (b'ETag', b'W/"ab0d61ef25cdfb426360b9a47ba65b4a"'), (b'Vary', b'Accept-Encoding'), (b'referrer-policy', b'strict-origin-when-cross-origin'), (b'serpapi-search-id', b'65f6f3dd8cd87855b69b8935'), (b'x-content-type-options', b'nosniff'), (b'x-download-options', b'noopen'), (b'x-frame-options', b'SAMEORIGIN'), (b'x-permitted-cross-domain-policies', b'none'), (b'x-request-id', b'440b33c9-c579-4dfc-ad2f-ae1512fe80e8'), (b'x-robots-tag', b'noindex, nofollow'), (b'x-runtime', b'3.358334'), (b'x-xss-protection', b'1; mode=block'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 15:45:04,720 - INFO - HTTP Request: GET https://serpapi.com/search?engine=google_hotels&q=central%20hotels%20in%20Paris&check_in_date=2024-03-19&check_out_date=2024-03-24&currency=USD&api_key=669f434e4ba2136c8626035972520de9b20e743726e97f32db7f33e748d2e561 "HTTP/1.1 200 OK"
2024-03-17 15:45:04,720 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:04,846 - DEBUG - receive_response_body.complete
2024-03-17 15:45:04,846 - DEBUG - response_closed.started
2024-03-17 15:45:04,846 - DEBUG - response_closed.complete
2024-03-17 15:45:04,848 - DEBUG - close.started
2024-03-17 15:45:04,849 - DEBUG - close.complete
2024-03-17 15:45:04,852 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': "This is the hotels list I have gathered so far. Write me a list of the top hotels and the info on each hotel you got.\nName: Studio Marais Belle Epoque, Link: https://www.bluepillow.com/search?p_id=589df1ad7c00cb10c8da1742&dest=eps&cat=Apartment&accomodationids=62472253f5292ec5cb25d8e4, Check-in Time: 2:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $155, Total Rate (Lowest): $776, Nearby Places: Gare de l'Est, Paris Charles de Gaulle Airport, Café de la Poste\nName: Hôtel Europe Saint-Séverin, Link: http://www.hoteleurope.net/, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $247, Total Rate (Lowest): $1,237, Nearby Places: Shakespeare and Company, Saint-Michel Notre-Dame, Paris Charles de Gaulle Airport, La Cochonnaille - Restaurant Français Paris 05\nName: Hôtel Louvre Saint-Honoré, Link: https://www.hotel-louvre-saint-honore.com/, Check-in Time: 2:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $306, Total Rate (Lowest): $1,531, Nearby Places: Louvre Museum, Saint-Michel Notre-Dame, Paris Charles de Gaulle Airport\nName: Hôtel La Comtesse Tour Eiffel, Link: http://www.comtesse-hotel.com/, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $378, Total Rate (Lowest): $1,890, Nearby Places: Hôtel des Invalides, Paris Charles de Gaulle Airport\nName: Luxury typical Parisian apartment, Link: https://www.bluepillow.com/search?p_id=589ded997c00cb10c8d9d9a5&dest=bkng&cat=House&accomodationids=654cb37f3011da1e8b799f83, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $135, Total Rate (Lowest): $674, Nearby Places: La Plaine – Stade de France, Paris Charles de Gaulle Airport, Mcla pizza St Ouen\nName: Novotel Paris Centre Tour Eiffel, Link: https://all.accor.com/lien_externe.svlt?goto=fiche_hotel&code_hotel=3546&merchantid=seo-maps-FR-3546&sourceid=aw-cen&utm_medium=seo+maps&utm_source=google+Maps&utm_campaign=seo+maps&y_source=1_MTUzNTk4NDItNzE1LWxvY2F0aW9uLndlYnNpdGU=, Check-in Time: 2:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $266, Total Rate (Lowest): $1,329, Nearby Places: Hôtel des Invalides, Paris Charles de Gaulle Airport, N'CAFE\nName: Hôtel Central Saint Germain, Link: https://www.hotelcentralsaintgermain.fr/, Check-in Time: 2:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $228, Total Rate (Lowest): $1,142, Nearby Places: Jardin du Luxembourg, Cluny La Sorbonne, Paris Charles de Gaulle Airport, Restaurant Shanghai Fouxing\nName: Hôtel Maison Mère, Link: https://www.maisonmere.co/, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $308, Total Rate (Lowest): $1,541, Nearby Places: Palais Garnier, Cadet, Paris Charles de Gaulle Airport, Les Anges Gourmands\nName: Britannique Hotel - Paris Centre, Link: https://hotel-britannique.fr/, Check-in Time: 2:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $283, Total Rate (Lowest): $1,413, Nearby Places: Sainte-Chapelle, Saint-Michel Notre-Dame, Paris Charles de Gaulle Airport, Au Terminus du Châtelet\nName: Veryste Hotel - Paris, Link: https://www.hotelveryste.com/, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $218, Total Rate (Lowest): $1,092, Nearby Places: Cadet, Paris Charles de Gaulle Airport, Le Mastroquet\nName: Courtyard by Marriott Paris Gare de Lyon, Link: https://www.marriott.com/en-us/hotels/pargl-courtyard-paris-gare-de-lyon/overview/?scid=f2ae0541-1279-4f24-b197-a979c79310b0, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $298, Total Rate (Lowest): $1,492, Nearby Places: Gare de Lyon, Paris Charles de Gaulle Airport, Mangiamo italiano\nName: One bedroom appartement with wifi at Paris, Link: https://travel.homerez.com/en/book/38720293/property, Check-in Time: 2:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $120, Total Rate (Lowest): $599, Nearby Places: Paris Charles de Gaulle Airport, Basalte Restaurant-Bar\nName: Warwick Paris, Link: https://www.warwickhotels.com/warwick-paris/?utm_source=google&utm_medium=local&utm_campaign=seo, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $283, Total Rate (Lowest): $1,414, Nearby Places: Arc de Triomphe, George V, Paris Charles de Gaulle Airport, Cacao Restaurant Paris\nName: Hôtel Mayfair Paris, Link: http://www.paris-hotel-mayfair.com/, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $315, Total Rate (Lowest): $1,573, Nearby Places: Tuileries Garden, Paris Charles de Gaulle Airport\nName: The People Paris Marais, Link: https://www.thepeoplehostel.com/fr/destinations/paris-marais/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $142, Total Rate (Lowest): $709, Nearby Places: The Centre Pompidou, Austerlitz, Paris Charles de Gaulle Airport, TiTi Palacio\nName: The Residence - Luxury 3 Bedroom Paris Center, Link: https://www.hotelfrcheck.com/luxury-3-bedrooms-grands-boulevards/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $168, Total Rate (Lowest): $841, Nearby Places: Palais Garnier, Bonne Nouvelle, Paris Charles de Gaulle Airport, Restaurant Edgar\nName: Demeure Montaigne, Link: http://www.lademeuremontaigne.com/, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $432, Total Rate (Lowest): $2,161, Nearby Places: Arc de Triomphe, Paris Charles de Gaulle Airport, Restaurant l'Envolée\nName: Hôtel Square Louvois, Link: http://www.hotel-louvois-paris.com/, Check-in Time: 2:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $353, Total Rate (Lowest): $1,764, Nearby Places: Domaine National du Palais-Royal, Richelieu - Drouot, Paris Charles de Gaulle Airport, HANGARI 항아리\nName: Citadines Saint-Germain-des-Prés Paris (Apart hotel Paris), Link: https://www.discoverasr.com/citadines/france/citadines-saint-germain-des-pres-paris?utm_source=google&utm_medium=gmb&utm_campaign=CitadinesSaintGermainDesPresParis&y_source=1_NTg1OTcwNzUtNzE1LWxvY2F0aW9uLndlYnNpdGU%3D, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $300, Total Rate (Lowest): $1,501, Nearby Places: Sainte-Chapelle, Saint-Michel Notre-Dame, Paris Charles de Gaulle Airport, ChiHai Restaurant\nName: Renaissance Paris Republique Hotel, Link: https://www.marriott.com/en-us/hotels/parpr-renaissance-paris-republique-hotel/overview/?scid=f2ae0541-1279-4f24-b197-a979c79310b0, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $406, Total Rate (Lowest): $2,031, Nearby Places: The Centre Pompidou, Paris Charles de Gaulle Airport\n"}], 'model': 'gpt-3.5-turbo'}}
2024-03-17 15:45:04,884 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:04,978 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000207E11CC730>
2024-03-17 15:45:04,978 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1080BC0> server_hostname='api.openai.com' timeout=5.0
2024-03-17 15:45:05,005 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000207E11CC700>
2024-03-17 15:45:05,005 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-17 15:45:05,006 - DEBUG - send_request_headers.complete
2024-03-17 15:45:05,006 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-17 15:45:05,006 - DEBUG - send_request_body.complete
2024-03-17 15:45:05,006 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-17 15:45:10,731 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0125'), (b'openai-organization', b'reichman-university-wxioss'), (b'openai-processing-ms', b'5307'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'998310'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'101ms'), (b'x-request-id', b'req_49527291ff67876f265a4187d4e83b35'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=v8__QSZCvuYiniTMA7VhwdIpi7OP38I4ZIMnvLr4fzM-1710683111-1.0.1.1-DwAa1gVxJ0LzxxvoNhCIZdva27LouoNJj4fv5qwpuijTOLErihQVt7.PoYsadG2iCx2zhrUu0rrryrmhw0OGFg; path=/; expires=Sun, 17-Mar-24 14:15:11 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=RN5_mw5Flws2VtZ_gR6KCUHTKnPDcwq6azGgENOxyek-1710683111023-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'865d6be03e0a09cb-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 15:45:10,732 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-03-17 15:45:10,732 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-17 15:45:10,732 - DEBUG - receive_response_body.complete
2024-03-17 15:45:10,732 - DEBUG - response_closed.started
2024-03-17 15:45:10,733 - DEBUG - response_closed.complete
2024-03-17 15:45:10,733 - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-03-17 15:45:10,734 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:10,735 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:10,743 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:11,031 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1254BE0>
2024-03-17 15:45:11,031 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E114F6C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:11,188 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11CA250>
2024-03-17 15:45:11,189 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:11,189 - DEBUG - send_request_headers.complete
2024-03-17 15:45:11,189 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:11,189 - DEBUG - send_request_body.complete
2024-03-17 15:45:11,189 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:11,764 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:11 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3105'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'79d84686-118b-4dfc-a796-df11e29f2d63'), (b'x-amz-apigw-id', b'UxsMOFs2IAMEcxw='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3e7-28f81be0764a6b85570e423e')])
2024-03-17 15:45:11,764 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/search?key=7D8FF18728F342E29B426D6D5946FA6C&searchQuery=Paris&category=attractions&language=en "HTTP/1.1 200 OK"
2024-03-17 15:45:11,764 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:11,764 - DEBUG - receive_response_body.complete
2024-03-17 15:45:11,764 - DEBUG - response_closed.started
2024-03-17 15:45:11,765 - DEBUG - response_closed.complete
2024-03-17 15:45:11,765 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:11,765 - DEBUG - send_request_headers.complete
2024-03-17 15:45:11,765 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:11,766 - DEBUG - send_request_body.complete
2024-03-17 15:45:11,766 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:12,228 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3176'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'4a10cdd5-7699-4e70-8fef-2f46c2e0a571'), (b'x-amz-apigw-id', b'UxsMUHj1IAMED-Q='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3e8-0c10c1c43ddaf2b413556acc')])
2024-03-17 15:45:12,228 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/search?key=7D8FF18728F342E29B426D6D5946FA6C&searchQuery=Paris&category=restaurants&language=en "HTTP/1.1 200 OK"
2024-03-17 15:45:12,228 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:12,228 - DEBUG - receive_response_body.complete
2024-03-17 15:45:12,228 - DEBUG - response_closed.started
2024-03-17 15:45:12,228 - DEBUG - response_closed.complete
2024-03-17 15:45:12,229 - DEBUG - close.started
2024-03-17 15:45:12,229 - DEBUG - close.complete
2024-03-17 15:45:12,229 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:12,230 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:12,238 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:12,385 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1258CD0>
2024-03-17 15:45:12,385 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E112F4C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:12,534 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1258490>
2024-03-17 15:45:12,534 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:12,535 - DEBUG - send_request_headers.complete
2024-03-17 15:45:12,535 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:12,535 - DEBUG - send_request_body.complete
2024-03-17 15:45:12,535 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:13,444 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:13 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5541'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'b88e7eaa-4b3e-4cef-bfb0-f02747cf1dc4'), (b'x-amz-apigw-id', b'UxsMcHXToAMEeWA='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3e8-033e99b21ea437f11e50be5d')])
2024-03-17 15:45:13,444 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/189258/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:13,445 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:13,445 - DEBUG - receive_response_body.complete
2024-03-17 15:45:13,445 - DEBUG - response_closed.started
2024-03-17 15:45:13,445 - DEBUG - response_closed.complete
2024-03-17 15:45:13,445 - DEBUG - close.started
2024-03-17 15:45:13,446 - DEBUG - close.complete
2024-03-17 15:45:13,446 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:13,446 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:13,454 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:13,603 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E12548E0>
2024-03-17 15:45:13,603 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121B4C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:13,759 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E12549D0>
2024-03-17 15:45:13,760 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:13,760 - DEBUG - send_request_headers.complete
2024-03-17 15:45:13,760 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:13,760 - DEBUG - send_request_body.complete
2024-03-17 15:45:13,760 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:14,092 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'4605'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'd112b431-4c19-4b86-a11c-0b7cb7154df0'), (b'x-amz-apigw-id', b'UxsMoEzooAMEVAg='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3ea-103c42ec7201d46502a9814d')])
2024-03-17 15:45:14,092 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/189229/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:14,092 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:14,092 - DEBUG - receive_response_body.complete
2024-03-17 15:45:14,092 - DEBUG - response_closed.started
2024-03-17 15:45:14,092 - DEBUG - response_closed.complete
2024-03-17 15:45:14,093 - DEBUG - close.started
2024-03-17 15:45:14,093 - DEBUG - close.complete
2024-03-17 15:45:14,093 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:14,094 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:14,102 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:14,253 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E125B220>
2024-03-17 15:45:14,253 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121B540> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:14,404 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E125BB80>
2024-03-17 15:45:14,405 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:14,405 - DEBUG - send_request_headers.complete
2024-03-17 15:45:14,405 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:14,405 - DEBUG - send_request_body.complete
2024-03-17 15:45:14,405 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:14,731 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2820'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'256aeaee-dbd8-4396-a2ba-2095392acea1'), (b'x-amz-apigw-id', b'UxsMuFK8oAMEA7g='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3ea-455b35980eb81ee03ee57617')])
2024-03-17 15:45:14,731 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/2323543/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:14,731 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:14,731 - DEBUG - receive_response_body.complete
2024-03-17 15:45:14,731 - DEBUG - response_closed.started
2024-03-17 15:45:14,731 - DEBUG - response_closed.complete
2024-03-17 15:45:14,732 - DEBUG - close.started
2024-03-17 15:45:14,732 - DEBUG - close.complete
2024-03-17 15:45:14,732 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:14,733 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:14,740 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:14,895 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E2234160>
2024-03-17 15:45:14,895 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121B5C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:15,052 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E2232EE0>
2024-03-17 15:45:15,052 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:15,052 - DEBUG - send_request_headers.complete
2024-03-17 15:45:15,052 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:15,052 - DEBUG - send_request_body.complete
2024-03-17 15:45:15,052 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:15,330 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6962'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'586ce4e1-8412-4d5b-98f1-94b963fec507'), (b'x-amz-apigw-id', b'UxsM1GCZoAMEOrg='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3eb-4cdce4fe7f206ae9327bd519')])
2024-03-17 15:45:15,330 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/2613395/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:15,330 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:15,331 - DEBUG - receive_response_body.complete
2024-03-17 15:45:15,331 - DEBUG - response_closed.started
2024-03-17 15:45:15,331 - DEBUG - response_closed.complete
2024-03-17 15:45:15,331 - DEBUG - close.started
2024-03-17 15:45:15,332 - DEBUG - close.complete
2024-03-17 15:45:15,332 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:15,332 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:15,340 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:15,494 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E2239700>
2024-03-17 15:45:15,494 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121B8C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:15,651 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E22396A0>
2024-03-17 15:45:15,653 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:15,653 - DEBUG - send_request_headers.complete
2024-03-17 15:45:15,653 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:15,653 - DEBUG - send_request_body.complete
2024-03-17 15:45:15,653 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:16,015 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3946'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'2a7741f8-be9a-40eb-a9b8-a03b1dd8180d'), (b'x-amz-apigw-id', b'UxsM7GHvIAMEGmA='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3ec-5f740ff879ac58884dc8b73a')])
2024-03-17 15:45:16,016 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/12103860/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:16,016 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:16,016 - DEBUG - receive_response_body.complete
2024-03-17 15:45:16,016 - DEBUG - response_closed.started
2024-03-17 15:45:16,016 - DEBUG - response_closed.complete
2024-03-17 15:45:16,017 - DEBUG - close.started
2024-03-17 15:45:16,017 - DEBUG - close.complete
2024-03-17 15:45:16,017 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:16,017 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:16,025 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:16,181 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E2239DC0>
2024-03-17 15:45:16,181 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121B640> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:16,334 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E2239A90>
2024-03-17 15:45:16,334 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:16,335 - DEBUG - send_request_headers.complete
2024-03-17 15:45:16,335 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:16,335 - DEBUG - send_request_body.complete
2024-03-17 15:45:16,335 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:16,671 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5271'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'b9fc67d9-5e20-45a6-8af4-218682b2b10e'), (b'x-amz-apigw-id', b'UxsNCFqOoAMEY4A='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3ec-50bf9b8062029c7b26446abe')])
2024-03-17 15:45:16,671 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/189193/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:16,671 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:16,671 - DEBUG - receive_response_body.complete
2024-03-17 15:45:16,671 - DEBUG - response_closed.started
2024-03-17 15:45:16,672 - DEBUG - response_closed.complete
2024-03-17 15:45:16,672 - DEBUG - close.started
2024-03-17 15:45:16,672 - DEBUG - close.complete
2024-03-17 15:45:16,672 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:16,673 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:16,680 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:16,836 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11CCB50>
2024-03-17 15:45:16,836 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E112F4C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:16,992 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E2234790>
2024-03-17 15:45:16,993 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:16,993 - DEBUG - send_request_headers.complete
2024-03-17 15:45:16,993 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:16,993 - DEBUG - send_request_body.complete
2024-03-17 15:45:16,993 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:17,292 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5189'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'482b8c74-9828-42ef-9c79-eb73883a6407'), (b'x-amz-apigw-id', b'UxsNIG-xIAMEWsQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3ed-6e355fe50626d9011af3f2f4')])
2024-03-17 15:45:17,292 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1008070/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:17,292 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:17,292 - DEBUG - receive_response_body.complete
2024-03-17 15:45:17,292 - DEBUG - response_closed.started
2024-03-17 15:45:17,293 - DEBUG - response_closed.complete
2024-03-17 15:45:17,293 - DEBUG - close.started
2024-03-17 15:45:17,293 - DEBUG - close.complete
2024-03-17 15:45:17,293 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:17,294 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:17,301 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:17,448 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E125B3A0>
2024-03-17 15:45:17,448 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121B940> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:17,598 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E125B190>
2024-03-17 15:45:17,599 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:17,599 - DEBUG - send_request_headers.complete
2024-03-17 15:45:17,599 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:17,599 - DEBUG - send_request_body.complete
2024-03-17 15:45:17,599 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:18,507 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:18 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'4415'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'c9d967bd-c5d9-46ba-94c2-90ce70740a7a'), (b'x-amz-apigw-id', b'UxsNOFysIAMEa4w='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3ed-006e4c457be66eea4c30cf2d')])
2024-03-17 15:45:18,507 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/188679/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:18,508 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:18,508 - DEBUG - receive_response_body.complete
2024-03-17 15:45:18,508 - DEBUG - response_closed.started
2024-03-17 15:45:18,508 - DEBUG - response_closed.complete
2024-03-17 15:45:18,508 - DEBUG - close.started
2024-03-17 15:45:18,509 - DEBUG - close.complete
2024-03-17 15:45:18,509 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:18,509 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:18,517 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:18,673 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1258DF0>
2024-03-17 15:45:18,673 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121BAC0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:18,827 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1258490>
2024-03-17 15:45:18,827 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:18,827 - DEBUG - send_request_headers.complete
2024-03-17 15:45:18,827 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:18,827 - DEBUG - send_request_body.complete
2024-03-17 15:45:18,827 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:19,092 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:19 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5301'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'0f6f7f23-4c61-4288-85b6-fdcb22d6f69f'), (b'x-amz-apigw-id', b'UxsNbF5qoAMEQQA='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3ef-1adda5e518f2e3a237b80122')])
2024-03-17 15:45:19,094 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/585912/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:19,094 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:19,094 - DEBUG - receive_response_body.complete
2024-03-17 15:45:19,094 - DEBUG - response_closed.started
2024-03-17 15:45:19,094 - DEBUG - response_closed.complete
2024-03-17 15:45:19,094 - DEBUG - close.started
2024-03-17 15:45:19,095 - DEBUG - close.complete
2024-03-17 15:45:19,095 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:19,095 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:19,103 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:19,255 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E125ECA0>
2024-03-17 15:45:19,256 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121B6C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:19,411 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E125EC40>
2024-03-17 15:45:19,412 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:19,412 - DEBUG - send_request_headers.complete
2024-03-17 15:45:19,412 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:19,412 - DEBUG - send_request_body.complete
2024-03-17 15:45:19,412 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:19,822 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'4224'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'a560f7db-8093-4a57-8ccd-d9e2150b3d81'), (b'x-amz-apigw-id', b'UxsNgF5doAMECqQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3ef-0f68bca201eb2e206d3d896f')])
2024-03-17 15:45:19,822 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/292257/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:19,822 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:19,822 - DEBUG - receive_response_body.complete
2024-03-17 15:45:19,822 - DEBUG - response_closed.started
2024-03-17 15:45:19,822 - DEBUG - response_closed.complete
2024-03-17 15:45:19,823 - DEBUG - close.started
2024-03-17 15:45:19,823 - DEBUG - close.complete
2024-03-17 15:45:19,823 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:19,823 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:19,831 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:19,987 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E223F100>
2024-03-17 15:45:19,988 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121BDC0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:20,140 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E223F970>
2024-03-17 15:45:20,140 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:20,140 - DEBUG - send_request_headers.complete
2024-03-17 15:45:20,140 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:20,140 - DEBUG - send_request_body.complete
2024-03-17 15:45:20,140 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:20,399 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6416'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'18744906-7089-439a-ae4b-869b6fa27b34'), (b'x-amz-apigw-id', b'UxsNoELgIAMEi_A='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3f0-4dc329f76bc6ba694b144eb0')])
2024-03-17 15:45:20,399 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/7621672/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:20,400 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:20,400 - DEBUG - receive_response_body.complete
2024-03-17 15:45:20,400 - DEBUG - response_closed.started
2024-03-17 15:45:20,400 - DEBUG - response_closed.complete
2024-03-17 15:45:20,400 - DEBUG - close.started
2024-03-17 15:45:20,400 - DEBUG - close.complete
2024-03-17 15:45:20,401 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:20,401 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:20,408 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:20,551 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E125E3A0>
2024-03-17 15:45:20,552 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121BB40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:20,696 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E125E370>
2024-03-17 15:45:20,697 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:20,697 - DEBUG - send_request_headers.complete
2024-03-17 15:45:20,697 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:20,697 - DEBUG - send_request_body.complete
2024-03-17 15:45:20,697 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:21,118 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:21 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5477'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'1ca78ed8-fb55-4dc2-8a08-44a3510a4207'), (b'x-amz-apigw-id', b'UxsNtEVBIAMEQCg='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3f1-4ae8c741685df76d3c630680')])
2024-03-17 15:45:21,118 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/695078/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:21,118 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:21,119 - DEBUG - receive_response_body.complete
2024-03-17 15:45:21,119 - DEBUG - response_closed.started
2024-03-17 15:45:21,119 - DEBUG - response_closed.complete
2024-03-17 15:45:21,119 - DEBUG - close.started
2024-03-17 15:45:21,119 - DEBUG - close.complete
2024-03-17 15:45:21,119 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:21,120 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:21,127 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:21,282 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E123C580>
2024-03-17 15:45:21,282 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121BCC0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:21,443 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E123CF40>
2024-03-17 15:45:21,443 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:21,443 - DEBUG - send_request_headers.complete
2024-03-17 15:45:21,443 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:21,444 - DEBUG - send_request_body.complete
2024-03-17 15:45:21,444 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:21,744 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:21 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6860'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'cd0edd00-682b-4fb9-a471-016e82eee93d'), (b'x-amz-apigw-id', b'UxsN1GXioAMENfg='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3f1-41f56c1374efc22c6dec634d')])
2024-03-17 15:45:21,744 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/23801439/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:21,744 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:21,745 - DEBUG - receive_response_body.complete
2024-03-17 15:45:21,745 - DEBUG - response_closed.started
2024-03-17 15:45:21,745 - DEBUG - response_closed.complete
2024-03-17 15:45:21,745 - DEBUG - close.started
2024-03-17 15:45:21,745 - DEBUG - close.complete
2024-03-17 15:45:21,746 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:21,746 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:21,753 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:21,903 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E2234B50>
2024-03-17 15:45:21,903 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121BC40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:22,054 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E2234DF0>
2024-03-17 15:45:22,054 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:22,054 - DEBUG - send_request_headers.complete
2024-03-17 15:45:22,054 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:22,054 - DEBUG - send_request_body.complete
2024-03-17 15:45:22,054 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:22,369 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:22 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5781'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'395dd29d-2975-4585-a061-6b5c010c9110'), (b'x-amz-apigw-id', b'UxsN7GtTIAMEp7w='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3f2-6f9183f41af6e7643a9ab733')])
2024-03-17 15:45:22,369 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/796575/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:22,369 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:22,369 - DEBUG - receive_response_body.complete
2024-03-17 15:45:22,369 - DEBUG - response_closed.started
2024-03-17 15:45:22,369 - DEBUG - response_closed.complete
2024-03-17 15:45:22,369 - DEBUG - close.started
2024-03-17 15:45:22,369 - DEBUG - close.complete
2024-03-17 15:45:22,370 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:22,370 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:22,378 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:22,531 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1258970>
2024-03-17 15:45:22,532 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121B9C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:22,686 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1258760>
2024-03-17 15:45:22,686 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:22,687 - DEBUG - send_request_headers.complete
2024-03-17 15:45:22,687 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:22,687 - DEBUG - send_request_body.complete
2024-03-17 15:45:22,687 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:22,958 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:23 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'7905'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'9d9f1844-e6cf-42cf-92fc-71d0805e4877'), (b'x-amz-apigw-id', b'UxsOBHGJIAMECkw='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3f3-1f391c4737255079192b9172')])
2024-03-17 15:45:22,958 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/21389323/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:22,958 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:22,958 - DEBUG - receive_response_body.complete
2024-03-17 15:45:22,958 - DEBUG - response_closed.started
2024-03-17 15:45:22,958 - DEBUG - response_closed.complete
2024-03-17 15:45:22,959 - DEBUG - close.started
2024-03-17 15:45:22,959 - DEBUG - close.complete
2024-03-17 15:45:22,959 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:22,960 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:22,967 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:23,120 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E2239130>
2024-03-17 15:45:23,120 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121BAC0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:23,273 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E2239220>
2024-03-17 15:45:23,273 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:23,273 - DEBUG - send_request_headers.complete
2024-03-17 15:45:23,273 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:23,273 - DEBUG - send_request_body.complete
2024-03-17 15:45:23,273 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:23,551 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:23 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5484'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'a888c346-412f-43b0-82d8-bae9f95ccb51'), (b'x-amz-apigw-id', b'UxsOHH39IAMEeWA='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3f3-1be47a8b1e0e0f9610be8af8')])
2024-03-17 15:45:23,551 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/783458/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:23,552 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:23,552 - DEBUG - receive_response_body.complete
2024-03-17 15:45:23,552 - DEBUG - response_closed.started
2024-03-17 15:45:23,552 - DEBUG - response_closed.complete
2024-03-17 15:45:23,552 - DEBUG - close.started
2024-03-17 15:45:23,552 - DEBUG - close.complete
2024-03-17 15:45:23,553 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:23,553 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:23,561 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:23,709 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E2234DC0>
2024-03-17 15:45:23,710 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121B840> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:23,866 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E2234A30>
2024-03-17 15:45:23,866 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:23,866 - DEBUG - send_request_headers.complete
2024-03-17 15:45:23,866 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:23,867 - DEBUG - send_request_body.complete
2024-03-17 15:45:23,867 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:24,140 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:24 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6414'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'679bb1f8-e630-4a92-b316-f551f2c53ffb'), (b'x-amz-apigw-id', b'UxsONHJ6IAMECkw='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3f4-5bad18e64aeb95a1552de08b')])
2024-03-17 15:45:24,140 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/7205470/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:24,140 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:24,140 - DEBUG - receive_response_body.complete
2024-03-17 15:45:24,140 - DEBUG - response_closed.started
2024-03-17 15:45:24,140 - DEBUG - response_closed.complete
2024-03-17 15:45:24,141 - DEBUG - close.started
2024-03-17 15:45:24,141 - DEBUG - close.complete
2024-03-17 15:45:24,141 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:24,141 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:24,148 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:24,295 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E125B6A0>
2024-03-17 15:45:24,295 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E112F4C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:24,444 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E125BAC0>
2024-03-17 15:45:24,444 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:24,444 - DEBUG - send_request_headers.complete
2024-03-17 15:45:24,445 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:24,445 - DEBUG - send_request_body.complete
2024-03-17 15:45:24,445 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:24,711 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:24 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5243'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'dffba8da-d253-472a-bc53-f73c6f460873'), (b'x-amz-apigw-id', b'UxsOTF0VIAMEUxA='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3f4-352a6d862f923a0755ae83e0')])
2024-03-17 15:45:24,711 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/2000672/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:24,711 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:24,711 - DEBUG - receive_response_body.complete
2024-03-17 15:45:24,711 - DEBUG - response_closed.started
2024-03-17 15:45:24,711 - DEBUG - response_closed.complete
2024-03-17 15:45:24,713 - DEBUG - close.started
2024-03-17 15:45:24,713 - DEBUG - close.complete
2024-03-17 15:45:24,713 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:24,714 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:24,721 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:24,872 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E125E8E0>
2024-03-17 15:45:24,872 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121BE40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:25,027 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E125E5E0>
2024-03-17 15:45:25,027 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:25,027 - DEBUG - send_request_headers.complete
2024-03-17 15:45:25,027 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:25,027 - DEBUG - send_request_body.complete
2024-03-17 15:45:25,027 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:25,347 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:25 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'7384'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'1d27b00e-9cc2-4979-9535-ef898ad352ca'), (b'x-amz-apigw-id', b'UxsOZFProAMEonA='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3f5-1e8e9e9c017bfb4a3cd5492b')])
2024-03-17 15:45:25,347 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1390891/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:25,347 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:25,347 - DEBUG - receive_response_body.complete
2024-03-17 15:45:25,347 - DEBUG - response_closed.started
2024-03-17 15:45:25,348 - DEBUG - response_closed.complete
2024-03-17 15:45:25,348 - DEBUG - close.started
2024-03-17 15:45:25,348 - DEBUG - close.complete
2024-03-17 15:45:25,348 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 15:45:25,349 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 15:45:25,356 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:25,503 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E223B190>
2024-03-17 15:45:25,503 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E121B5C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 15:45:25,648 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E223BF70>
2024-03-17 15:45:25,648 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 15:45:25,648 - DEBUG - send_request_headers.complete
2024-03-17 15:45:25,648 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 15:45:25,648 - DEBUG - send_request_body.complete
2024-03-17 15:45:25,648 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 15:45:25,941 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:26 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'7154'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'748d804c-0202-4f72-8d6a-e84a50af0134'), (b'x-amz-apigw-id', b'UxsOfHZNIAMEpNw='), (b'X-Amzn-Trace-Id', b'Root=1-65f6f3f6-31a7b6905e2cf63b3f7132c3')])
2024-03-17 15:45:25,941 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/7254376/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 15:45:25,941 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 15:45:25,941 - DEBUG - receive_response_body.complete
2024-03-17 15:45:25,941 - DEBUG - response_closed.started
2024-03-17 15:45:25,941 - DEBUG - response_closed.complete
2024-03-17 15:45:25,942 - DEBUG - close.started
2024-03-17 15:45:25,942 - DEBUG - close.complete
2024-03-17 15:45:27,239 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=121)
           2	LOAD_DEREF(arg=2, lineno=121)
           4	LOAD_FAST(arg=0, lineno=121)
           6	CALL_FUNCTION(arg=1, lineno=121)
           8	STORE_FAST(arg=0, lineno=121)
          10	LOAD_DEREF(arg=2, lineno=122)
          12	LOAD_FAST(arg=1, lineno=122)
          14	CALL_FUNCTION(arg=1, lineno=122)
          16	STORE_FAST(arg=1, lineno=122)
          18	LOAD_DEREF(arg=2, lineno=123)
          20	LOAD_FAST(arg=2, lineno=123)
          22	CALL_FUNCTION(arg=1, lineno=123)
          24	STORE_FAST(arg=2, lineno=123)
          26	LOAD_DEREF(arg=2, lineno=124)
          28	LOAD_FAST(arg=3, lineno=124)
          30	CALL_FUNCTION(arg=1, lineno=124)
          32	STORE_FAST(arg=3, lineno=124)
          34	LOAD_FAST(arg=2, lineno=125)
          36	LOAD_FAST(arg=0, lineno=125)
          38	BINARY_SUBTRACT(arg=None, lineno=125)
          40	STORE_FAST(arg=4, lineno=125)
          42	LOAD_FAST(arg=3, lineno=126)
          44	LOAD_FAST(arg=1, lineno=126)
          46	BINARY_SUBTRACT(arg=None, lineno=126)
          48	STORE_FAST(arg=5, lineno=126)
          50	LOAD_DEREF(arg=3, lineno=127)
          52	LOAD_FAST(arg=4, lineno=127)
          54	LOAD_CONST(arg=1, lineno=127)
          56	BINARY_MULTIPLY(arg=None, lineno=127)
          58	CALL_FUNCTION(arg=1, lineno=127)
          60	LOAD_CONST(arg=2, lineno=127)
          62	BINARY_POWER(arg=None, lineno=127)
          64	LOAD_DEREF(arg=1, lineno=128)
          66	LOAD_FAST(arg=0, lineno=128)
          68	CALL_FUNCTION(arg=1, lineno=128)
          70	LOAD_DEREF(arg=1, lineno=128)
          72	LOAD_FAST(arg=2, lineno=128)
          74	CALL_FUNCTION(arg=1, lineno=128)
          76	BINARY_MULTIPLY(arg=None, lineno=128)
          78	LOAD_DEREF(arg=3, lineno=128)
          80	LOAD_FAST(arg=5, lineno=128)
          82	LOAD_CONST(arg=1, lineno=128)
          84	BINARY_MULTIPLY(arg=None, lineno=128)
          86	CALL_FUNCTION(arg=1, lineno=128)
          88	LOAD_CONST(arg=2, lineno=128)
          90	BINARY_POWER(arg=None, lineno=128)
          92	BINARY_MULTIPLY(arg=None, lineno=128)
          94	BINARY_ADD(arg=None, lineno=127)
          96	STORE_FAST(arg=6, lineno=127)
          98	LOAD_CONST(arg=2, lineno=131)
         100	LOAD_DEREF(arg=0, lineno=131)
         102	LOAD_DEREF(arg=4, lineno=131)
         104	LOAD_FAST(arg=6, lineno=131)
         106	CALL_FUNCTION(arg=1, lineno=131)
         108	CALL_FUNCTION(arg=1, lineno=131)
         110	BINARY_MULTIPLY(arg=None, lineno=131)
         112	RETURN_VALUE(arg=None, lineno=131)
2024-03-17 15:45:27,240 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-03-17 15:45:27,240 - DEBUG - stack: []
2024-03-17 15:45:27,240 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=121)
2024-03-17 15:45:27,240 - DEBUG - stack []
2024-03-17 15:45:27,240 - DEBUG - dispatch pc=2, inst=LOAD_DEREF(arg=2, lineno=121)
2024-03-17 15:45:27,240 - DEBUG - stack []
2024-03-17 15:45:27,240 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=121)
2024-03-17 15:45:27,240 - DEBUG - stack ['$2load_deref.0']
2024-03-17 15:45:27,240 - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=121)
2024-03-17 15:45:27,240 - DEBUG - stack ['$2load_deref.0', '$lat14.1']
2024-03-17 15:45:27,240 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=0, lineno=121)
2024-03-17 15:45:27,241 - DEBUG - stack ['$6call_function.2']
2024-03-17 15:45:27,241 - DEBUG - dispatch pc=10, inst=LOAD_DEREF(arg=2, lineno=122)
2024-03-17 15:45:27,241 - DEBUG - stack []
2024-03-17 15:45:27,241 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=122)
2024-03-17 15:45:27,241 - DEBUG - stack ['$10load_deref.3']
2024-03-17 15:45:27,241 - DEBUG - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=122)
2024-03-17 15:45:27,241 - DEBUG - stack ['$10load_deref.3', '$lng112.4']
2024-03-17 15:45:27,241 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=122)
2024-03-17 15:45:27,241 - DEBUG - stack ['$14call_function.5']
2024-03-17 15:45:27,241 - DEBUG - dispatch pc=18, inst=LOAD_DEREF(arg=2, lineno=123)
2024-03-17 15:45:27,241 - DEBUG - stack []
2024-03-17 15:45:27,241 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=123)
2024-03-17 15:45:27,241 - DEBUG - stack ['$18load_deref.6']
2024-03-17 15:45:27,241 - DEBUG - dispatch pc=22, inst=CALL_FUNCTION(arg=1, lineno=123)
2024-03-17 15:45:27,242 - DEBUG - stack ['$18load_deref.6', '$lat220.7']
2024-03-17 15:45:27,242 - DEBUG - dispatch pc=24, inst=STORE_FAST(arg=2, lineno=123)
2024-03-17 15:45:27,242 - DEBUG - stack ['$22call_function.8']
2024-03-17 15:45:27,242 - DEBUG - dispatch pc=26, inst=LOAD_DEREF(arg=2, lineno=124)
2024-03-17 15:45:27,242 - DEBUG - stack []
2024-03-17 15:45:27,242 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=3, lineno=124)
2024-03-17 15:45:27,242 - DEBUG - stack ['$26load_deref.9']
2024-03-17 15:45:27,242 - DEBUG - dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=124)
2024-03-17 15:45:27,242 - DEBUG - stack ['$26load_deref.9', '$lng228.10']
2024-03-17 15:45:27,242 - DEBUG - dispatch pc=32, inst=STORE_FAST(arg=3, lineno=124)
2024-03-17 15:45:27,242 - DEBUG - stack ['$30call_function.11']
2024-03-17 15:45:27,242 - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=2, lineno=125)
2024-03-17 15:45:27,242 - DEBUG - stack []
2024-03-17 15:45:27,242 - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=125)
2024-03-17 15:45:27,242 - DEBUG - stack ['$lat234.12']
2024-03-17 15:45:27,243 - DEBUG - dispatch pc=38, inst=BINARY_SUBTRACT(arg=None, lineno=125)
2024-03-17 15:45:27,243 - DEBUG - stack ['$lat234.12', '$lat136.13']
2024-03-17 15:45:27,243 - DEBUG - dispatch pc=40, inst=STORE_FAST(arg=4, lineno=125)
2024-03-17 15:45:27,243 - DEBUG - stack ['$38binary_subtract.14']
2024-03-17 15:45:27,243 - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=126)
2024-03-17 15:45:27,243 - DEBUG - stack []
2024-03-17 15:45:27,243 - DEBUG - dispatch pc=44, inst=LOAD_FAST(arg=1, lineno=126)
2024-03-17 15:45:27,243 - DEBUG - stack ['$lng242.15']
2024-03-17 15:45:27,243 - DEBUG - dispatch pc=46, inst=BINARY_SUBTRACT(arg=None, lineno=126)
2024-03-17 15:45:27,243 - DEBUG - stack ['$lng242.15', '$lng144.16']
2024-03-17 15:45:27,243 - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=5, lineno=126)
2024-03-17 15:45:27,243 - DEBUG - stack ['$46binary_subtract.17']
2024-03-17 15:45:27,243 - DEBUG - dispatch pc=50, inst=LOAD_DEREF(arg=3, lineno=127)
2024-03-17 15:45:27,243 - DEBUG - stack []
2024-03-17 15:45:27,244 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=127)
2024-03-17 15:45:27,244 - DEBUG - stack ['$50load_deref.18']
2024-03-17 15:45:27,244 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=127)
2024-03-17 15:45:27,244 - DEBUG - stack ['$50load_deref.18', '$lat52.19']
2024-03-17 15:45:27,244 - DEBUG - dispatch pc=56, inst=BINARY_MULTIPLY(arg=None, lineno=127)
2024-03-17 15:45:27,244 - DEBUG - stack ['$50load_deref.18', '$lat52.19', '$const54.20']
2024-03-17 15:45:27,244 - DEBUG - dispatch pc=58, inst=CALL_FUNCTION(arg=1, lineno=127)
2024-03-17 15:45:27,244 - DEBUG - stack ['$50load_deref.18', '$56binary_multiply.21']
2024-03-17 15:45:27,244 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=127)
2024-03-17 15:45:27,244 - DEBUG - stack ['$58call_function.22']
2024-03-17 15:45:27,244 - DEBUG - dispatch pc=62, inst=BINARY_POWER(arg=None, lineno=127)
2024-03-17 15:45:27,244 - DEBUG - stack ['$58call_function.22', '$const60.23']
2024-03-17 15:45:27,244 - DEBUG - dispatch pc=64, inst=LOAD_DEREF(arg=1, lineno=128)
2024-03-17 15:45:27,244 - DEBUG - stack ['$62binary_power.24']
2024-03-17 15:45:27,244 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=128)
2024-03-17 15:45:27,244 - DEBUG - stack ['$62binary_power.24', '$64load_deref.25']
2024-03-17 15:45:27,244 - DEBUG - dispatch pc=68, inst=CALL_FUNCTION(arg=1, lineno=128)
2024-03-17 15:45:27,244 - DEBUG - stack ['$62binary_power.24', '$64load_deref.25', '$lat166.26']
2024-03-17 15:45:27,244 - DEBUG - dispatch pc=70, inst=LOAD_DEREF(arg=1, lineno=128)
2024-03-17 15:45:27,244 - DEBUG - stack ['$62binary_power.24', '$68call_function.27']
2024-03-17 15:45:27,245 - DEBUG - dispatch pc=72, inst=LOAD_FAST(arg=2, lineno=128)
2024-03-17 15:45:27,245 - DEBUG - stack ['$62binary_power.24', '$68call_function.27', '$70load_deref.28']
2024-03-17 15:45:27,245 - DEBUG - dispatch pc=74, inst=CALL_FUNCTION(arg=1, lineno=128)
2024-03-17 15:45:27,245 - DEBUG - stack ['$62binary_power.24', '$68call_function.27', '$70load_deref.28', '$lat272.29']
2024-03-17 15:45:27,245 - DEBUG - dispatch pc=76, inst=BINARY_MULTIPLY(arg=None, lineno=128)
2024-03-17 15:45:27,245 - DEBUG - stack ['$62binary_power.24', '$68call_function.27', '$74call_function.30']
2024-03-17 15:45:27,245 - DEBUG - dispatch pc=78, inst=LOAD_DEREF(arg=3, lineno=128)
2024-03-17 15:45:27,245 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31']
2024-03-17 15:45:27,245 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=5, lineno=128)
2024-03-17 15:45:27,245 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$78load_deref.32']
2024-03-17 15:45:27,245 - DEBUG - dispatch pc=82, inst=LOAD_CONST(arg=1, lineno=128)
2024-03-17 15:45:27,245 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$78load_deref.32', '$lng80.33']
2024-03-17 15:45:27,245 - DEBUG - dispatch pc=84, inst=BINARY_MULTIPLY(arg=None, lineno=128)
2024-03-17 15:45:27,246 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$78load_deref.32', '$lng80.33', '$const82.34']
2024-03-17 15:45:27,246 - DEBUG - dispatch pc=86, inst=CALL_FUNCTION(arg=1, lineno=128)
2024-03-17 15:45:27,246 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$78load_deref.32', '$84binary_multiply.35']
2024-03-17 15:45:27,246 - DEBUG - dispatch pc=88, inst=LOAD_CONST(arg=2, lineno=128)
2024-03-17 15:45:27,246 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$86call_function.36']
2024-03-17 15:45:27,246 - DEBUG - dispatch pc=90, inst=BINARY_POWER(arg=None, lineno=128)
2024-03-17 15:45:27,246 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$86call_function.36', '$const88.37']
2024-03-17 15:45:27,246 - DEBUG - dispatch pc=92, inst=BINARY_MULTIPLY(arg=None, lineno=128)
2024-03-17 15:45:27,246 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$90binary_power.38']
2024-03-17 15:45:27,246 - DEBUG - dispatch pc=94, inst=BINARY_ADD(arg=None, lineno=127)
2024-03-17 15:45:27,246 - DEBUG - stack ['$62binary_power.24', '$92binary_multiply.39']
2024-03-17 15:45:27,246 - DEBUG - dispatch pc=96, inst=STORE_FAST(arg=6, lineno=127)
2024-03-17 15:45:27,246 - DEBUG - stack ['$94binary_add.40']
2024-03-17 15:45:27,246 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=2, lineno=131)
2024-03-17 15:45:27,246 - DEBUG - stack []
2024-03-17 15:45:27,246 - DEBUG - dispatch pc=100, inst=LOAD_DEREF(arg=0, lineno=131)
2024-03-17 15:45:27,247 - DEBUG - stack ['$const98.41']
2024-03-17 15:45:27,247 - DEBUG - dispatch pc=102, inst=LOAD_DEREF(arg=4, lineno=131)
2024-03-17 15:45:27,247 - DEBUG - stack ['$const98.41', '$100load_deref.42']
2024-03-17 15:45:27,247 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=6, lineno=131)
2024-03-17 15:45:27,247 - DEBUG - stack ['$const98.41', '$100load_deref.42', '$102load_deref.43']
2024-03-17 15:45:27,247 - DEBUG - dispatch pc=106, inst=CALL_FUNCTION(arg=1, lineno=131)
2024-03-17 15:45:27,247 - DEBUG - stack ['$const98.41', '$100load_deref.42', '$102load_deref.43', '$d104.44']
2024-03-17 15:45:27,247 - DEBUG - dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=131)
2024-03-17 15:45:27,247 - DEBUG - stack ['$const98.41', '$100load_deref.42', '$106call_function.45']
2024-03-17 15:45:27,247 - DEBUG - dispatch pc=110, inst=BINARY_MULTIPLY(arg=None, lineno=131)
2024-03-17 15:45:27,247 - DEBUG - stack ['$const98.41', '$108call_function.46']
2024-03-17 15:45:27,247 - DEBUG - dispatch pc=112, inst=RETURN_VALUE(arg=None, lineno=131)
2024-03-17 15:45:27,247 - DEBUG - stack ['$110binary_multiply.47']
2024-03-17 15:45:27,247 - DEBUG - end state. edges=[]
2024-03-17 15:45:27,247 - DEBUG - -------------------------Prune PHIs-------------------------
2024-03-17 15:45:27,248 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-03-17 15:45:27,248 - DEBUG - defmap: {}
2024-03-17 15:45:27,248 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-03-17 15:45:27,248 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-03-17 15:45:27,248 - DEBUG - keep phismap: {}
2024-03-17 15:45:27,248 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-03-17 15:45:27,248 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-03-17 15:45:27,248 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$lat14.1'}), (6, {'func': '$2load_deref.0', 'args': ['$lat14.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$lng112.4'}), (14, {'func': '$10load_deref.3', 'args': ['$lng112.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$18load_deref.6'}), (20, {'res': '$lat220.7'}), (22, {'func': '$18load_deref.6', 'args': ['$lat220.7'], 'res': '$22call_function.8'}), (24, {'value': '$22call_function.8'}), (26, {'res': '$26load_deref.9'}), (28, {'res': '$lng228.10'}), (30, {'func': '$26load_deref.9', 'args': ['$lng228.10'], 'res': '$30call_function.11'}), (32, {'value': '$30call_function.11'}), (34, {'res': '$lat234.12'}), (36, {'res': '$lat136.13'}), (38, {'lhs': '$lat234.12', 'rhs': '$lat136.13', 'res': '$38binary_subtract.14'}), (40, {'value': '$38binary_subtract.14'}), (42, {'res': '$lng242.15'}), (44, {'res': '$lng144.16'}), (46, {'lhs': '$lng242.15', 'rhs': '$lng144.16', 'res': '$46binary_subtract.17'}), (48, {'value': '$46binary_subtract.17'}), (50, {'res': '$50load_deref.18'}), (52, {'res': '$lat52.19'}), (54, {'res': '$const54.20'}), (56, {'lhs': '$lat52.19', 'rhs': '$const54.20', 'res': '$56binary_multiply.21'}), (58, {'func': '$50load_deref.18', 'args': ['$56binary_multiply.21'], 'res': '$58call_function.22'}), (60, {'res': '$const60.23'}), (62, {'lhs': '$58call_function.22', 'rhs': '$const60.23', 'res': '$62binary_power.24'}), (64, {'res': '$64load_deref.25'}), (66, {'res': '$lat166.26'}), (68, {'func': '$64load_deref.25', 'args': ['$lat166.26'], 'res': '$68call_function.27'}), (70, {'res': '$70load_deref.28'}), (72, {'res': '$lat272.29'}), (74, {'func': '$70load_deref.28', 'args': ['$lat272.29'], 'res': '$74call_function.30'}), (76, {'lhs': '$68call_function.27', 'rhs': '$74call_function.30', 'res': '$76binary_multiply.31'}), (78, {'res': '$78load_deref.32'}), (80, {'res': '$lng80.33'}), (82, {'res': '$const82.34'}), (84, {'lhs': '$lng80.33', 'rhs': '$const82.34', 'res': '$84binary_multiply.35'}), (86, {'func': '$78load_deref.32', 'args': ['$84binary_multiply.35'], 'res': '$86call_function.36'}), (88, {'res': '$const88.37'}), (90, {'lhs': '$86call_function.36', 'rhs': '$const88.37', 'res': '$90binary_power.38'}), (92, {'lhs': '$76binary_multiply.31', 'rhs': '$90binary_power.38', 'res': '$92binary_multiply.39'}), (94, {'lhs': '$62binary_power.24', 'rhs': '$92binary_multiply.39', 'res': '$94binary_add.40'}), (96, {'value': '$94binary_add.40'}), (98, {'res': '$const98.41'}), (100, {'res': '$100load_deref.42'}), (102, {'res': '$102load_deref.43'}), (104, {'res': '$d104.44'}), (106, {'func': '$102load_deref.43', 'args': ['$d104.44'], 'res': '$106call_function.45'}), (108, {'func': '$100load_deref.42', 'args': ['$106call_function.45'], 'res': '$108call_function.46'}), (110, {'lhs': '$const98.41', 'rhs': '$108call_function.46', 'res': '$110binary_multiply.47'}), (112, {'retval': '$110binary_multiply.47', 'castval': '$112return_value.48'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-17 15:45:27,249 - DEBUG - label 0:
    lat1 = arg(0, name=lat1)                 ['lat1']
    lng1 = arg(1, name=lng1)                 ['lng1']
    lat2 = arg(2, name=lat2)                 ['lat2']
    lng2 = arg(3, name=lng2)                 ['lng2']
    $2load_deref.0 = freevar(radians: <built-in function radians>) ['$2load_deref.0']
    lat1.1 = call $2load_deref.0(lat1, func=$2load_deref.0, args=[Var(lat1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', 'lat1', 'lat1.1']
    $10load_deref.3 = freevar(radians: <built-in function radians>) ['$10load_deref.3']
    lng1.1 = call $10load_deref.3(lng1, func=$10load_deref.3, args=[Var(lng1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'lng1', 'lng1.1']
    $18load_deref.6 = freevar(radians: <built-in function radians>) ['$18load_deref.6']
    lat2.1 = call $18load_deref.6(lat2, func=$18load_deref.6, args=[Var(lat2, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_deref.6', 'lat2', 'lat2.1']
    $26load_deref.9 = freevar(radians: <built-in function radians>) ['$26load_deref.9']
    lng2.1 = call $26load_deref.9(lng2, func=$26load_deref.9, args=[Var(lng2, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_deref.9', 'lng2', 'lng2.1']
    lat = lat2.1 - lat1.1                    ['lat', 'lat1.1', 'lat2.1']
    lng = lng2.1 - lng1.1                    ['lng', 'lng1.1', 'lng2.1']
    $50load_deref.18 = freevar(sin: <built-in function sin>) ['$50load_deref.18']
    $const54.20 = const(float, 0.5)          ['$const54.20']
    $56binary_multiply.21 = lat * $const54.20 ['$56binary_multiply.21', '$const54.20', 'lat']
    $58call_function.22 = call $50load_deref.18($56binary_multiply.21, func=$50load_deref.18, args=[Var($56binary_multiply.21, haversine.py:127)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_deref.18', '$56binary_multiply.21', '$58call_function.22']
    $const60.23 = const(int, 2)              ['$const60.23']
    $62binary_power.24 = $58call_function.22 ** $const60.23 ['$58call_function.22', '$62binary_power.24', '$const60.23']
    $64load_deref.25 = freevar(cos: <built-in function cos>) ['$64load_deref.25']
    $68call_function.27 = call $64load_deref.25(lat1.1, func=$64load_deref.25, args=[Var(lat1.1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_deref.25', '$68call_function.27', 'lat1.1']
    $70load_deref.28 = freevar(cos: <built-in function cos>) ['$70load_deref.28']
    $74call_function.30 = call $70load_deref.28(lat2.1, func=$70load_deref.28, args=[Var(lat2.1, haversine.py:123)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_deref.28', '$74call_function.30', 'lat2.1']
    $76binary_multiply.31 = $68call_function.27 * $74call_function.30 ['$68call_function.27', '$74call_function.30', '$76binary_multiply.31']
    $78load_deref.32 = freevar(sin: <built-in function sin>) ['$78load_deref.32']
    $const82.34 = const(float, 0.5)          ['$const82.34']
    $84binary_multiply.35 = lng * $const82.34 ['$84binary_multiply.35', '$const82.34', 'lng']
    $86call_function.36 = call $78load_deref.32($84binary_multiply.35, func=$78load_deref.32, args=[Var($84binary_multiply.35, haversine.py:128)], kws=(), vararg=None, varkwarg=None, target=None) ['$78load_deref.32', '$84binary_multiply.35', '$86call_function.36']
    $const88.37 = const(int, 2)              ['$const88.37']
    $90binary_power.38 = $86call_function.36 ** $const88.37 ['$86call_function.36', '$90binary_power.38', '$const88.37']
    $92binary_multiply.39 = $76binary_multiply.31 * $90binary_power.38 ['$76binary_multiply.31', '$90binary_power.38', '$92binary_multiply.39']
    d = $62binary_power.24 + $92binary_multiply.39 ['$62binary_power.24', '$92binary_multiply.39', 'd']
    $const98.41 = const(int, 2)              ['$const98.41']
    $100load_deref.42 = freevar(asin: <built-in function asin>) ['$100load_deref.42']
    $102load_deref.43 = freevar(sqrt: <built-in function sqrt>) ['$102load_deref.43']
    $106call_function.45 = call $102load_deref.43(d, func=$102load_deref.43, args=[Var(d, haversine.py:127)], kws=(), vararg=None, varkwarg=None, target=None) ['$102load_deref.43', '$106call_function.45', 'd']
    $108call_function.46 = call $100load_deref.42($106call_function.45, func=$100load_deref.42, args=[Var($106call_function.45, haversine.py:131)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_deref.42', '$106call_function.45', '$108call_function.46']
    $110binary_multiply.47 = $const98.41 * $108call_function.46 ['$108call_function.46', '$110binary_multiply.47', '$const98.41']
    $112return_value.48 = cast(value=$110binary_multiply.47) ['$110binary_multiply.47', '$112return_value.48']
    return $112return_value.48               ['$112return_value.48']

2024-03-17 15:45:27,283 - DEBUG - ==== SSA block analysis pass on 0
2024-03-17 15:45:27,283 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000207F8A29580>
2024-03-17 15:45:27,283 - DEBUG - on stmt: lat1 = arg(0, name=lat1)
2024-03-17 15:45:27,283 - DEBUG - on stmt: lng1 = arg(1, name=lng1)
2024-03-17 15:45:27,283 - DEBUG - on stmt: lat2 = arg(2, name=lat2)
2024-03-17 15:45:27,283 - DEBUG - on stmt: lng2 = arg(3, name=lng2)
2024-03-17 15:45:27,283 - DEBUG - on stmt: $2load_deref.0 = freevar(radians: <built-in function radians>)
2024-03-17 15:45:27,283 - DEBUG - on stmt: lat1.1 = call $2load_deref.0(lat1, func=$2load_deref.0, args=[Var(lat1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,283 - DEBUG - on stmt: $10load_deref.3 = freevar(radians: <built-in function radians>)
2024-03-17 15:45:27,284 - DEBUG - on stmt: lng1.1 = call $10load_deref.3(lng1, func=$10load_deref.3, args=[Var(lng1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,284 - DEBUG - on stmt: $18load_deref.6 = freevar(radians: <built-in function radians>)
2024-03-17 15:45:27,284 - DEBUG - on stmt: lat2.1 = call $18load_deref.6(lat2, func=$18load_deref.6, args=[Var(lat2, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,284 - DEBUG - on stmt: $26load_deref.9 = freevar(radians: <built-in function radians>)
2024-03-17 15:45:27,284 - DEBUG - on stmt: lng2.1 = call $26load_deref.9(lng2, func=$26load_deref.9, args=[Var(lng2, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,284 - DEBUG - on stmt: lat = lat2.1 - lat1.1
2024-03-17 15:45:27,284 - DEBUG - on stmt: lng = lng2.1 - lng1.1
2024-03-17 15:45:27,284 - DEBUG - on stmt: $50load_deref.18 = freevar(sin: <built-in function sin>)
2024-03-17 15:45:27,284 - DEBUG - on stmt: $const54.20 = const(float, 0.5)
2024-03-17 15:45:27,284 - DEBUG - on stmt: $56binary_multiply.21 = lat * $const54.20
2024-03-17 15:45:27,284 - DEBUG - on stmt: $58call_function.22 = call $50load_deref.18($56binary_multiply.21, func=$50load_deref.18, args=[Var($56binary_multiply.21, haversine.py:127)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,284 - DEBUG - on stmt: $const60.23 = const(int, 2)
2024-03-17 15:45:27,284 - DEBUG - on stmt: $62binary_power.24 = $58call_function.22 ** $const60.23
2024-03-17 15:45:27,284 - DEBUG - on stmt: $64load_deref.25 = freevar(cos: <built-in function cos>)
2024-03-17 15:45:27,285 - DEBUG - on stmt: $68call_function.27 = call $64load_deref.25(lat1.1, func=$64load_deref.25, args=[Var(lat1.1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,285 - DEBUG - on stmt: $70load_deref.28 = freevar(cos: <built-in function cos>)
2024-03-17 15:45:27,285 - DEBUG - on stmt: $74call_function.30 = call $70load_deref.28(lat2.1, func=$70load_deref.28, args=[Var(lat2.1, haversine.py:123)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,285 - DEBUG - on stmt: $76binary_multiply.31 = $68call_function.27 * $74call_function.30
2024-03-17 15:45:27,285 - DEBUG - on stmt: $78load_deref.32 = freevar(sin: <built-in function sin>)
2024-03-17 15:45:27,285 - DEBUG - on stmt: $const82.34 = const(float, 0.5)
2024-03-17 15:45:27,285 - DEBUG - on stmt: $84binary_multiply.35 = lng * $const82.34
2024-03-17 15:45:27,285 - DEBUG - on stmt: $86call_function.36 = call $78load_deref.32($84binary_multiply.35, func=$78load_deref.32, args=[Var($84binary_multiply.35, haversine.py:128)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,285 - DEBUG - on stmt: $const88.37 = const(int, 2)
2024-03-17 15:45:27,285 - DEBUG - on stmt: $90binary_power.38 = $86call_function.36 ** $const88.37
2024-03-17 15:45:27,285 - DEBUG - on stmt: $92binary_multiply.39 = $76binary_multiply.31 * $90binary_power.38
2024-03-17 15:45:27,285 - DEBUG - on stmt: d = $62binary_power.24 + $92binary_multiply.39
2024-03-17 15:45:27,285 - DEBUG - on stmt: $const98.41 = const(int, 2)
2024-03-17 15:45:27,285 - DEBUG - on stmt: $100load_deref.42 = freevar(asin: <built-in function asin>)
2024-03-17 15:45:27,285 - DEBUG - on stmt: $102load_deref.43 = freevar(sqrt: <built-in function sqrt>)
2024-03-17 15:45:27,286 - DEBUG - on stmt: $106call_function.45 = call $102load_deref.43(d, func=$102load_deref.43, args=[Var(d, haversine.py:127)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,286 - DEBUG - on stmt: $108call_function.46 = call $100load_deref.42($106call_function.45, func=$100load_deref.42, args=[Var($106call_function.45, haversine.py:131)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,286 - DEBUG - on stmt: $110binary_multiply.47 = $const98.41 * $108call_function.46
2024-03-17 15:45:27,286 - DEBUG - on stmt: $112return_value.48 = cast(value=$110binary_multiply.47)
2024-03-17 15:45:27,286 - DEBUG - on stmt: return $112return_value.48
2024-03-17 15:45:27,286 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100load_deref.42': [<numba.core.ir.Assign object at 0x00000207F8A32400>],
             '$102load_deref.43': [<numba.core.ir.Assign object at 0x00000207F8A32580>],
             '$106call_function.45': [<numba.core.ir.Assign object at 0x00000207F8A32880>],
             '$108call_function.46': [<numba.core.ir.Assign object at 0x00000207F8A32A00>],
             '$10load_deref.3': [<numba.core.ir.Assign object at 0x00000207F8A0C910>],
             '$110binary_multiply.47': [<numba.core.ir.Assign object at 0x00000207F8A32B50>],
             '$112return_value.48': [<numba.core.ir.Assign object at 0x00000207F8A32CA0>],
             '$18load_deref.6': [<numba.core.ir.Assign object at 0x00000207F8A0CE50>],
             '$26load_deref.9': [<numba.core.ir.Assign object at 0x00000207F8A293D0>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x00000207F8A0C3D0>],
             '$50load_deref.18': [<numba.core.ir.Assign object at 0x00000207F8A29FA0>],
             '$56binary_multiply.21': [<numba.core.ir.Assign object at 0x00000207F8A2C430>],
             '$58call_function.22': [<numba.core.ir.Assign object at 0x00000207F8A2C5E0>],
             '$62binary_power.24': [<numba.core.ir.Assign object at 0x00000207F8A2C8B0>],
             '$64load_deref.25': [<numba.core.ir.Assign object at 0x00000207F8A2CA00>],
             '$68call_function.27': [<numba.core.ir.Assign object at 0x00000207F8A2CD00>],
             '$70load_deref.28': [<numba.core.ir.Assign object at 0x00000207F8A2CE20>],
             '$74call_function.30': [<numba.core.ir.Assign object at 0x00000207F8A30160>],
             '$76binary_multiply.31': [<numba.core.ir.Assign object at 0x00000207F8A302B0>],
             '$78load_deref.32': [<numba.core.ir.Assign object at 0x00000207F8A30400>],
             '$84binary_multiply.35': [<numba.core.ir.Assign object at 0x00000207F8A30850>],
             '$86call_function.36': [<numba.core.ir.Assign object at 0x00000207F8A30A00>],
             '$90binary_power.38': [<numba.core.ir.Assign object at 0x00000207F8A30CD0>],
             '$92binary_multiply.39': [<numba.core.ir.Assign object at 0x00000207F8A30E50>],
             '$const54.20': [<numba.core.ir.Assign object at 0x00000207F8A2C280>],
             '$const60.23': [<numba.core.ir.Assign object at 0x00000207F8A2C700>],
             '$const82.34': [<numba.core.ir.Assign object at 0x00000207F8A306A0>],
             '$const88.37': [<numba.core.ir.Assign object at 0x00000207F8A30B20>],
             '$const98.41': [<numba.core.ir.Assign object at 0x00000207F8A32280>],
             'd': [<numba.core.ir.Assign object at 0x00000207F8A30FD0>],
             'lat': [<numba.core.ir.Assign object at 0x00000207F8A29B80>],
             'lat1': [<numba.core.ir.Assign object at 0x00000207F8A041F0>],
             'lat1.1': [<numba.core.ir.Assign object at 0x00000207F8A0C6D0>],
             'lat2': [<numba.core.ir.Assign object at 0x00000207F89FCD30>],
             'lat2.1': [<numba.core.ir.Assign object at 0x00000207F8A29190>],
             'lng': [<numba.core.ir.Assign object at 0x00000207F8A29D30>],
             'lng1': [<numba.core.ir.Assign object at 0x00000207F89FCE20>],
             'lng1.1': [<numba.core.ir.Assign object at 0x00000207F8A0CC10>],
             'lng2': [<numba.core.ir.Assign object at 0x00000207F8A0C250>],
             'lng2.1': [<numba.core.ir.Assign object at 0x00000207F8A296D0>]})
2024-03-17 15:45:27,286 - DEBUG - SSA violators set()
2024-03-17 15:45:27,334 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=216)
           2	LOAD_DEREF(arg=1, lineno=216)
           4	LOAD_CONST(arg=1, lineno=216)
           6	CALL_FUNCTION(arg=1, lineno=216)
           8	STORE_FAST(arg=2, lineno=216)
          10	LOAD_DEREF(arg=1, lineno=217)
          12	LOAD_FAST(arg=0, lineno=217)
          14	CALL_FUNCTION(arg=1, lineno=217)
          16	STORE_FAST(arg=0, lineno=217)
          18	LOAD_FAST(arg=1, lineno=218)
          20	LOAD_CONST(arg=2, lineno=218)
          22	COMPARE_OP(arg=0, lineno=218)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=218)
          26	LOAD_CONST(arg=3, lineno=219)
          28	STORE_FAST(arg=3, lineno=219)
          30	LOAD_FAST(arg=1, lineno=220)
          32	UNARY_NEGATIVE(arg=None, lineno=220)
          34	STORE_FAST(arg=4, lineno=220)
          36	LOAD_FAST(arg=4, lineno=221)
          38	LOAD_CONST(arg=2, lineno=221)
          40	COMPARE_OP(arg=0, lineno=221)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=221)
          44	LOAD_GLOBAL(arg=0, lineno=222)
          46	RAISE_VARARGS(arg=1, lineno=222)
>         48	LOAD_DEREF(arg=0, lineno=223)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=223)
          52	LOAD_FAST(arg=0, lineno=224)
          54	LOAD_CONST(arg=2, lineno=224)
          56	COMPARE_OP(arg=2, lineno=224)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=224)
          60	LOAD_DEREF(arg=2, lineno=225)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=225)
          64	LOAD_DEREF(arg=2, lineno=226)
          66	RETURN_VALUE(arg=None, lineno=226)
>         68	LOAD_GLOBAL(arg=1, lineno=228)
          70	LOAD_CONST(arg=4, lineno=228)
          72	CALL_FUNCTION(arg=1, lineno=228)
          74	RAISE_VARARGS(arg=1, lineno=228)
>         76	LOAD_FAST(arg=0, lineno=229)
          78	LOAD_CONST(arg=1, lineno=229)
          80	COMPARE_OP(arg=3, lineno=229)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=229)
          84	LOAD_FAST(arg=0, lineno=229)
          86	LOAD_CONST(arg=5, lineno=229)
          88	COMPARE_OP(arg=3, lineno=229)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=229)
          92	LOAD_CONST(arg=2, lineno=230)
          94	RETURN_VALUE(arg=None, lineno=230)
          96	JUMP_FORWARD(arg=8, lineno=230)
>         98	LOAD_CONST(arg=6, lineno=232)
         100	STORE_FAST(arg=3, lineno=232)
         102	LOAD_FAST(arg=1, lineno=233)
         104	STORE_FAST(arg=4, lineno=233)
>        106	LOAD_FAST(arg=4, lineno=234)
         108	LOAD_CONST(arg=7, lineno=234)
         110	COMPARE_OP(arg=4, lineno=234)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=234)
         114	LOAD_GLOBAL(arg=2, lineno=236)
         116	LOAD_METHOD(arg=3, lineno=236)
         118	LOAD_FAST(arg=0, lineno=236)
         120	LOAD_GLOBAL(arg=4, lineno=236)
         122	LOAD_FAST(arg=1, lineno=236)
         124	CALL_FUNCTION(arg=1, lineno=236)
         126	CALL_METHOD(arg=2, lineno=236)
         128	RETURN_VALUE(arg=None, lineno=236)
>        130	LOAD_FAST(arg=4, lineno=237)
         132	LOAD_CONST(arg=2, lineno=237)
         134	COMPARE_OP(arg=3, lineno=237)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=237)
         138	LOAD_FAST(arg=4, lineno=238)
         140	LOAD_CONST(arg=1, lineno=238)
         142	BINARY_AND(arg=None, lineno=238)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=238)
         146	LOAD_FAST(arg=2, lineno=239)
         148	LOAD_FAST(arg=0, lineno=239)
         150	INPLACE_MULTIPLY(arg=None, lineno=239)
         152	STORE_FAST(arg=2, lineno=239)
>        154	LOAD_FAST(arg=4, lineno=240)
         156	LOAD_CONST(arg=1, lineno=240)
         158	INPLACE_RSHIFT(arg=None, lineno=240)
         160	STORE_FAST(arg=4, lineno=240)
         162	LOAD_FAST(arg=0, lineno=241)
         164	LOAD_FAST(arg=0, lineno=241)
         166	INPLACE_MULTIPLY(arg=None, lineno=241)
         168	STORE_FAST(arg=0, lineno=241)
         170	JUMP_ABSOLUTE(arg=130, lineno=241)
>        172	LOAD_FAST(arg=3, lineno=243)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=243)
         176	LOAD_CONST(arg=8, lineno=243)
         178	LOAD_FAST(arg=2, lineno=243)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=243)
         182	RETURN_VALUE(arg=None, lineno=243)
>        184	LOAD_FAST(arg=2, lineno=243)
         186	RETURN_VALUE(arg=None, lineno=243)
2024-03-17 15:45:27,334 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-03-17 15:45:27,334 - DEBUG - stack: []
2024-03-17 15:45:27,334 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=216)
2024-03-17 15:45:27,335 - DEBUG - stack []
2024-03-17 15:45:27,335 - DEBUG - dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=216)
2024-03-17 15:45:27,335 - DEBUG - stack []
2024-03-17 15:45:27,335 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=216)
2024-03-17 15:45:27,335 - DEBUG - stack ['$2load_deref.0']
2024-03-17 15:45:27,335 - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=216)
2024-03-17 15:45:27,335 - DEBUG - stack ['$2load_deref.0', '$const4.1']
2024-03-17 15:45:27,335 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=2, lineno=216)
2024-03-17 15:45:27,335 - DEBUG - stack ['$6call_function.2']
2024-03-17 15:45:27,335 - DEBUG - dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=217)
2024-03-17 15:45:27,335 - DEBUG - stack []
2024-03-17 15:45:27,335 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=217)
2024-03-17 15:45:27,335 - DEBUG - stack ['$10load_deref.3']
2024-03-17 15:45:27,335 - DEBUG - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=217)
2024-03-17 15:45:27,335 - DEBUG - stack ['$10load_deref.3', '$a12.4']
2024-03-17 15:45:27,335 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=0, lineno=217)
2024-03-17 15:45:27,336 - DEBUG - stack ['$14call_function.5']
2024-03-17 15:45:27,336 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=218)
2024-03-17 15:45:27,336 - DEBUG - stack []
2024-03-17 15:45:27,336 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=218)
2024-03-17 15:45:27,336 - DEBUG - stack ['$b18.6']
2024-03-17 15:45:27,336 - DEBUG - dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=218)
2024-03-17 15:45:27,336 - DEBUG - stack ['$b18.6', '$const20.7']
2024-03-17 15:45:27,336 - DEBUG - dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=218)
2024-03-17 15:45:27,336 - DEBUG - stack ['$22compare_op.8']
2024-03-17 15:45:27,336 - DEBUG - end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
2024-03-17 15:45:27,336 - DEBUG - pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
2024-03-17 15:45:27,336 - DEBUG - stack: []
2024-03-17 15:45:27,336 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=219)
2024-03-17 15:45:27,336 - DEBUG - stack []
2024-03-17 15:45:27,336 - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=3, lineno=219)
2024-03-17 15:45:27,336 - DEBUG - stack ['$const26.0']
2024-03-17 15:45:27,337 - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=220)
2024-03-17 15:45:27,337 - DEBUG - stack []
2024-03-17 15:45:27,337 - DEBUG - dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2024-03-17 15:45:27,337 - DEBUG - stack ['$b30.1']
2024-03-17 15:45:27,337 - DEBUG - dispatch pc=34, inst=STORE_FAST(arg=4, lineno=220)
2024-03-17 15:45:27,337 - DEBUG - stack ['$32unary_negative.2']
2024-03-17 15:45:27,337 - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=221)
2024-03-17 15:45:27,337 - DEBUG - stack []
2024-03-17 15:45:27,337 - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=221)
2024-03-17 15:45:27,337 - DEBUG - stack ['$exp36.3']
2024-03-17 15:45:27,337 - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=221)
2024-03-17 15:45:27,337 - DEBUG - stack ['$exp36.3', '$const38.4']
2024-03-17 15:45:27,337 - DEBUG - dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=221)
2024-03-17 15:45:27,337 - DEBUG - stack ['$40compare_op.5']
2024-03-17 15:45:27,337 - DEBUG - end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
2024-03-17 15:45:27,337 - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2024-03-17 15:45:27,338 - DEBUG - stack: []
2024-03-17 15:45:27,338 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=232)
2024-03-17 15:45:27,338 - DEBUG - stack []
2024-03-17 15:45:27,338 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=3, lineno=232)
2024-03-17 15:45:27,338 - DEBUG - stack ['$const98.0']
2024-03-17 15:45:27,338 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=233)
2024-03-17 15:45:27,338 - DEBUG - stack []
2024-03-17 15:45:27,338 - DEBUG - dispatch pc=104, inst=STORE_FAST(arg=4, lineno=233)
2024-03-17 15:45:27,338 - DEBUG - stack ['$b102.1']
2024-03-17 15:45:27,338 - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
2024-03-17 15:45:27,338 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-17 15:45:27,338 - DEBUG - stack: []
2024-03-17 15:45:27,338 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=222)
2024-03-17 15:45:27,338 - DEBUG - stack []
2024-03-17 15:45:27,338 - DEBUG - dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=222)
2024-03-17 15:45:27,338 - DEBUG - stack ['$44load_global.0']
2024-03-17 15:45:27,338 - DEBUG - end state. edges=[]
2024-03-17 15:45:27,338 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-17 15:45:27,338 - DEBUG - stack: []
2024-03-17 15:45:27,338 - DEBUG - dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=223)
2024-03-17 15:45:27,338 - DEBUG - stack []
2024-03-17 15:45:27,338 - DEBUG - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=223)
2024-03-17 15:45:27,338 - DEBUG - stack ['$48load_deref.0']
2024-03-17 15:45:27,338 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
2024-03-17 15:45:27,340 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-17 15:45:27,341 - DEBUG - stack: []
2024-03-17 15:45:27,341 - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=234)
2024-03-17 15:45:27,341 - DEBUG - stack []
2024-03-17 15:45:27,341 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=234)
2024-03-17 15:45:27,341 - DEBUG - stack ['$exp106.0']
2024-03-17 15:45:27,341 - DEBUG - dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=234)
2024-03-17 15:45:27,341 - DEBUG - stack ['$exp106.0', '$const108.1']
2024-03-17 15:45:27,341 - DEBUG - dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=234)
2024-03-17 15:45:27,341 - DEBUG - stack ['$110compare_op.2']
2024-03-17 15:45:27,341 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
2024-03-17 15:45:27,341 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-17 15:45:27,341 - DEBUG - stack: []
2024-03-17 15:45:27,341 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=224)
2024-03-17 15:45:27,342 - DEBUG - stack []
2024-03-17 15:45:27,342 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=224)
2024-03-17 15:45:27,342 - DEBUG - stack ['$a52.0']
2024-03-17 15:45:27,342 - DEBUG - dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=224)
2024-03-17 15:45:27,342 - DEBUG - stack ['$a52.0', '$const54.1']
2024-03-17 15:45:27,342 - DEBUG - dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=224)
2024-03-17 15:45:27,342 - DEBUG - stack ['$56compare_op.2']
2024-03-17 15:45:27,342 - DEBUG - end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
2024-03-17 15:45:27,342 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2024-03-17 15:45:27,342 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2024-03-17 15:45:27,342 - DEBUG - stack: []
2024-03-17 15:45:27,342 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=236)
2024-03-17 15:45:27,342 - DEBUG - stack []
2024-03-17 15:45:27,342 - DEBUG - dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=236)
2024-03-17 15:45:27,342 - DEBUG - stack ['$114load_global.0']
2024-03-17 15:45:27,343 - DEBUG - dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=236)
2024-03-17 15:45:27,343 - DEBUG - stack ['$116load_method.1']
2024-03-17 15:45:27,343 - DEBUG - dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=236)
2024-03-17 15:45:27,343 - DEBUG - stack ['$116load_method.1', '$a118.2']
2024-03-17 15:45:27,343 - DEBUG - dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=236)
2024-03-17 15:45:27,343 - DEBUG - stack ['$116load_method.1', '$a118.2', '$120load_global.3']
2024-03-17 15:45:27,343 - DEBUG - dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=236)
2024-03-17 15:45:27,343 - DEBUG - stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
2024-03-17 15:45:27,343 - DEBUG - dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=236)
2024-03-17 15:45:27,343 - DEBUG - stack ['$116load_method.1', '$a118.2', '$124call_function.5']
2024-03-17 15:45:27,343 - DEBUG - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=236)
2024-03-17 15:45:27,343 - DEBUG - stack ['$126call_method.6']
2024-03-17 15:45:27,343 - DEBUG - end state. edges=[]
2024-03-17 15:45:27,343 - DEBUG - pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2024-03-17 15:45:27,343 - DEBUG - stack: []
2024-03-17 15:45:27,343 - DEBUG - dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=237)
2024-03-17 15:45:27,344 - DEBUG - stack []
2024-03-17 15:45:27,344 - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=237)
2024-03-17 15:45:27,344 - DEBUG - stack ['$exp130.0']
2024-03-17 15:45:27,344 - DEBUG - dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=237)
2024-03-17 15:45:27,344 - DEBUG - stack ['$exp130.0', '$const132.1']
2024-03-17 15:45:27,344 - DEBUG - dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=237)
2024-03-17 15:45:27,344 - DEBUG - stack ['$134compare_op.2']
2024-03-17 15:45:27,344 - DEBUG - end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
2024-03-17 15:45:27,344 - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
2024-03-17 15:45:27,344 - DEBUG - stack: []
2024-03-17 15:45:27,344 - DEBUG - dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=225)
2024-03-17 15:45:27,344 - DEBUG - stack []
2024-03-17 15:45:27,344 - DEBUG - dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=225)
2024-03-17 15:45:27,344 - DEBUG - stack ['$60load_deref.0']
2024-03-17 15:45:27,344 - DEBUG - end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
2024-03-17 15:45:27,344 - DEBUG - pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
2024-03-17 15:45:27,345 - DEBUG - stack: []
2024-03-17 15:45:27,345 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=229)
2024-03-17 15:45:27,345 - DEBUG - stack []
2024-03-17 15:45:27,345 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=229)
2024-03-17 15:45:27,345 - DEBUG - stack ['$a76.0']
2024-03-17 15:45:27,345 - DEBUG - dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=229)
2024-03-17 15:45:27,345 - DEBUG - stack ['$a76.0', '$const78.1']
2024-03-17 15:45:27,345 - DEBUG - dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=229)
2024-03-17 15:45:27,345 - DEBUG - stack ['$80compare_op.2']
2024-03-17 15:45:27,345 - DEBUG - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
2024-03-17 15:45:27,345 - DEBUG - pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-17 15:45:27,345 - DEBUG - stack: []
2024-03-17 15:45:27,345 - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=238)
2024-03-17 15:45:27,345 - DEBUG - stack []
2024-03-17 15:45:27,345 - DEBUG - dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=238)
2024-03-17 15:45:27,345 - DEBUG - stack ['$exp138.0']
2024-03-17 15:45:27,346 - DEBUG - dispatch pc=142, inst=BINARY_AND(arg=None, lineno=238)
2024-03-17 15:45:27,346 - DEBUG - stack ['$exp138.0', '$const140.1']
2024-03-17 15:45:27,346 - DEBUG - dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=238)
2024-03-17 15:45:27,346 - DEBUG - stack ['$142binary_and.2']
2024-03-17 15:45:27,346 - DEBUG - end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2024-03-17 15:45:27,346 - DEBUG - pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-03-17 15:45:27,346 - DEBUG - stack: []
2024-03-17 15:45:27,346 - DEBUG - dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=243)
2024-03-17 15:45:27,346 - DEBUG - stack []
2024-03-17 15:45:27,346 - DEBUG - dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=243)
2024-03-17 15:45:27,346 - DEBUG - stack ['$invert172.0']
2024-03-17 15:45:27,346 - DEBUG - end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
2024-03-17 15:45:27,346 - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
2024-03-17 15:45:27,346 - DEBUG - stack: []
2024-03-17 15:45:27,346 - DEBUG - dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=226)
2024-03-17 15:45:27,346 - DEBUG - stack []
2024-03-17 15:45:27,347 - DEBUG - dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=226)
2024-03-17 15:45:27,347 - DEBUG - stack ['$64load_deref.0']
2024-03-17 15:45:27,347 - DEBUG - end state. edges=[]
2024-03-17 15:45:27,347 - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
2024-03-17 15:45:27,347 - DEBUG - stack: []
2024-03-17 15:45:27,347 - DEBUG - dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=228)
2024-03-17 15:45:27,347 - DEBUG - stack []
2024-03-17 15:45:27,347 - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=228)
2024-03-17 15:45:27,347 - DEBUG - stack ['$68load_global.0']
2024-03-17 15:45:27,347 - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=228)
2024-03-17 15:45:27,347 - DEBUG - stack ['$68load_global.0', '$const70.1']
2024-03-17 15:45:27,347 - DEBUG - dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=228)
2024-03-17 15:45:27,347 - DEBUG - stack ['$72call_function.2']
2024-03-17 15:45:27,347 - DEBUG - end state. edges=[]
2024-03-17 15:45:27,347 - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
2024-03-17 15:45:27,348 - DEBUG - stack: []
2024-03-17 15:45:27,348 - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=229)
2024-03-17 15:45:27,348 - DEBUG - stack []
2024-03-17 15:45:27,348 - DEBUG - dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=229)
2024-03-17 15:45:27,348 - DEBUG - stack ['$a84.0']
2024-03-17 15:45:27,348 - DEBUG - dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=229)
2024-03-17 15:45:27,348 - DEBUG - stack ['$a84.0', '$const86.1']
2024-03-17 15:45:27,348 - DEBUG - dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=229)
2024-03-17 15:45:27,348 - DEBUG - stack ['$88compare_op.2']
2024-03-17 15:45:27,348 - DEBUG - end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
2024-03-17 15:45:27,348 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-17 15:45:27,348 - DEBUG - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-17 15:45:27,348 - DEBUG - stack: []
2024-03-17 15:45:27,348 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=239)
2024-03-17 15:45:27,348 - DEBUG - stack []
2024-03-17 15:45:27,348 - DEBUG - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=239)
2024-03-17 15:45:27,349 - DEBUG - stack ['$r146.0']
2024-03-17 15:45:27,349 - DEBUG - dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=239)
2024-03-17 15:45:27,349 - DEBUG - stack ['$r146.0', '$a148.1']
2024-03-17 15:45:27,349 - DEBUG - dispatch pc=152, inst=STORE_FAST(arg=2, lineno=239)
2024-03-17 15:45:27,349 - DEBUG - stack ['$150inplace_multiply.2']
2024-03-17 15:45:27,349 - DEBUG - end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
2024-03-17 15:45:27,349 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-03-17 15:45:27,349 - DEBUG - stack: []
2024-03-17 15:45:27,349 - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=240)
2024-03-17 15:45:27,349 - DEBUG - stack []
2024-03-17 15:45:27,349 - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=240)
2024-03-17 15:45:27,349 - DEBUG - stack ['$exp154.0']
2024-03-17 15:45:27,349 - DEBUG - dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=240)
2024-03-17 15:45:27,349 - DEBUG - stack ['$exp154.0', '$const156.1']
2024-03-17 15:45:27,349 - DEBUG - dispatch pc=160, inst=STORE_FAST(arg=4, lineno=240)
2024-03-17 15:45:27,349 - DEBUG - stack ['$158inplace_rshift.2']
2024-03-17 15:45:27,349 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=241)
2024-03-17 15:45:27,349 - DEBUG - stack []
2024-03-17 15:45:27,349 - DEBUG - dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=241)
2024-03-17 15:45:27,349 - DEBUG - stack ['$a162.3']
2024-03-17 15:45:27,349 - DEBUG - dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=241)
2024-03-17 15:45:27,349 - DEBUG - stack ['$a162.3', '$a164.4']
2024-03-17 15:45:27,349 - DEBUG - dispatch pc=168, inst=STORE_FAST(arg=0, lineno=241)
2024-03-17 15:45:27,349 - DEBUG - stack ['$166inplace_multiply.5']
2024-03-17 15:45:27,350 - DEBUG - dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=241)
2024-03-17 15:45:27,350 - DEBUG - stack []
2024-03-17 15:45:27,350 - DEBUG - end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
2024-03-17 15:45:27,350 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-17 15:45:27,350 - DEBUG - stack: []
2024-03-17 15:45:27,350 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=243)
2024-03-17 15:45:27,350 - DEBUG - stack []
2024-03-17 15:45:27,350 - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=243)
2024-03-17 15:45:27,350 - DEBUG - stack ['$const176.0']
2024-03-17 15:45:27,350 - DEBUG - dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=243)
2024-03-17 15:45:27,350 - DEBUG - stack ['$const176.0', '$r178.1']
2024-03-17 15:45:27,350 - DEBUG - dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=243)
2024-03-17 15:45:27,350 - DEBUG - stack ['$180binary_true_divide.2']
2024-03-17 15:45:27,350 - DEBUG - end state. edges=[]
2024-03-17 15:45:27,350 - DEBUG - pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-17 15:45:27,350 - DEBUG - stack: []
2024-03-17 15:45:27,351 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=243)
2024-03-17 15:45:27,351 - DEBUG - stack []
2024-03-17 15:45:27,351 - DEBUG - dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=243)
2024-03-17 15:45:27,351 - DEBUG - stack ['$r184.0']
2024-03-17 15:45:27,351 - DEBUG - end state. edges=[]
2024-03-17 15:45:27,351 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-17 15:45:27,351 - DEBUG - stack: []
2024-03-17 15:45:27,351 - DEBUG - dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=230)
2024-03-17 15:45:27,351 - DEBUG - stack []
2024-03-17 15:45:27,351 - DEBUG - dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=230)
2024-03-17 15:45:27,351 - DEBUG - stack ['$const92.0']
2024-03-17 15:45:27,351 - DEBUG - end state. edges=[]
2024-03-17 15:45:27,351 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-17 15:45:27,351 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-17 15:45:27,351 - DEBUG - pending: deque([State(pc_initial=130 nstack_initial=0)])
2024-03-17 15:45:27,351 - DEBUG - -------------------------Prune PHIs-------------------------
2024-03-17 15:45:27,352 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
2024-03-17 15:45:27,352 - DEBUG - defmap: {}
2024-03-17 15:45:27,352 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-03-17 15:45:27,352 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-03-17 15:45:27,352 - DEBUG - keep phismap: {}
2024-03-17 15:45:27,352 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-03-17 15:45:27,352 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-03-17 15:45:27,352 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
2024-03-17 15:45:27,352 - DEBUG - block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
2024-03-17 15:45:27,353 - DEBUG - block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-17 15:45:27,353 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
2024-03-17 15:45:27,353 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
2024-03-17 15:45:27,353 - DEBUG - block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
2024-03-17 15:45:27,353 - DEBUG - block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-17 15:45:27,353 - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-17 15:45:27,353 - DEBUG - block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
2024-03-17 15:45:27,353 - DEBUG - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
2024-03-17 15:45:27,353 - DEBUG - block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-17 15:45:27,353 - DEBUG - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
2024-03-17 15:45:27,353 - DEBUG - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
2024-03-17 15:45:27,353 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-17 15:45:27,353 - DEBUG - block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
2024-03-17 15:45:27,354 - DEBUG - block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
2024-03-17 15:45:27,354 - DEBUG - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
2024-03-17 15:45:27,354 - DEBUG - block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
2024-03-17 15:45:27,354 - DEBUG - block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
2024-03-17 15:45:27,354 - DEBUG - block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-17 15:45:27,354 - DEBUG - block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-17 15:45:27,356 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' (built-in)>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

2024-03-17 15:45:27,398 - DEBUG - ==== SSA block analysis pass on 0
2024-03-17 15:45:27,398 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,398 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 15:45:27,398 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 15:45:27,398 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 15:45:27,398 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 15:45:27,398 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,399 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 15:45:27,399 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,399 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 15:45:27,399 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 15:45:27,399 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,399 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,399 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 15:45:27,399 - DEBUG - ==== SSA block analysis pass on 26
2024-03-17 15:45:27,399 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,399 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 15:45:27,399 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 15:45:27,399 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 15:45:27,399 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 15:45:27,399 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,400 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,400 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 15:45:27,400 - DEBUG - ==== SSA block analysis pass on 44
2024-03-17 15:45:27,400 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,400 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 15:45:27,400 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 15:45:27,400 - DEBUG - ==== SSA block analysis pass on 48
2024-03-17 15:45:27,400 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,400 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 15:45:27,400 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,400 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,400 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,400 - DEBUG - ==== SSA block analysis pass on 98
2024-03-17 15:45:27,400 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,400 - DEBUG - on stmt: invert = const(bool, False)
2024-03-17 15:45:27,401 - DEBUG - on stmt: exp = b
2024-03-17 15:45:27,401 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,401 - DEBUG - ==== SSA block analysis pass on 106
2024-03-17 15:45:27,401 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,401 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 15:45:27,401 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-17 15:45:27,401 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,401 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,401 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 15:45:27,401 - DEBUG - ==== SSA block analysis pass on 114
2024-03-17 15:45:27,401 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,401 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 15:45:27,401 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 15:45:27,401 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 15:45:27,401 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,401 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,401 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 15:45:27,401 - DEBUG - on stmt: return $128return_value.7
2024-03-17 15:45:27,401 - DEBUG - ==== SSA block analysis pass on 130
2024-03-17 15:45:27,401 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,401 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 15:45:27,401 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-17 15:45:27,401 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,403 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,403 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 15:45:27,403 - DEBUG - ==== SSA block analysis pass on 138
2024-03-17 15:45:27,403 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,403 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 15:45:27,403 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-17 15:45:27,403 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,403 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,403 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 15:45:27,403 - DEBUG - ==== SSA block analysis pass on 146
2024-03-17 15:45:27,403 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,403 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,403 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-17 15:45:27,404 - DEBUG - on stmt: jump 154
2024-03-17 15:45:27,404 - DEBUG - ==== SSA block analysis pass on 154
2024-03-17 15:45:27,404 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,404 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 15:45:27,404 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,404 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-17 15:45:27,404 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,404 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-17 15:45:27,404 - DEBUG - on stmt: jump 130
2024-03-17 15:45:27,404 - DEBUG - ==== SSA block analysis pass on 172
2024-03-17 15:45:27,404 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,404 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,404 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,404 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 15:45:27,404 - DEBUG - ==== SSA block analysis pass on 176
2024-03-17 15:45:27,404 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,405 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 15:45:27,405 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-17 15:45:27,405 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 15:45:27,405 - DEBUG - on stmt: return $182return_value.3
2024-03-17 15:45:27,405 - DEBUG - ==== SSA block analysis pass on 184
2024-03-17 15:45:27,405 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,405 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-17 15:45:27,405 - DEBUG - on stmt: return $186return_value.1
2024-03-17 15:45:27,405 - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x00000207F8AC2EB0>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x00000207F8AE5EB0>],
             '$112pred': [<numba.core.ir.Assign object at 0x00000207F8AE9160>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x00000207F8AE93A0>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x00000207F8AE9520>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x00000207F8AE97C0>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x00000207F8AE9AC0>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x00000207F8AE9C70>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x00000207F8AE9D60>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x00000207F8AEB250>],
             '$136pred': [<numba.core.ir.Assign object at 0x00000207F8AEB4C0>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x00000207F8AEB9D0>],
             '$144pred': [<numba.core.ir.Assign object at 0x00000207F8AEBC40>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x00000207F8AED130>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x00000207F8AED670>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x00000207F8AEDAF0>],
             '$174pred': [<numba.core.ir.Assign object at 0x00000207F8AEDFA0>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x00000207F8AF04F0>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x00000207F8AF0640>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x00000207F8AF09A0>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x00000207F8AD0700>],
             '$24pred': [<numba.core.ir.Assign object at 0x00000207F8AD0970>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x00000207F8AC2D00>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x00000207F8ADD400>],
             '$42pred': [<numba.core.ir.Assign object at 0x00000207F8ADD670>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x00000207F8ADD790>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x00000207F8A75C70>],
             '$50pred': [<numba.core.ir.Assign object at 0x00000207F8ADDA60>],
             '$const108.1': [<numba.core.ir.Assign object at 0x00000207F8AE5D00>],
             '$const132.1': [<numba.core.ir.Assign object at 0x00000207F8AEB0A0>],
             '$const140.1': [<numba.core.ir.Assign object at 0x00000207F8AEB820>],
             '$const156.1': [<numba.core.ir.Assign object at 0x00000207F8AED4C0>],
             '$const176.0': [<numba.core.ir.Assign object at 0x00000207F8AF0220>],
             '$const20.7': [<numba.core.ir.Assign object at 0x00000207F8AD0550>],
             '$const38.4': [<numba.core.ir.Assign object at 0x00000207F8ADD250>],
             '$const4.1': [<numba.core.ir.Assign object at 0x00000207F8AC2A90>],
             'a': [<numba.core.ir.Assign object at 0x00000207F8AC2910>],
             'a.1': [<numba.core.ir.Assign object at 0x00000207F8AD01F0>,
                     <numba.core.ir.Assign object at 0x00000207F8AEDBB0>],
             'b': [<numba.core.ir.Assign object at 0x00000207F8AC2040>],
             'bool112': [<numba.core.ir.Assign object at 0x00000207F8AE9040>],
             'bool136': [<numba.core.ir.Assign object at 0x00000207F8AEB3A0>],
             'bool144': [<numba.core.ir.Assign object at 0x00000207F8AEBB20>],
             'bool174': [<numba.core.ir.Assign object at 0x00000207F8AEDE80>],
             'bool24': [<numba.core.ir.Assign object at 0x00000207F8AD0850>],
             'bool42': [<numba.core.ir.Assign object at 0x00000207F8ADD550>],
             'bool50': [<numba.core.ir.Assign object at 0x00000207F8ADD940>],
             'exp': [<numba.core.ir.Assign object at 0x00000207F8AD0E50>,
                     <numba.core.ir.Assign object at 0x00000207F8AE5A90>,
                     <numba.core.ir.Assign object at 0x00000207F8AED730>],
             'invert': [<numba.core.ir.Assign object at 0x00000207F8AD0A90>,
                        <numba.core.ir.Assign object at 0x00000207F8AE57C0>],
             'r': [<numba.core.ir.Assign object at 0x00000207F8AC2310>,
                   <numba.core.ir.Assign object at 0x00000207F8AED1F0>]})
2024-03-17 15:45:27,406 - DEBUG - SSA violators {'r', 'a.1', 'exp', 'invert'}
2024-03-17 15:45:27,406 - DEBUG - Fix SSA violator on var r
2024-03-17 15:45:27,406 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-17 15:45:27,406 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A52370>
2024-03-17 15:45:27,406 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 15:45:27,406 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 15:45:27,406 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 15:45:27,406 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 15:45:27,406 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,406 - DEBUG - first assign: r
2024-03-17 15:45:27,406 - DEBUG - replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,406 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 15:45:27,406 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,407 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 15:45:27,407 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 15:45:27,407 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,407 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,407 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 15:45:27,407 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-17 15:45:27,407 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A52370>
2024-03-17 15:45:27,407 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 15:45:27,407 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 15:45:27,407 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 15:45:27,407 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 15:45:27,407 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,407 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,407 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 15:45:27,407 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-17 15:45:27,407 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A52370>
2024-03-17 15:45:27,408 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 15:45:27,408 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 15:45:27,408 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-17 15:45:27,408 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A52370>
2024-03-17 15:45:27,408 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 15:45:27,408 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,408 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,408 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,408 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-17 15:45:27,408 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A52370>
2024-03-17 15:45:27,408 - DEBUG - on stmt: invert = const(bool, False)
2024-03-17 15:45:27,408 - DEBUG - on stmt: exp = b
2024-03-17 15:45:27,408 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,408 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-17 15:45:27,408 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A52370>
2024-03-17 15:45:27,408 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 15:45:27,408 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-17 15:45:27,409 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,409 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,409 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 15:45:27,409 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-17 15:45:27,409 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A52370>
2024-03-17 15:45:27,409 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 15:45:27,409 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 15:45:27,409 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 15:45:27,409 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,409 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,409 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 15:45:27,409 - DEBUG - on stmt: return $128return_value.7
2024-03-17 15:45:27,409 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-17 15:45:27,409 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A52370>
2024-03-17 15:45:27,410 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 15:45:27,410 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-17 15:45:27,410 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,410 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,410 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 15:45:27,410 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-17 15:45:27,410 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A52370>
2024-03-17 15:45:27,410 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 15:45:27,410 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-17 15:45:27,410 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,410 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,410 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 15:45:27,410 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-17 15:45:27,410 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A52370>
2024-03-17 15:45:27,410 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,410 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-17 15:45:27,411 - DEBUG - replaced with: r.1 = $150inplace_multiply.2
2024-03-17 15:45:27,411 - DEBUG - on stmt: jump 154
2024-03-17 15:45:27,411 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-17 15:45:27,411 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A52370>
2024-03-17 15:45:27,411 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 15:45:27,411 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,411 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-17 15:45:27,411 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,411 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-17 15:45:27,411 - DEBUG - on stmt: jump 130
2024-03-17 15:45:27,411 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-17 15:45:27,411 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A52370>
2024-03-17 15:45:27,411 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,411 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,411 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 15:45:27,411 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-17 15:45:27,412 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A52370>
2024-03-17 15:45:27,412 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 15:45:27,412 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-17 15:45:27,412 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 15:45:27,412 - DEBUG - on stmt: return $182return_value.3
2024-03-17 15:45:27,412 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-17 15:45:27,412 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A52370>
2024-03-17 15:45:27,412 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-17 15:45:27,412 - DEBUG - on stmt: return $186return_value.1
2024-03-17 15:45:27,412 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000207F8ADDAC0>],
             146: [<numba.core.ir.Assign object at 0x00000207F8AF0D00>]})
2024-03-17 15:45:27,412 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-17 15:45:27,412 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,412 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 15:45:27,412 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 15:45:27,412 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 15:45:27,412 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 15:45:27,412 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,412 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 15:45:27,412 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,412 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 15:45:27,412 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 15:45:27,412 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,413 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,413 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 15:45:27,413 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-17 15:45:27,413 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,413 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 15:45:27,413 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 15:45:27,413 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 15:45:27,413 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 15:45:27,413 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,413 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,413 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 15:45:27,413 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-17 15:45:27,413 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,413 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 15:45:27,413 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 15:45:27,413 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-17 15:45:27,414 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,414 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 15:45:27,414 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,414 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,414 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,414 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-17 15:45:27,414 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,414 - DEBUG - on stmt: invert = const(bool, False)
2024-03-17 15:45:27,414 - DEBUG - on stmt: exp = b
2024-03-17 15:45:27,414 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,414 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-17 15:45:27,414 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,414 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 15:45:27,414 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-17 15:45:27,414 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,414 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,415 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 15:45:27,415 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-17 15:45:27,415 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,415 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 15:45:27,415 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 15:45:27,415 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 15:45:27,415 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,415 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,415 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 15:45:27,415 - DEBUG - on stmt: return $128return_value.7
2024-03-17 15:45:27,415 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-17 15:45:27,415 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,415 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 15:45:27,415 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-17 15:45:27,416 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,416 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,416 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 15:45:27,416 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-17 15:45:27,416 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,416 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 15:45:27,416 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-17 15:45:27,416 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,416 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,416 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 15:45:27,416 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-17 15:45:27,416 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,416 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,416 - DEBUG - find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,416 - DEBUG - find_def_from_top label 146
2024-03-17 15:45:27,417 - DEBUG - idom 138 from label 146
2024-03-17 15:45:27,417 - DEBUG - find_def_from_bottom label 138
2024-03-17 15:45:27,417 - DEBUG - find_def_from_top label 138
2024-03-17 15:45:27,417 - DEBUG - idom 130 from label 138
2024-03-17 15:45:27,417 - DEBUG - find_def_from_bottom label 130
2024-03-17 15:45:27,417 - DEBUG - find_def_from_top label 130
2024-03-17 15:45:27,417 - DEBUG - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
2024-03-17 15:45:27,417 - DEBUG - find_def_from_bottom label 106
2024-03-17 15:45:27,417 - DEBUG - find_def_from_top label 106
2024-03-17 15:45:27,417 - DEBUG - idom 0 from label 106
2024-03-17 15:45:27,417 - DEBUG - find_def_from_bottom label 0
2024-03-17 15:45:27,417 - DEBUG - incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,417 - DEBUG - find_def_from_bottom label 154
2024-03-17 15:45:27,417 - DEBUG - find_def_from_top label 154
2024-03-17 15:45:27,417 - DEBUG - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
2024-03-17 15:45:27,417 - DEBUG - find_def_from_bottom label 138
2024-03-17 15:45:27,418 - DEBUG - find_def_from_top label 138
2024-03-17 15:45:27,418 - DEBUG - idom 130 from label 138
2024-03-17 15:45:27,418 - DEBUG - find_def_from_bottom label 130
2024-03-17 15:45:27,418 - DEBUG - incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:216)], incoming_blocks=[106])
2024-03-17 15:45:27,418 - DEBUG - find_def_from_bottom label 146
2024-03-17 15:45:27,418 - DEBUG - incoming_def r.1 = $150inplace_multiply.2
2024-03-17 15:45:27,418 - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-17 15:45:27,418 - DEBUG - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,418 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-17 15:45:27,418 - DEBUG - on stmt: jump 154
2024-03-17 15:45:27,418 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-17 15:45:27,418 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,418 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 15:45:27,419 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,419 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-17 15:45:27,419 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,419 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-17 15:45:27,419 - DEBUG - on stmt: jump 130
2024-03-17 15:45:27,419 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-17 15:45:27,419 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,419 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,419 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,419 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 15:45:27,419 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-17 15:45:27,419 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,419 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 15:45:27,419 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-17 15:45:27,420 - DEBUG - find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
2024-03-17 15:45:27,420 - DEBUG - find_def_from_top label 176
2024-03-17 15:45:27,420 - DEBUG - idom 172 from label 176
2024-03-17 15:45:27,420 - DEBUG - find_def_from_bottom label 172
2024-03-17 15:45:27,420 - DEBUG - find_def_from_top label 172
2024-03-17 15:45:27,420 - DEBUG - idom 130 from label 172
2024-03-17 15:45:27,420 - DEBUG - find_def_from_bottom label 130
2024-03-17 15:45:27,420 - DEBUG - replaced with: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-17 15:45:27,420 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 15:45:27,420 - DEBUG - on stmt: return $182return_value.3
2024-03-17 15:45:27,420 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-17 15:45:27,420 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,420 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-17 15:45:27,420 - DEBUG - find_def var='r' stmt=$186return_value.1 = cast(value=r)
2024-03-17 15:45:27,420 - DEBUG - find_def_from_top label 184
2024-03-17 15:45:27,420 - DEBUG - idom 172 from label 184
2024-03-17 15:45:27,421 - DEBUG - find_def_from_bottom label 172
2024-03-17 15:45:27,421 - DEBUG - find_def_from_top label 172
2024-03-17 15:45:27,421 - DEBUG - idom 130 from label 172
2024-03-17 15:45:27,421 - DEBUG - find_def_from_bottom label 130
2024-03-17 15:45:27,421 - DEBUG - replaced with: $186return_value.1 = cast(value=r.2)
2024-03-17 15:45:27,421 - DEBUG - on stmt: return $186return_value.1
2024-03-17 15:45:27,421 - DEBUG - Fix SSA violator on var a.1
2024-03-17 15:45:27,421 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-17 15:45:27,421 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,421 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 15:45:27,421 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 15:45:27,421 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 15:45:27,421 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 15:45:27,421 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,421 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 15:45:27,421 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,422 - DEBUG - first assign: a.1
2024-03-17 15:45:27,422 - DEBUG - replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,422 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 15:45:27,422 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 15:45:27,422 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,422 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,422 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 15:45:27,422 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-17 15:45:27,422 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,422 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 15:45:27,422 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 15:45:27,422 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 15:45:27,422 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 15:45:27,422 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,422 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,422 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 15:45:27,422 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-17 15:45:27,422 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,422 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 15:45:27,422 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 15:45:27,422 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-17 15:45:27,422 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,422 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 15:45:27,424 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,424 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,424 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,424 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-17 15:45:27,424 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,424 - DEBUG - on stmt: invert = const(bool, False)
2024-03-17 15:45:27,424 - DEBUG - on stmt: exp = b
2024-03-17 15:45:27,424 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,424 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-17 15:45:27,424 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,424 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 15:45:27,424 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-17 15:45:27,424 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,424 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,424 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 15:45:27,424 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-17 15:45:27,425 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,425 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 15:45:27,425 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 15:45:27,425 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 15:45:27,425 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,425 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,425 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 15:45:27,425 - DEBUG - on stmt: return $128return_value.7
2024-03-17 15:45:27,425 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-17 15:45:27,425 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,425 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
2024-03-17 15:45:27,425 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 15:45:27,425 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-17 15:45:27,425 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,425 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,426 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 15:45:27,426 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-17 15:45:27,426 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,426 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 15:45:27,426 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-17 15:45:27,426 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,426 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,426 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 15:45:27,426 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-17 15:45:27,426 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,426 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,426 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-17 15:45:27,426 - DEBUG - on stmt: jump 154
2024-03-17 15:45:27,426 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-17 15:45:27,426 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,426 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-17 15:45:27,427 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 15:45:27,427 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,427 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-17 15:45:27,427 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,427 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-17 15:45:27,427 - DEBUG - replaced with: a.1.1 = $166inplace_multiply.5
2024-03-17 15:45:27,427 - DEBUG - on stmt: jump 130
2024-03-17 15:45:27,427 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-17 15:45:27,427 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,427 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,427 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,427 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 15:45:27,427 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-17 15:45:27,427 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,427 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 15:45:27,427 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-17 15:45:27,428 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 15:45:27,428 - DEBUG - on stmt: return $182return_value.3
2024-03-17 15:45:27,428 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-17 15:45:27,428 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,428 - DEBUG - on stmt: $186return_value.1 = cast(value=r.2)
2024-03-17 15:45:27,428 - DEBUG - on stmt: return $186return_value.1
2024-03-17 15:45:27,428 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000207F8AF0100>],
             154: [<numba.core.ir.Assign object at 0x00000207F8A52820>]})
2024-03-17 15:45:27,428 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-17 15:45:27,428 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,428 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 15:45:27,428 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 15:45:27,428 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 15:45:27,428 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 15:45:27,428 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,428 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 15:45:27,429 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,429 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 15:45:27,429 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 15:45:27,429 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,429 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,429 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 15:45:27,429 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-17 15:45:27,429 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,429 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 15:45:27,429 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 15:45:27,429 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 15:45:27,429 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 15:45:27,429 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,429 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,429 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 15:45:27,430 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-17 15:45:27,430 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,430 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 15:45:27,430 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 15:45:27,430 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-17 15:45:27,430 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,430 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 15:45:27,430 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,430 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,430 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,430 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-17 15:45:27,430 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,430 - DEBUG - on stmt: invert = const(bool, False)
2024-03-17 15:45:27,430 - DEBUG - on stmt: exp = b
2024-03-17 15:45:27,430 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,430 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-17 15:45:27,431 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,431 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 15:45:27,431 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-17 15:45:27,431 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,431 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,431 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 15:45:27,431 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-17 15:45:27,431 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,431 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 15:45:27,431 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 15:45:27,431 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 15:45:27,431 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,431 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,431 - DEBUG - find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,432 - DEBUG - find_def_from_top label 114
2024-03-17 15:45:27,432 - DEBUG - idom 106 from label 114
2024-03-17 15:45:27,432 - DEBUG - find_def_from_bottom label 106
2024-03-17 15:45:27,432 - DEBUG - find_def_from_top label 106
2024-03-17 15:45:27,432 - DEBUG - idom 0 from label 106
2024-03-17 15:45:27,432 - DEBUG - find_def_from_bottom label 0
2024-03-17 15:45:27,432 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 15:45:27,432 - DEBUG - on stmt: return $128return_value.7
2024-03-17 15:45:27,432 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-17 15:45:27,432 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,432 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
2024-03-17 15:45:27,432 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 15:45:27,432 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-17 15:45:27,432 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,432 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,432 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 15:45:27,433 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-17 15:45:27,433 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,433 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 15:45:27,433 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-17 15:45:27,433 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,433 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,433 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 15:45:27,433 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-17 15:45:27,433 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,433 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,433 - DEBUG - find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,433 - DEBUG - find_def_from_top label 146
2024-03-17 15:45:27,433 - DEBUG - idom 138 from label 146
2024-03-17 15:45:27,433 - DEBUG - find_def_from_bottom label 138
2024-03-17 15:45:27,433 - DEBUG - find_def_from_top label 138
2024-03-17 15:45:27,433 - DEBUG - idom 130 from label 138
2024-03-17 15:45:27,433 - DEBUG - find_def_from_bottom label 130
2024-03-17 15:45:27,433 - DEBUG - find_def_from_top label 130
2024-03-17 15:45:27,433 - DEBUG - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
2024-03-17 15:45:27,433 - DEBUG - find_def_from_bottom label 106
2024-03-17 15:45:27,433 - DEBUG - find_def_from_top label 106
2024-03-17 15:45:27,433 - DEBUG - idom 0 from label 106
2024-03-17 15:45:27,433 - DEBUG - find_def_from_bottom label 0
2024-03-17 15:45:27,433 - DEBUG - incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,433 - DEBUG - find_def_from_bottom label 154
2024-03-17 15:45:27,434 - DEBUG - incoming_def a.1.1 = $166inplace_multiply.5
2024-03-17 15:45:27,434 - DEBUG - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,434 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-17 15:45:27,434 - DEBUG - on stmt: jump 154
2024-03-17 15:45:27,434 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-17 15:45:27,434 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,434 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-17 15:45:27,434 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 15:45:27,434 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,434 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-17 15:45:27,434 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,434 - DEBUG - find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,434 - DEBUG - find_def_from_top label 154
2024-03-17 15:45:27,435 - DEBUG - idom 138 from label 154
2024-03-17 15:45:27,435 - DEBUG - find_def_from_bottom label 138
2024-03-17 15:45:27,435 - DEBUG - find_def_from_top label 138
2024-03-17 15:45:27,435 - DEBUG - idom 130 from label 138
2024-03-17 15:45:27,435 - DEBUG - find_def_from_bottom label 130
2024-03-17 15:45:27,435 - DEBUG - replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,435 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-17 15:45:27,435 - DEBUG - on stmt: jump 130
2024-03-17 15:45:27,435 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-17 15:45:27,435 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,435 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,435 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,435 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 15:45:27,435 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-17 15:45:27,435 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,435 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 15:45:27,436 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-17 15:45:27,436 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 15:45:27,436 - DEBUG - on stmt: return $182return_value.3
2024-03-17 15:45:27,436 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-17 15:45:27,436 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8A52370>
2024-03-17 15:45:27,436 - DEBUG - on stmt: $186return_value.1 = cast(value=r.2)
2024-03-17 15:45:27,436 - DEBUG - on stmt: return $186return_value.1
2024-03-17 15:45:27,436 - DEBUG - Fix SSA violator on var exp
2024-03-17 15:45:27,436 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-17 15:45:27,436 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,436 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 15:45:27,436 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 15:45:27,436 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 15:45:27,436 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 15:45:27,436 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,437 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 15:45:27,437 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,437 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 15:45:27,437 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 15:45:27,437 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,437 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,437 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 15:45:27,437 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-17 15:45:27,437 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,437 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 15:45:27,437 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 15:45:27,437 - DEBUG - first assign: exp
2024-03-17 15:45:27,437 - DEBUG - replaced with: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 15:45:27,437 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 15:45:27,437 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 15:45:27,438 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,438 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,438 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 15:45:27,438 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-17 15:45:27,438 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,438 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 15:45:27,438 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 15:45:27,438 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-17 15:45:27,438 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,438 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 15:45:27,438 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,438 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,438 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,438 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-17 15:45:27,438 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,438 - DEBUG - on stmt: invert = const(bool, False)
2024-03-17 15:45:27,439 - DEBUG - on stmt: exp = b
2024-03-17 15:45:27,439 - DEBUG - replaced with: exp.1 = b
2024-03-17 15:45:27,439 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,439 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-17 15:45:27,439 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,439 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 15:45:27,439 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-17 15:45:27,439 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,439 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,439 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 15:45:27,439 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-17 15:45:27,439 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,439 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 15:45:27,439 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 15:45:27,439 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 15:45:27,440 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,440 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,440 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 15:45:27,440 - DEBUG - on stmt: return $128return_value.7
2024-03-17 15:45:27,440 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-17 15:45:27,440 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,440 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[106, 154])
2024-03-17 15:45:27,440 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
2024-03-17 15:45:27,440 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 15:45:27,440 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-17 15:45:27,440 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,440 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,440 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 15:45:27,440 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-17 15:45:27,441 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,441 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 15:45:27,441 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-17 15:45:27,441 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,441 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,441 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 15:45:27,441 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-17 15:45:27,441 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,441 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,441 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-17 15:45:27,441 - DEBUG - on stmt: jump 154
2024-03-17 15:45:27,441 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-17 15:45:27,441 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,441 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-17 15:45:27,441 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 15:45:27,441 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,442 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-17 15:45:27,442 - DEBUG - replaced with: exp.2 = $158inplace_rshift.2
2024-03-17 15:45:27,442 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,442 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-17 15:45:27,442 - DEBUG - on stmt: jump 130
2024-03-17 15:45:27,442 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-17 15:45:27,442 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,442 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,442 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,442 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 15:45:27,442 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-17 15:45:27,442 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,442 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 15:45:27,442 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-17 15:45:27,442 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 15:45:27,442 - DEBUG - on stmt: return $182return_value.3
2024-03-17 15:45:27,443 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-17 15:45:27,443 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8A8DF70>
2024-03-17 15:45:27,443 - DEBUG - on stmt: $186return_value.1 = cast(value=r.2)
2024-03-17 15:45:27,443 - DEBUG - on stmt: return $186return_value.1
2024-03-17 15:45:27,443 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x00000207F8A71D90>],
             98: [<numba.core.ir.Assign object at 0x00000207F8AF0BB0>],
             154: [<numba.core.ir.Assign object at 0x00000207F8B29160>]})
2024-03-17 15:45:27,443 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-17 15:45:27,443 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,443 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 15:45:27,443 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 15:45:27,443 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 15:45:27,443 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 15:45:27,443 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,443 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 15:45:27,443 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,443 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 15:45:27,443 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 15:45:27,443 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,443 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,443 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 15:45:27,443 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-17 15:45:27,443 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,443 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 15:45:27,445 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 15:45:27,445 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 15:45:27,445 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 15:45:27,445 - DEBUG - find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
2024-03-17 15:45:27,445 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,445 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,445 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 15:45:27,445 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-17 15:45:27,445 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,445 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 15:45:27,445 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 15:45:27,445 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-17 15:45:27,445 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,445 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 15:45:27,445 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,445 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,446 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,446 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-17 15:45:27,446 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,446 - DEBUG - on stmt: invert = const(bool, False)
2024-03-17 15:45:27,446 - DEBUG - on stmt: exp.1 = b
2024-03-17 15:45:27,446 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,446 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-17 15:45:27,446 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,446 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 15:45:27,446 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-17 15:45:27,446 - DEBUG - find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
2024-03-17 15:45:27,446 - DEBUG - find_def_from_top label 106
2024-03-17 15:45:27,446 - DEBUG - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
2024-03-17 15:45:27,446 - DEBUG - find_def_from_bottom label 48
2024-03-17 15:45:27,446 - DEBUG - find_def_from_top label 48
2024-03-17 15:45:27,447 - DEBUG - idom 26 from label 48
2024-03-17 15:45:27,447 - DEBUG - find_def_from_bottom label 26
2024-03-17 15:45:27,447 - DEBUG - incoming_def exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 15:45:27,447 - DEBUG - find_def_from_bottom label 98
2024-03-17 15:45:27,447 - DEBUG - incoming_def exp.1 = b
2024-03-17 15:45:27,447 - DEBUG - replaced with: $110compare_op.2 = exp.3 > $const108.1
2024-03-17 15:45:27,447 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,447 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,447 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 15:45:27,447 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-17 15:45:27,447 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,447 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 15:45:27,447 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 15:45:27,447 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 15:45:27,447 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,448 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,448 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 15:45:27,448 - DEBUG - on stmt: return $128return_value.7
2024-03-17 15:45:27,448 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-17 15:45:27,448 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,448 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[106, 154])
2024-03-17 15:45:27,448 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
2024-03-17 15:45:27,448 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 15:45:27,448 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-17 15:45:27,448 - DEBUG - find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
2024-03-17 15:45:27,448 - DEBUG - find_def_from_top label 130
2024-03-17 15:45:27,448 - DEBUG - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
2024-03-17 15:45:27,448 - DEBUG - find_def_from_bottom label 106
2024-03-17 15:45:27,448 - DEBUG - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
2024-03-17 15:45:27,449 - DEBUG - find_def_from_bottom label 154
2024-03-17 15:45:27,449 - DEBUG - incoming_def exp.2 = $158inplace_rshift.2
2024-03-17 15:45:27,449 - DEBUG - replaced with: $134compare_op.2 = exp.4 != $const132.1
2024-03-17 15:45:27,449 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,449 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,449 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 15:45:27,449 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-17 15:45:27,449 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,449 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 15:45:27,449 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-17 15:45:27,449 - DEBUG - find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
2024-03-17 15:45:27,449 - DEBUG - find_def_from_top label 138
2024-03-17 15:45:27,449 - DEBUG - idom 130 from label 138
2024-03-17 15:45:27,449 - DEBUG - find_def_from_bottom label 130
2024-03-17 15:45:27,449 - DEBUG - replaced with: $142binary_and.2 = exp.4 & $const140.1
2024-03-17 15:45:27,450 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,450 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,450 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 15:45:27,450 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-17 15:45:27,450 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,450 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,450 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-17 15:45:27,450 - DEBUG - on stmt: jump 154
2024-03-17 15:45:27,450 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-17 15:45:27,450 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,450 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-17 15:45:27,450 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 15:45:27,450 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,451 - DEBUG - find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,451 - DEBUG - find_def_from_top label 154
2024-03-17 15:45:27,451 - DEBUG - idom 138 from label 154
2024-03-17 15:45:27,451 - DEBUG - find_def_from_bottom label 138
2024-03-17 15:45:27,451 - DEBUG - find_def_from_top label 138
2024-03-17 15:45:27,451 - DEBUG - idom 130 from label 138
2024-03-17 15:45:27,451 - DEBUG - find_def_from_bottom label 130
2024-03-17 15:45:27,451 - DEBUG - replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,451 - DEBUG - on stmt: exp.2 = $158inplace_rshift.2
2024-03-17 15:45:27,451 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,451 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-17 15:45:27,451 - DEBUG - on stmt: jump 130
2024-03-17 15:45:27,451 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-17 15:45:27,451 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,451 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,451 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,452 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 15:45:27,452 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-17 15:45:27,452 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,452 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 15:45:27,452 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-17 15:45:27,452 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 15:45:27,452 - DEBUG - on stmt: return $182return_value.3
2024-03-17 15:45:27,452 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-17 15:45:27,452 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,452 - DEBUG - on stmt: $186return_value.1 = cast(value=r.2)
2024-03-17 15:45:27,452 - DEBUG - on stmt: return $186return_value.1
2024-03-17 15:45:27,452 - DEBUG - Fix SSA violator on var invert
2024-03-17 15:45:27,452 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-17 15:45:27,452 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8B29B20>
2024-03-17 15:45:27,452 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 15:45:27,452 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 15:45:27,452 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 15:45:27,453 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 15:45:27,453 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,453 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 15:45:27,453 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,453 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 15:45:27,453 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 15:45:27,453 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,453 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,453 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 15:45:27,453 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-17 15:45:27,453 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8B29B20>
2024-03-17 15:45:27,453 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 15:45:27,453 - DEBUG - first assign: invert
2024-03-17 15:45:27,453 - DEBUG - replaced with: invert = const(bool, True)
2024-03-17 15:45:27,454 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 15:45:27,454 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 15:45:27,454 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 15:45:27,454 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,454 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,454 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 15:45:27,454 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-17 15:45:27,454 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8B29B20>
2024-03-17 15:45:27,454 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 15:45:27,454 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 15:45:27,454 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-17 15:45:27,454 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8B29B20>
2024-03-17 15:45:27,454 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 15:45:27,454 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,454 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,454 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,454 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-17 15:45:27,454 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8B29B20>
2024-03-17 15:45:27,454 - DEBUG - on stmt: invert = const(bool, False)
2024-03-17 15:45:27,454 - DEBUG - replaced with: invert.1 = const(bool, False)
2024-03-17 15:45:27,454 - DEBUG - on stmt: exp.1 = b
2024-03-17 15:45:27,454 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,454 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-17 15:45:27,454 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8B29B20>
2024-03-17 15:45:27,454 - DEBUG - on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
2024-03-17 15:45:27,455 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 15:45:27,455 - DEBUG - on stmt: $110compare_op.2 = exp.3 > $const108.1
2024-03-17 15:45:27,455 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,455 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,455 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 15:45:27,455 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-17 15:45:27,455 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8B29B20>
2024-03-17 15:45:27,455 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 15:45:27,455 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 15:45:27,455 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 15:45:27,455 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,455 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,455 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 15:45:27,455 - DEBUG - on stmt: return $128return_value.7
2024-03-17 15:45:27,455 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-17 15:45:27,456 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8B29B20>
2024-03-17 15:45:27,456 - DEBUG - on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:234), Var(exp.2, numbers.py:240)], incoming_blocks=[106, 154])
2024-03-17 15:45:27,456 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[106, 154])
2024-03-17 15:45:27,456 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
2024-03-17 15:45:27,456 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 15:45:27,456 - DEBUG - on stmt: $134compare_op.2 = exp.4 != $const132.1
2024-03-17 15:45:27,456 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,456 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,456 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 15:45:27,456 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-17 15:45:27,456 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8B29B20>
2024-03-17 15:45:27,456 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 15:45:27,456 - DEBUG - on stmt: $142binary_and.2 = exp.4 & $const140.1
2024-03-17 15:45:27,456 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,456 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,457 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 15:45:27,457 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-17 15:45:27,457 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8B29B20>
2024-03-17 15:45:27,457 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,457 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-17 15:45:27,457 - DEBUG - on stmt: jump 154
2024-03-17 15:45:27,457 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-17 15:45:27,457 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8B29B20>
2024-03-17 15:45:27,457 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-17 15:45:27,457 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 15:45:27,457 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,457 - DEBUG - on stmt: exp.2 = $158inplace_rshift.2
2024-03-17 15:45:27,457 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,457 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-17 15:45:27,457 - DEBUG - on stmt: jump 130
2024-03-17 15:45:27,457 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-17 15:45:27,458 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8B29B20>
2024-03-17 15:45:27,458 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,458 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,458 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 15:45:27,458 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-17 15:45:27,458 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8B29B20>
2024-03-17 15:45:27,458 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 15:45:27,458 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-17 15:45:27,458 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 15:45:27,458 - DEBUG - on stmt: return $182return_value.3
2024-03-17 15:45:27,458 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-17 15:45:27,458 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000207F8B29B20>
2024-03-17 15:45:27,458 - DEBUG - on stmt: $186return_value.1 = cast(value=r.2)
2024-03-17 15:45:27,458 - DEBUG - on stmt: return $186return_value.1
2024-03-17 15:45:27,458 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x00000207F8B29520>],
             98: [<numba.core.ir.Assign object at 0x00000207F8AF0FD0>]})
2024-03-17 15:45:27,458 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-17 15:45:27,459 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,459 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 15:45:27,459 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 15:45:27,459 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 15:45:27,459 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 15:45:27,459 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,459 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 15:45:27,459 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,459 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 15:45:27,459 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 15:45:27,459 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,459 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,459 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 15:45:27,459 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-17 15:45:27,459 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,460 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 15:45:27,460 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 15:45:27,460 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 15:45:27,460 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 15:45:27,460 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,460 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,460 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 15:45:27,460 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-17 15:45:27,460 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,460 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 15:45:27,460 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 15:45:27,460 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-17 15:45:27,460 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,460 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 15:45:27,460 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,460 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,461 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,461 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-17 15:45:27,461 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,461 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-03-17 15:45:27,461 - DEBUG - on stmt: exp.1 = b
2024-03-17 15:45:27,461 - DEBUG - on stmt: jump 106
2024-03-17 15:45:27,461 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-17 15:45:27,461 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,461 - DEBUG - on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
2024-03-17 15:45:27,461 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 15:45:27,461 - DEBUG - on stmt: $110compare_op.2 = exp.3 > $const108.1
2024-03-17 15:45:27,461 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,461 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,461 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 15:45:27,461 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-17 15:45:27,462 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,462 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 15:45:27,462 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 15:45:27,462 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 15:45:27,462 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,462 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,462 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 15:45:27,462 - DEBUG - on stmt: return $128return_value.7
2024-03-17 15:45:27,462 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-17 15:45:27,462 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,462 - DEBUG - on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:234), Var(exp.2, numbers.py:240)], incoming_blocks=[106, 154])
2024-03-17 15:45:27,462 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[106, 154])
2024-03-17 15:45:27,462 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
2024-03-17 15:45:27,462 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 15:45:27,462 - DEBUG - on stmt: $134compare_op.2 = exp.4 != $const132.1
2024-03-17 15:45:27,463 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,463 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,463 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 15:45:27,463 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-17 15:45:27,463 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,463 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 15:45:27,463 - DEBUG - on stmt: $142binary_and.2 = exp.4 & $const140.1
2024-03-17 15:45:27,463 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,463 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,463 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 15:45:27,463 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-17 15:45:27,463 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,463 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,463 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-17 15:45:27,463 - DEBUG - on stmt: jump 154
2024-03-17 15:45:27,464 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-17 15:45:27,464 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,464 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-17 15:45:27,464 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 15:45:27,464 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,464 - DEBUG - on stmt: exp.2 = $158inplace_rshift.2
2024-03-17 15:45:27,464 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 15:45:27,464 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-17 15:45:27,464 - DEBUG - on stmt: jump 130
2024-03-17 15:45:27,464 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-17 15:45:27,464 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,464 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 15:45:27,464 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,464 - DEBUG - find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,464 - DEBUG - find_def_from_top label 172
2024-03-17 15:45:27,464 - DEBUG - idom 130 from label 172
2024-03-17 15:45:27,464 - DEBUG - find_def_from_bottom label 130
2024-03-17 15:45:27,464 - DEBUG - find_def_from_top label 130
2024-03-17 15:45:27,464 - DEBUG - idom 106 from label 130
2024-03-17 15:45:27,464 - DEBUG - find_def_from_bottom label 106
2024-03-17 15:45:27,464 - DEBUG - find_def_from_top label 106
2024-03-17 15:45:27,464 - DEBUG - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
2024-03-17 15:45:27,464 - DEBUG - find_def_from_bottom label 48
2024-03-17 15:45:27,464 - DEBUG - find_def_from_top label 48
2024-03-17 15:45:27,466 - DEBUG - idom 26 from label 48
2024-03-17 15:45:27,466 - DEBUG - find_def_from_bottom label 26
2024-03-17 15:45:27,466 - DEBUG - incoming_def invert = const(bool, True)
2024-03-17 15:45:27,466 - DEBUG - find_def_from_bottom label 98
2024-03-17 15:45:27,466 - DEBUG - incoming_def invert.1 = const(bool, False)
2024-03-17 15:45:27,466 - DEBUG - replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 15:45:27,466 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 15:45:27,466 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-17 15:45:27,466 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,466 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 15:45:27,466 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-17 15:45:27,466 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 15:45:27,466 - DEBUG - on stmt: return $182return_value.3
2024-03-17 15:45:27,466 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-17 15:45:27,466 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000207F8AF0E80>
2024-03-17 15:45:27,466 - DEBUG - on stmt: $186return_value.1 = cast(value=r.2)
2024-03-17 15:45:27,467 - DEBUG - on stmt: return $186return_value.1
2024-03-17 15:45:28,293 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'I have this list of activities and the distances in km between each activity. Write a new list that is divided into 5 days. And in each day, write to me which attractions and restaurants to go to. I need you to also take into account the distances so we won\'t have too long trips. Also, don\'t repeat attractions on separate days. Don\'t assume any activity as a starting point. Just give the plan and also try to combine restaurants and attractions. If there is a bit of travel that\'s also ok; we don\'t need the closest attractions each day.\n{\n  "Disneyland Paris to The Paris Catacombs": 32.80110144004549,\n  "Disneyland Paris to Paris Metro": 32.684022547216415,\n  "Disneyland Paris to Paris by Mouth": 30.799945337724896,\n  "Disneyland Paris to ExperienceFirst Paris": 35.50883264769889,\n  "Disneyland Paris to Galeries Lafayette Paris Haussmann": 32.53141784549738,\n  "Disneyland Paris to Big Bus Paris": 32.3797759916736,\n  "Disneyland Paris to Cathedrale Notre-Dame de Paris": 31.321236033727455,\n  "Disneyland Paris to Tootbus Paris": 32.77627945590598,\n  "Disneyland Paris to Le Marais": 30.639088676211195,\n  "Disneyland Paris to Bustronome Paris": 35.28497294348467,\n  "Disneyland Paris to Angelina": 32.81193185751909,\n  "Disneyland Paris to Gigi Paris": 34.663592706653525,\n  "Disneyland Paris to Ciel de Paris": 33.456387336478514,\n  "Disneyland Paris to Pizzamore Paris": 33.39250229551781,\n  "Disneyland Paris to L\' Entrecote de Paris": 34.406954756773665,\n  "Disneyland Paris to Alleno Paris": 33.71154987121834,\n  "Disneyland Paris to Cesar Paris": 35.13470607767775,\n  "Disneyland Paris to Au Vieux Paris": 31.284023794318788,\n  "Disneyland Paris to Cafe de Paris Friedland": 35.048801023686075,\n  "The Paris Catacombs to Paris Metro": 3.372620603318036,\n  "The Paris Catacombs to Paris by Mouth": 3.0531301756245743,\n  "The Paris Catacombs to ExperienceFirst Paris": 3.9138159360692506,\n  "The Paris Catacombs to Galeries Lafayette Paris Haussmann": 4.417402141360891,\n  "The Paris Catacombs to Big Bus Paris": 3.4943184898298627,\n  "The Paris Catacombs to Cathedrale Notre-Dame de Paris": 2.4761084770286255,\n  "The Paris Catacombs to Tootbus Paris": 4.312099393643011,\n  "The Paris Catacombs to Le Marais": 3.3659888121479122,\n  "The Paris Catacombs to Bustronome Paris": 5.180370796928894,\n  "The Paris Catacombs to Angelina": 3.4820107656173906,\n  "The Paris Catacombs to Gigi Paris": 4.140237737557739,\n  "The Paris Catacombs to Ciel de Paris": 1.2187307506947427,\n  "The Paris Catacombs to Pizzamore Paris": 0.6477589652253624,\n  "The Paris Catacombs to L\' Entrecote de Paris": 4.432371066291403,\n  "The Paris Catacombs to Alleno Paris": 3.777474584284487,\n  "The Paris Catacombs to Cesar Paris": 5.358550805964063,\n  "The Paris Catacombs to Au Vieux Paris": 2.6032097872526796,\n  "The Paris Catacombs to Cafe de Paris Friedland": 5.13799951074261,\n  "Paris Metro to Paris by Mouth": 2.1169747438443167,\n  "Paris Metro to ExperienceFirst Paris": 2.907091424120088,\n  "Paris Metro to Galeries Lafayette Paris Haussmann": 1.0574715158421877,\n  "Paris Metro to Big Bus Paris": 0.3248729064842512,\n  "Paris Metro to Cathedrale Notre-Dame de Paris": 1.8924265314669195,\n  "Paris Metro to Tootbus Paris": 0.9411324141573623,\n  "Paris Metro to Le Marais": 2.1560088227513807,\n  "Paris Metro to Bustronome Paris": 2.8026015517980403,\n  "Paris Metro to Angelina": 0.16534268170032096,\n  "Paris Metro to Gigi Paris": 1.9924764450705466,\n  "Paris Metro to Ciel de Paris": 2.5015249604006846,\n  "Paris Metro to Pizzamore Paris": 3.216365562619749,\n  "Paris Metro to L\' Entrecote de Paris": 1.8496430359505345,\n  "Paris Metro to Alleno Paris": 1.0558390604425805,\n  "Paris Metro to Cesar Paris": 2.7879037322166837,\n  "Paris Metro to Au Vieux Paris": 1.8316262101741727,\n  "Paris Metro to Cafe de Paris Friedland": 2.620823723548882,\n  "Paris by Mouth to ExperienceFirst Paris": 4.721112044990717,\n  "Paris by Mouth to Galeries Lafayette Paris Haussmann": 2.629240856739762,\n  "Paris by Mouth to Big Bus Paris": 1.908853383855786,\n  "Paris by Mouth to Cathedrale Notre-Dame de Paris": 0.6168105844707071,\n  "Paris by Mouth to Tootbus Paris": 2.724713177758204,\n  "Paris by Mouth to Le Marais": 0.31560665321500075,\n  "Paris by Mouth to Bustronome Paris": 4.917319861306946,\n  "Paris by Mouth to Angelina": 2.278296292498615,\n  "Paris by Mouth to Gigi Paris": 4.049849384646553,\n  "Paris by Mouth to Ciel de Paris": 2.97231988112219,\n  "Paris by Mouth to Pizzamore Paris": 3.3179560029907864,\n  "Paris by Mouth to L\' Entrecote de Paris": 3.963764357905405,\n  "Paris by Mouth to Alleno Paris": 3.1553670318420552,\n  "Paris by Mouth to Cesar Paris": 4.90282537419872,\n  "Paris by Mouth to Au Vieux Paris": 0.5245757121825863,\n  "Paris by Mouth to Cafe de Paris Friedland": 4.7377881358505025,\n  "ExperienceFirst Paris to Galeries Lafayette Paris Haussmann": 3.4667080746132535,\n  "ExperienceFirst Paris to Big Bus Paris": 3.2302696974905394,\n  "ExperienceFirst Paris to Cathedrale Notre-Dame de Paris": 4.245107862212652,\n  "ExperienceFirst Paris to Tootbus Paris": 3.199249172898984,\n  "ExperienceFirst Paris to Le Marais": 4.869971586673072,\n  "ExperienceFirst Paris to Bustronome Paris": 1.8152991033641865,\n  "ExperienceFirst Paris to Angelina": 2.8122861403707833,\n  "ExperienceFirst Paris to Gigi Paris": 1.266532466871863,\n  "ExperienceFirst Paris to Ciel de Paris": 2.7203902242390945,\n  "ExperienceFirst Paris to Pizzamore Paris": 3.334320613331561,\n  "ExperienceFirst Paris to L\' Entrecote de Paris": 1.7862027020632905,\n  "ExperienceFirst Paris to Alleno Paris": 2.033186027441196,\n  "ExperienceFirst Paris to Cesar Paris": 2.130300359835465,\n  "ExperienceFirst Paris to Au Vieux Paris": 4.261654944434227,\n  "ExperienceFirst Paris to Cafe de Paris Friedland": 1.943875728684314,\n  "Galeries Lafayette Paris Haussmann to Big Bus Paris": 0.9401953036179314,\n  "Galeries Lafayette Paris Haussmann to Cathedrale Notre-Dame de Paris": 2.629040554954871,\n  "Galeries Lafayette Paris Haussmann to Tootbus Paris": 0.2698796882921996,\n  "Galeries Lafayette Paris Haussmann to Le Marais": 2.540120032002544,\n  "Galeries Lafayette Paris Haussmann to Bustronome Paris": 2.7539364912864546,\n  "Galeries Lafayette Paris Haussmann to Angelina": 0.9847310232308183,\n  "Galeries Lafayette Paris Haussmann to Gigi Paris": 2.296010875953188,\n  "Galeries Lafayette Paris Haussmann to Ciel de Paris": 3.553924428813548,\n  "Galeries Lafayette Paris Haussmann to Pizzamore Paris": 4.273764609581506,\n  "Galeries Lafayette Paris Haussmann to L\' Entrecote de Paris": 1.9182223038398425,\n  "Galeries Lafayette Paris Haussmann to Alleno Paris": 1.4373061402463398,\n  "Galeries Lafayette Paris Haussmann to Cesar Paris": 2.6144314937056023,\n  "Galeries Lafayette Paris Haussmann to Au Vieux Paris": 2.5305094023482373,\n  "Galeries Lafayette Paris Haussmann to Cafe de Paris Friedland": 2.517760884740017,\n  "Big Bus Paris to Cathedrale Notre-Dame de Paris": 1.7698565247464508,\n  "Big Bus Paris to Tootbus Paris": 0.9091809460858644,\n  "Big Bus Paris to Le Marais": 1.9116483407781064,\n  "Big Bus Paris to Bustronome Paris": 3.0475797506134956,\n  "Big Bus Paris to Angelina": 0.4322681627156371,\n  "Big Bus Paris to Gigi Paris": 2.286371141492141,\n  "Big Bus Paris to Ciel de Paris": 2.706704767519477,\n  "Big Bus Paris to Pizzamore Paris": 3.3924260229494467,\n  "Big Bus Paris to L\' Entrecote de Paris": 2.1012015816480907,\n  "Big Bus Paris to Alleno Paris": 1.3377250378142491,\n  "Big Bus Paris to Cesar Paris": 3.0068685824358528,\n  "Big Bus Paris to Au Vieux Paris": 1.6902468582942065,\n  "Big Bus Paris to Cafe de Paris Friedland": 2.852539365270569,\n  "Cathedrale Notre-Dame de Paris to Tootbus Paris": 2.6639181879022393,\n  "Cathedrale Notre-Dame de Paris to Le Marais": 0.9102400625581337,\n  "Cathedrale Notre-Dame de Paris to Bustronome Paris": 4.626352471870866,\n  "Cathedrale Notre-Dame de Paris to Angelina": 2.0575080420659586,\n  "Cathedrale Notre-Dame de Paris to Gigi Paris": 3.694353429442807,\n  "Cathedrale Notre-Dame de Paris to Ciel de Paris": 2.358180086337543,\n  "Cathedrale Notre-Dame de Paris to Pizzamore Paris": 2.708294711696242,\n  "Cathedrale Notre-Dame de Paris to L\' Entrecote de Paris": 3.6802546793401305,\n  "Cathedrale Notre-Dame de Paris to Alleno Paris": 2.860475520626834,\n  "Cathedrale Notre-Dame de Paris to Cesar Paris": 4.650655594707013,\n  "Cathedrale Notre-Dame de Paris to Au Vieux Paris": 0.13376492011967347,\n  "Cathedrale Notre-Dame de Paris to Cafe de Paris Friedland": 4.469071123114463,\n  "Tootbus Paris to Le Marais": 2.664227943000955,\n  "Tootbus Paris to Bustronome Paris": 2.509731712468602,\n  "Tootbus Paris to Angelina": 0.8342813021669022,\n  "Tootbus Paris to Gigi Paris": 2.026410975717287,\n  "Tootbus Paris to Ciel de Paris": 3.3981561516002667,\n  "Tootbus Paris to Pizzamore Paris": 4.1332911140406265,\n  "Tootbus Paris to L\' Entrecote de Paris": 1.6557773724126694,\n  "Tootbus Paris to Alleno Paris": 1.173039164914639,\n  "Tootbus Paris to Cesar Paris": 2.3857391878906027,\n  "Tootbus Paris to Au Vieux Paris": 2.575185465052892,\n  "Tootbus Paris to Cafe de Paris Friedland": 2.2782574138521583,\n  "Le Marais to Bustronome Paris": 4.954151727935866,\n  "Le Marais to Angelina": 2.310591675154564,\n  "Le Marais to Gigi Paris": 4.128918867516721,\n  "Le Marais to Ciel de Paris": 3.2463048484968047,\n  "Le Marais to Pizzamore Paris": 3.6184721909730193,\n  "Le Marais to L\' Entrecote de Paris": 4.003164897571229,\n  "Le Marais to Alleno Paris": 3.20980221846619,\n  "Le Marais to Cesar Paris": 4.918353347337914,\n  "Le Marais to Au Vieux Paris": 0.8011203964187439,\n  "Le Marais to Cafe de Paris Friedland": 4.763366671165435,\n  "Bustronome Paris to Angelina": 2.644614281001149,\n  "Bustronome Paris to Gigi Paris": 1.044666061531068,\n  "Bustronome Paris to Ciel de Paris": 3.9731067547152294,\n  "Bustronome Paris to Pizzamore Paris": 4.710239704642215,\n  "Bustronome Paris to L\' Entrecote de Paris": 0.9535592356311227,\n  "Bustronome Paris to Alleno Paris": 1.7686787814264198,\n  "Bustronome Paris to Cesar Paris": 0.33441644591755487,\n  "Bustronome Paris to Au Vieux Paris": 4.589270858169583,\n  "Bustronome Paris to Cafe de Paris Friedland": 0.2538192658821321,\n  "Angelina to Gigi Paris": 1.8554782034324675,\n  "Angelina to Ciel de Paris": 2.5719357669215994,\n  "Angelina to Pizzamore Paris": 3.300737624866311,\n  "Angelina to L\' Entrecote de Paris": 1.69268344908175,\n  "Angelina to Alleno Paris": 0.9099798620123638,\n  "Angelina to Cesar Paris": 2.6251226939762597,\n  "Angelina to Au Vieux Paris": 1.9969666879188261,\n  "Angelina to Cafe de Paris Friedland": 2.4599329935402565,\n  "Gigi Paris to Ciel de Paris": 2.938623857273072,\n  "Gigi Paris to Pizzamore Paris": 3.685677828353672,\n  "Gigi Paris to L\' Entrecote de Paris": 0.5272662636340256,\n  "Gigi Paris to Alleno Paris": 0.9522563569700311,\n  "Gigi Paris to Cesar Paris": 1.2280258733850151,\n  "Gigi Paris to Au Vieux Paris": 3.6726846545212792,\n  "Gigi Paris to Cafe de Paris Friedland": 1.005802925393003,\n  "Ciel de Paris to Pizzamore Paris": 0.7725712201474045,\n  "Ciel de Paris to L\' Entrecote de Paris": 3.262898472674238,\n  "Ciel de Paris to Alleno Paris": 2.6741577310137474,\n  "Ciel de Paris to Cesar Paris": 4.163528238207847,\n  "Ciel de Paris to Au Vieux Paris": 2.4501872906393185,\n  "Ciel de Paris to Cafe de Paris Friedland": 3.9418665201959757,\n  "Pizzamore Paris to L\' Entrecote de Paris": 4.027976145019418,\n  "Pizzamore Paris to Alleno Paris": 3.4462858589638645,\n  "Pizzamore Paris to Cesar Paris": 4.91341431380209,\n  "Pizzamore Paris to Au Vieux Paris": 2.8225675529569396,\n  "Pizzamore Paris to Cafe de Paris Friedland": 4.691274816043175,\n  "L\' Entrecote de Paris to Alleno Paris": 0.8197935535129931,\n  "L\' Entrecote de Paris to Cesar Paris": 0.9866196293961914,\n  "L\' Entrecote de Paris to Au Vieux Paris": 3.639921354269068,\n  "L\' Entrecote de Paris to Cafe de Paris Friedland": 0.7911466966775377,\n  "Alleno Paris to Cesar Paris": 1.7975427155622292,\n  "Alleno Paris to Au Vieux Paris": 2.8209771240371686,\n  "Alleno Paris to Cafe de Paris Friedland": 1.6096716506820443,\n  "Cesar Paris to Au Vieux Paris": 4.604385292643804,\n  "Cesar Paris to Cafe de Paris Friedland": 0.22223684038873998,\n  "Au Vieux Paris to Cafe de Paris Friedland": 4.426433741377855\n}'}], 'model': 'gpt-3.5-turbo'}}
2024-03-17 15:45:28,294 - DEBUG - close.started
2024-03-17 15:45:28,294 - DEBUG - close.complete
2024-03-17 15:45:28,294 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 15:45:28,332 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000207E11CC8E0>
2024-03-17 15:45:28,332 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1080BC0> server_hostname='api.openai.com' timeout=5.0
2024-03-17 15:45:28,352 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000207E11CCB20>
2024-03-17 15:45:28,352 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-17 15:45:28,352 - DEBUG - send_request_headers.complete
2024-03-17 15:45:28,352 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-17 15:45:28,352 - DEBUG - send_request_body.complete
2024-03-17 15:45:28,352 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-17 15:45:30,660 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:45:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0125'), (b'openai-organization', b'reichman-university-wxioss'), (b'openai-processing-ms', b'1875'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'996910'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'185ms'), (b'x-request-id', b'req_4013fbc8fbd45333c2c49c3b6f449ff1'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'865d6c721ffd09bd-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 15:45:30,660 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-03-17 15:45:30,660 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-17 15:45:30,660 - DEBUG - receive_response_body.complete
2024-03-17 15:45:30,660 - DEBUG - response_closed.started
2024-03-17 15:45:30,660 - DEBUG - response_closed.complete
2024-03-17 15:45:30,660 - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-03-17 15:45:30,662 - INFO - Destination: Paris
    Budget: 5000
    Dates: From 2024-03-19 to 2024-03-24
    Flights Info: {'search_metadata': {'id': '65f6f3dbaf6304338c3a47ea', 'status': 'Success', 'json_endpoint': 'https://serpapi.com/searches/3695f5cc3d3c0112/65f6f3dbaf6304338c3a47ea.json', 'created_at': '2024-03-17 13:44:59 UTC', 'processed_at': '2024-03-17 13:44:59 UTC', 'google_flights_url': 'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&q=Flights+to+CDG+from+TLV+on+2024-03-19+through+2024-03-24', 'raw_html_file': 'https://serpapi.com/searches/3695f5cc3d3c0112/65f6f3dbaf6304338c3a47ea.html', 'prettify_html_file': 'https://serpapi.com/searches/3695f5cc3d3c0112/65f6f3dbaf6304338c3a47ea.prettify', 'total_time_taken': 1.43}, 'search_parameters': {'engine': 'google_flights', 'hl': 'en', 'gl': 'us', 'departure_id': 'TLV', 'arrival_id': 'CDG', 'outbound_date': '2024-03-19', 'return_date': '2024-03-24', 'currency': 'USD'}, 'best_flights': [{'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-03-19 05:50'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-03-19 09:55'}, 'duration': 305, 'airplane': 'Boeing 737', 'airline': 'El Al', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'travel_class': 'Economy', 'flight_number': 'LY 319', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat power & USB outlets', 'Stream media to your device', 'Carbon emissions estimate: 273 kg']}], 'total_duration': 305, 'carbon_emissions': {'this_flight': 273000, 'typical_for_this_route': 273000, 'difference_percent': 0}, 'price': 605, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'extensions': ['Checked baggage not included in price', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ1ZNV1RNeE9Sb0xDTlRZQXhBQ0dnTlZVMFE0SEhEVTJBTT0iLFtbIlRMViIsIjIwMjQtMDMtMTkiLCJDREciLG51bGwsIkxZIiwiMzE5Il1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-03-19 13:20'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-03-19 17:25'}, 'duration': 305, 'airplane': 'Boeing 737', 'airline': 'El Al', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'travel_class': 'Economy', 'flight_number': 'LY 327', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'In-seat USB outlet', 'Stream media to your device', 'Carbon emissions estimate: 273 kg']}], 'total_duration': 305, 'carbon_emissions': {'this_flight': 274000, 'typical_for_this_route': 273000, 'difference_percent': 0}, 'price': 605, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'extensions': ['Checked baggage not included in price', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ1ZNV1RNeU54b0xDTlRZQXhBQ0dnTlZVMFE0SEhEVTJBTT0iLFtbIlRMViIsIjIwMjQtMDMtMTkiLCJDREciLG51bGwsIkxZIiwiMzI3Il1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-03-19 16:50'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-03-19 20:55'}, 'duration': 305, 'airplane': 'Boeing 737', 'airline': 'El Al', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'travel_class': 'Economy', 'flight_number': 'LY 325', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat power & USB outlets', 'Stream media to your device', 'Carbon emissions estimate: 273 kg']}], 'total_duration': 305, 'carbon_emissions': {'this_flight': 273000, 'typical_for_this_route': 273000, 'difference_percent': 0}, 'price': 660, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'extensions': ['Checked baggage for a fee', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ1ZNV1RNeU5Sb0xDUHVDQkJBQ0dnTlZVMFE0SEhEN2dnUT0iLFtbIlRMViIsIjIwMjQtMDMtMTkiLCJDREciLG51bGwsIkxZIiwiMzI1Il1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-03-19 09:00'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-03-19 13:00'}, 'duration': 300, 'airplane': 'Boeing 787', 'airline': 'El Al', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'travel_class': 'Economy', 'flight_number': 'LY 323', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 272 kg']}], 'total_duration': 300, 'carbon_emissions': {'this_flight': 273000, 'typical_for_this_route': 273000, 'difference_percent': 0}, 'price': 661, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'extensions': ['Checked baggage for a fee', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ1ZNV1RNeU14b0xDT2lEQkJBQ0dnTlZVMFE0SEhEb2d3UT0iLFtbIlRMViIsIjIwMjQtMDMtMTkiLCJDREciLG51bGwsIkxZIiwiMzIzIl1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-03-19 15:55'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-03-19 19:40'}, 'duration': 285, 'airplane': 'Airbus A350', 'airline': 'Air France', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/AF.png', 'travel_class': 'Economy', 'flight_number': 'AF 963', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 209 kg']}], 'total_duration': 285, 'carbon_emissions': {'this_flight': 210000, 'typical_for_this_route': 273000, 'difference_percent': -23}, 'price': 760, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/AF.png', 'extensions': ['Checked baggage for a fee', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ1ZCUmprMk14b0xDSzdSQkJBQ0dnTlZVMFE0SEhDdTBRUT0iLFtbIlRMViIsIjIwMjQtMDMtMTkiLCJDREciLG51bGwsIkFGIiwiOTYzIl1dXQ=='}], 'other_flights': [{'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-03-19 20:00'}, 'arrival_airport': {'name': 'Larnaca International Airport', 'id': 'LCA', 'time': '2024-03-19 21:05'}, 'duration': 65, 'airline': 'El Al', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'travel_class': 'Economy', 'flight_number': 'LY 5133', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat power & USB outlets', 'Stream media to your device', 'Carbon emissions estimate: 58 kg']}, {'departure_airport': {'name': 'Larnaca International Airport', 'id': 'LCA', 'time': '2024-03-20 07:30'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-03-20 11:10'}, 'duration': 280, 'airline': 'Cyprus Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/CY.png', 'travel_class': 'Economy', 'flight_number': 'CY 380', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'In-seat USB outlet', 'Carbon emissions estimate: 249 kg']}], 'layovers': [{'duration': 625, 'name': 'Larnaca International Airport', 'id': 'LCA', 'overnight': True}], 'total_duration': 970, 'carbon_emissions': {'this_flight': 309000, 'typical_for_this_route': 273000, 'difference_percent': 13}, 'price': 590, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'extensions': ['Checked baggage for a fee', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ3hNV1RVeE16TjhRMWt6T0RBYUN3aSt6QU1RQWhvRFZWTkVPQnh3dnN3RCIsW1siVExWIiwiMjAyNC0wMy0xOSIsIkxDQSIsbnVsbCwiTFkiLCI1MTMzIl0sWyJMQ0EiLCIyMDI0LTAzLTIwIiwiQ0RHIixudWxsLCJDWSIsIjM4MCJdXV0='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-03-19 15:40'}, 'arrival_airport': {'name': 'Vienna International Airport', 'id': 'VIE', 'time': '2024-03-19 18:25'}, 'duration': 225, 'airplane': 'Airbus A321', 'airline': 'Austrian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OS.png', 'travel_class': 'Economy', 'flight_number': 'OS 858', 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'Carbon emissions estimate: 227 kg'], 'often_delayed_by_over_30_min': True}, {'departure_airport': {'name': 'Vienna International Airport', 'id': 'VIE', 'time': '2024-03-19 20:25'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-03-19 22:30'}, 'duration': 125, 'airplane': 'Airbus A320', 'airline': 'Austrian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OS.png', 'travel_class': 'Economy', 'flight_number': 'OS 419', 'legroom': '28 in', 'extensions': ['Below average legroom (28 in)', 'In-seat USB outlet', 'Carbon emissions estimate: 116 kg']}], 'layovers': [{'duration': 120, 'name': 'Vienna International Airport', 'id': 'VIE'}], 'total_duration': 470, 'carbon_emissions': {'this_flight': 344000, 'typical_for_this_route': 273000, 'difference_percent': 26}, 'price': 617, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OS.png', 'extensions': ['Checked baggage for a fee', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ3RQVXpnMU9IeFBVelF4T1JvTENLemhBeEFDR2dOVlUwUTRISENzNFFNPSIsW1siVExWIiwiMjAyNC0wMy0xOSIsIlZJRSIsbnVsbCwiT1MiLCI4NTgiXSxbIlZJRSIsIjIwMjQtMDMtMTkiLCJDREciLG51bGwsIk9TIiwiNDE5Il1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-03-19 09:20'}, 'arrival_airport': {'name': 'Bucharest Henri Coandă International Airport', 'id': 'OTP', 'time': '2024-03-19 12:15'}, 'duration': 175, 'airline': 'Wizz Air', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/W4.png', 'travel_class': 'Economy', 'flight_number': 'W4 3258', 'legroom': '28 in', 'extensions': ['Below average legroom (28 in)', 'Carbon emissions estimate: 134 kg']}, {'departure_airport': {'name': 'Bucharest Henri Coandă International Airport', 'id': 'OTP', 'time': '2024-03-19 13:10'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-03-19 15:30'}, 'duration': 200, 'airplane': 'Boeing 737', 'airline': 'TAROM', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/RO.png', 'travel_class': 'Economy', 'flight_number': 'RO 383', 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'Carbon emissions estimate: 149 kg']}], 'layovers': [{'duration': 55, 'name': 'Bucharest Henri Coandă International Airport', 'id': 'OTP'}], 'total_duration': 430, 'carbon_emissions': {'this_flight': 284000, 'typical_for_this_route': 273000, 'difference_percent': 4}, 'price': 653, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'extensions': ['Checked baggage for a fee', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ3hYTkRNeU5UaDhVazh6T0RNYUN3anQvUU1RQWhvRFZWTkVPQnh3N2YwRCIsW1siVExWIiwiMjAyNC0wMy0xOSIsIk9UUCIsbnVsbCwiVzQiLCIzMjU4Il0sWyJPVFAiLCIyMDI0LTAzLTE5IiwiQ0RHIixudWxsLCJSTyIsIjM4MyJdXV0='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-03-19 05:35'}, 'arrival_airport': {'name': 'Václav Havel Airport Prague', 'id': 'PRG', 'time': '2024-03-19 08:40'}, 'duration': 245, 'airplane': 'Boeing 737', 'airline': 'Smartwings', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QS.png', 'travel_class': 'Economy', 'flight_number': 'QS 1287', 'ticket_also_sold_by': ['CSA'], 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'Stream media to your device', 'Carbon emissions estimate: 201 kg']}, {'departure_airport': {'name': 'Václav Havel Airport Prague', 'id': 'PRG', 'time': '2024-03-19 12:25'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-03-19 14:15'}, 'duration': 110, 'airplane': 'Airbus A320', 'airline': 'CSA', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OK.png', 'travel_class': 'Economy', 'flight_number': 'OK 760', 'ticket_also_sold_by': ['Smartwings'], 'legroom': '28 in', 'extensions': ['Below average legroom (28 in)', 'Carbon emissions estimate: 89 kg']}], 'layovers': [{'duration': 225, 'name': 'Václav Havel Airport Prague', 'id': 'PRG'}], 'total_duration': 580, 'carbon_emissions': {'this_flight': 291000, 'typical_for_this_route': 273000, 'difference_percent': 7}, 'price': 655, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'extensions': ['Checked baggage not included in price', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ3hSVXpFeU9EZDhUMHMzTmpBYUN3aWwvd01RQWhvRFZWTkVPQnh3cGY4RCIsW1siVExWIiwiMjAyNC0wMy0xOSIsIlBSRyIsbnVsbCwiUVMiLCIxMjg3Il0sWyJQUkciLCIyMDI0LTAzLTE5IiwiQ0RHIixudWxsLCJPSyIsIjc2MCJdXV0='}], 'price_insights': {'lowest_price': 590, 'price_level': 'high', 'typical_price_range': [190, 430], 'price_history': [[1705442400, 120], [1705528800, 120], [1705615200, 120], [1705701600, 120], [1705788000, 120], [1705874400, 120], [1705960800, 148], [1706047200, 153], [1706133600, 153], [1706220000, 154], [1706306400, 161], [1706392800, 166], [1706479200, 165], [1706565600, 160], [1706652000, 159], [1706738400, 169], [1706824800, 169], [1706911200, 182], [1706997600, 202], [1707084000, 205], [1707170400, 211], [1707256800, 215], [1707343200, 227], [1707429600, 232], [1707516000, 243], [1707602400, 248], [1707688800, 248], [1707775200, 248], [1707861600, 248], [1707948000, 248], [1708034400, 248], [1708120800, 248], [1708207200, 248], [1708293600, 248], [1708380000, 248], [1708466400, 248], [1708552800, 248], [1708639200, 248], [1708725600, 248], [1708812000, 248], [1708898400, 248], [1708984800, 248], [1709071200, 248], [1709157600, 248], [1709244000, 248], [1709330400, 289], [1709416800, 403], [1709503200, 442], [1709589600, 488], [1709676000, 477], [1709762400, 462], [1709848800, 487], [1709935200, 481], [1710021600, 466], [1710108000, 469], [1710194400, 539], [1710280800, 536], [1710367200, 551], [1710453600, 556], [1710540000, 555], [1710626400, 590]]}}
    Accommodation Info: Top Hotels:
1. Studio Marais Belle Epoque
- Check-in Time: 2:00 PM
- Check-out Time: 11:00 AM
- Rate Per Night (Lowest): $155
- Total Rate (Lowest): $776
- Nearby Places: Gare de l'Est, Paris Charles de Gaulle Airport, Café de la Poste

2. Hôtel Louvre Saint-Honoré
- Check-in Time: 2:00 PM
- Check-out Time: 12:00 PM
- Rate Per Night (Lowest): $306
- Total Rate (Lowest): $1,531
- Nearby Places: Louvre Museum, Saint-Michel Notre-Dame, Paris Charles de Gaulle Airport

3. Hôtel Maison Mère
- Check-in Time: 3:00 PM
- Check-out Time: 12:00 PM
- Rate Per Night (Lowest): $308
- Total Rate (Lowest): $1,541
- Nearby Places: Palais Garnier, Cadet, Paris Charles de Gaulle Airport, Les Anges Gourmands

4. Warwick Paris
- Check-in Time: 3:00 PM
- Check-out Time: 12:00 PM
- Rate Per Night (Lowest): $283
- Total Rate (Lowest): $1,414
- Nearby Places: Arc de Triomphe, George V, Paris Charles de Gaulle Airport, Cacao Restaurant Paris

5. Courtyard by Marriott Paris Gare de Lyon
- Check-in Time: 3:00 PM
- Check-out Time: 12:00 PM
- Rate Per Night (Lowest): $298
- Total Rate (Lowest): $1,492
- Nearby Places: Gare de Lyon, Paris Charles de Gaulle Airport, Mangiamo italiano
    how to arrange the activities: Day 1:
- Visit Disneyland Paris
- Lunch at Angelina
- Dinner at Ciel de Paris

Day 2:
- Visit The Paris Catacombs
- Lunch at Pizzamore Paris
- Dinner at L' Entrecote de Paris

Day 3:
- Visit Paris Metro
- Lunch at Gigi Paris
- Dinner at Alleno Paris

Day 4:
- Visit Le Marais
- Lunch at Bustronome Paris
- Dinner at Au Vieux Paris

Day 5:
- Visit Galeries Lafayette Paris Haussmann
- Lunch at Big Bus Paris
- Dinner at Cafe de Paris Friedland
    Activities Info: [{'location_id': '189258', 'name': 'Disneyland Paris', 'address_obj': {'street1': 'Boulevard de Parc', 'street2': '', 'city': 'Marne-la-Vallee', 'country': 'France', 'postalcode': '77700', 'address_string': 'Boulevard de Parc, 77700, Marne-la-Vallee France'}}, {'location_id': '189229', 'name': 'The Paris Catacombs', 'address_obj': {'street1': '1 Avenue du Colonel Henri Rol-Tanguy', 'city': 'Paris', 'country': 'France', 'postalcode': '75014', 'address_string': '1 Avenue du Colonel Henri Rol-Tanguy, 75014 Paris France'}}, {'location_id': '2323543', 'name': 'Paris Metro', 'address_obj': {'street2': '', 'city': 'Paris', 'country': 'France', 'address_string': 'Paris France'}}, {'location_id': '2613395', 'name': 'Paris by Mouth', 'address_obj': {'city': 'Paris', 'country': 'France', 'postalcode': '75004', 'address_string': '75004 Paris France'}}, {'location_id': '12103860', 'name': 'ExperienceFirst Paris', 'address_obj': {'city': 'Paris', 'country': 'France', 'postalcode': '75007', 'address_string': '75007 Paris France'}}, {'location_id': '189193', 'name': 'Galeries Lafayette Paris Haussmann', 'address_obj': {'street1': '40 Boulevard Haussmann', 'street2': '', 'city': 'Paris', 'country': 'France', 'postalcode': '75009', 'address_string': '40 Boulevard Haussmann, 75009 Paris France'}}, {'location_id': '1008070', 'name': 'Big Bus Paris', 'address_obj': {'street1': '11 avenue de l Opera', 'street2': 'Stop 1', 'city': 'Paris', 'country': 'France', 'postalcode': '75001', 'address_string': '11 avenue de l Opera Stop 1, 75001 Paris France'}}, {'location_id': '188679', 'name': 'Cathedrale Notre-Dame de Paris', 'address_obj': {'street1': '6 Parvis Notre-Dame', 'street2': 'Place Jean-Paul II', 'city': 'Paris', 'country': 'France', 'postalcode': '75004', 'address_string': '6 Parvis Notre-Dame Place Jean-Paul II, 75004 Paris France'}}, {'location_id': '585912', 'name': 'Tootbus Paris', 'address_obj': {'street1': '12 rue Auber', 'city': 'Paris', 'country': 'France', 'postalcode': '75009', 'address_string': '12 rue Auber, 75009 Paris France'}}, {'location_id': '292257', 'name': 'Le Marais', 'address_obj': {'street1': 'Le Marais', 'street2': '3e Arrondissement', 'city': 'Paris', 'country': 'France', 'postalcode': '75003', 'address_string': 'Le Marais 3e Arrondissement, 75003 Paris France'}}, {'location_id': '7621672', 'name': 'Bustronome Paris', 'address_obj': {'street1': '2 avenue Kleber', 'city': 'Paris', 'country': 'France', 'postalcode': '75116', 'address_string': '2 avenue Kleber, 75116 Paris France'}}, {'location_id': '695078', 'name': 'Angelina', 'address_obj': {'street1': '226 rue de Rivoli', 'street2': '', 'city': 'Paris', 'country': 'France', 'postalcode': '75001', 'address_string': '226 rue de Rivoli, 75001 Paris France'}}, {'location_id': '23801439', 'name': 'Gigi Paris', 'address_obj': {'street1': '15 avenue Montaigne', 'city': 'Paris', 'country': 'France', 'postalcode': '75008', 'address_string': '15 avenue Montaigne, 75008 Paris France'}}, {'location_id': '796575', 'name': 'Ciel de Paris', 'address_obj': {'street1': '33 avenue du Maine', 'street2': '56th Floor', 'city': 'Paris', 'country': 'France', 'postalcode': '75015', 'address_string': '33 avenue du Maine 56th Floor, 75015 Paris France'}}, {'location_id': '21389323', 'name': 'Pizzamore Paris', 'address_obj': {'street1': '121 Avenue Du Maine', 'city': 'Paris', 'country': 'France', 'postalcode': '75014', 'address_string': '121 Avenue Du Maine, 75014 Paris France'}}, {'location_id': '783458', 'name': "L' Entrecote de Paris", 'address_obj': {'street1': '29 Rue de Marignan', 'city': 'Paris', 'country': 'France', 'postalcode': '75008', 'address_string': '29 Rue de Marignan, 75008 Paris France'}}, {'location_id': '7205470', 'name': 'Alleno Paris', 'address_obj': {'street1': '8 avenue Dutuit', 'street2': 'Pavillon Ledoyen', 'city': 'Paris', 'country': 'France', 'postalcode': '75008', 'address_string': '8 avenue Dutuit Pavillon Ledoyen, 75008 Paris France'}}, {'location_id': '2000672', 'name': 'Cesar Paris', 'address_obj': {'street1': '12 avenue de Wagram', 'city': 'Paris', 'country': 'France', 'postalcode': '75008', 'address_string': '12 avenue de Wagram, 75008 Paris France'}}, {'location_id': '1390891', 'name': 'Au Vieux Paris', 'address_obj': {'street1': '24 rue Chanoinesse', 'street2': '', 'city': 'Paris', 'country': 'France', 'postalcode': '75004', 'address_string': '24 rue Chanoinesse, 75004 Paris France'}}, {'location_id': '7254376', 'name': 'Cafe de Paris Friedland', 'address_obj': {'street1': '45 avenue de Friedland', 'city': 'Paris', 'country': 'France', 'postalcode': '75008', 'address_string': '45 avenue de Friedland, 75008 Paris France'}}]
    activities websites: [{'location_id': '189258', 'name': 'Disneyland Paris', 'location': (48.872417, 2.776952), 'website': 'https://www.disneylandparis.com/'}, {'location_id': '189229', 'name': 'The Paris Catacombs', 'location': (48.83387, 2.332481), 'website': 'http://www.catacombes.paris.fr/'}, {'location_id': '2323543', 'name': 'Paris Metro', 'location': (48.864166, 2.330278), 'website': 'http://www.ratp.fr'}, {'location_id': '2613395', 'name': 'Paris by Mouth', 'location': (48.85627, 2.35661), 'website': 'http://parisbymouth.com/food-wine-tours/'}, {'location_id': '12103860', 'name': 'ExperienceFirst Paris', 'location': (48.85694, 2.292087), 'website': 'https://www.exp1.com/paris-tours/'}, {'location_id': '189193', 'name': 'Galeries Lafayette Paris Haussmann', 'location': (48.873596, 2.33215), 'website': 'http://haussmann.galerieslafayette.com/'}, {'location_id': '1008070', 'name': 'Big Bus Paris', 'location': (48.86527, 2.33439), 'website': 'http://www.bigbustours.com/en/paris/paris-bus-tours/'}, {'location_id': '188679', 'name': 'Cathedrale Notre-Dame de Paris', 'location': (48.853, 2.3498), 'website': 'https://www.notredamedeparis.fr/'}, {'location_id': '585912', 'name': 'Tootbus Paris', 'location': (48.872574, 2.328803), 'website': 'http://www.tootbus.com'}, {'location_id': '292257', 'name': 'Le Marais', 'location': (48.85879, 2.358595), 'website': 'N/A'}, {'location_id': '7621672', 'name': 'Bustronome Paris', 'location': (48.873188, 2.2945), 'website': 'http://www.bustronome.com/'}, {'location_id': '695078', 'name': 'Angelina', 'location': (48.865074, 2.328488), 'website': 'http://www.angelina-paris.fr/?y_source=1_MTE5MzAwODYtNzY5LWxvY2F0aW9uLndlYnNpdGU%3D'}, {'location_id': '23801439', 'name': 'Gigi Paris', 'location': (48.865707, 2.30314), 'website': 'https://gigi-restaurant.com/?utm_source=Yext&utm_medium=ExtNet&y_source=1_MjU3NjI3OTMtNzY5LWxvY2F0aW9uLndlYnNpdGU%3D'}, {'location_id': '796575', 'name': 'Ciel de Paris', 'location': (48.84235, 2.321931), 'website': 'http://www.cieldeparis.com/'}, {'location_id': '21389323', 'name': 'Pizzamore Paris', 'location': (48.835537, 2.324001), 'website': 'https://pizzamoreparis.fr/'}, {'location_id': '783458', 'name': "L' Entrecote de Paris", 'location': (48.86989, 2.306535), 'website': 'http://lentrecotedeparis.fr'}, {'location_id': '7205470', 'name': 'Alleno Paris', 'location': (48.866096, 2.316145), 'website': 'http://www.yannick-alleno.com/fr/restaurants-reservation/restaurant-3-etoiles-paris.html'}, {'location_id': '2000672', 'name': 'Cesar Paris', 'location': (48.87587, 2.296569), 'website': 'http://www.cesar-restaurant.com/'}, {'location_id': '1390891', 'name': 'Au Vieux Paris', 'location': (48.854176, 2.350185), 'website': 'http://www.restaurantauvieuxparis.fr'}, {'location_id': '7254376', 'name': 'Cafe de Paris Friedland', 'location': (48.874023, 2.29773), 'website': 'http://restaurant-lecafedeparis.com/fr'}]
2024-03-17 15:45:30,666 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'Destination: Paris\n    Budget: 5000\n    Dates: From 2024-03-19 to 2024-03-24\n    Flights Info: {\'search_metadata\': {\'id\': \'65f6f3dbaf6304338c3a47ea\', \'status\': \'Success\', \'json_endpoint\': \'https://serpapi.com/searches/3695f5cc3d3c0112/65f6f3dbaf6304338c3a47ea.json\', \'created_at\': \'2024-03-17 13:44:59 UTC\', \'processed_at\': \'2024-03-17 13:44:59 UTC\', \'google_flights_url\': \'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&q=Flights+to+CDG+from+TLV+on+2024-03-19+through+2024-03-24\', \'raw_html_file\': \'https://serpapi.com/searches/3695f5cc3d3c0112/65f6f3dbaf6304338c3a47ea.html\', \'prettify_html_file\': \'https://serpapi.com/searches/3695f5cc3d3c0112/65f6f3dbaf6304338c3a47ea.prettify\', \'total_time_taken\': 1.43}, \'search_parameters\': {\'engine\': \'google_flights\', \'hl\': \'en\', \'gl\': \'us\', \'departure_id\': \'TLV\', \'arrival_id\': \'CDG\', \'outbound_date\': \'2024-03-19\', \'return_date\': \'2024-03-24\', \'currency\': \'USD\'}, \'best_flights\': [{\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-03-19 05:50\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-03-19 09:55\'}, \'duration\': 305, \'airplane\': \'Boeing 737\', \'airline\': \'El Al\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LY 319\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat power & USB outlets\', \'Stream media to your device\', \'Carbon emissions estimate: 273 kg\']}], \'total_duration\': 305, \'carbon_emissions\': {\'this_flight\': 273000, \'typical_for_this_route\': 273000, \'difference_percent\': 0}, \'price\': 605, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'extensions\': [\'Checked baggage not included in price\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ1ZNV1RNeE9Sb0xDTlRZQXhBQ0dnTlZVMFE0SEhEVTJBTT0iLFtbIlRMViIsIjIwMjQtMDMtMTkiLCJDREciLG51bGwsIkxZIiwiMzE5Il1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-03-19 13:20\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-03-19 17:25\'}, \'duration\': 305, \'airplane\': \'Boeing 737\', \'airline\': \'El Al\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LY 327\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'In-seat USB outlet\', \'Stream media to your device\', \'Carbon emissions estimate: 273 kg\']}], \'total_duration\': 305, \'carbon_emissions\': {\'this_flight\': 274000, \'typical_for_this_route\': 273000, \'difference_percent\': 0}, \'price\': 605, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'extensions\': [\'Checked baggage not included in price\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ1ZNV1RNeU54b0xDTlRZQXhBQ0dnTlZVMFE0SEhEVTJBTT0iLFtbIlRMViIsIjIwMjQtMDMtMTkiLCJDREciLG51bGwsIkxZIiwiMzI3Il1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-03-19 16:50\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-03-19 20:55\'}, \'duration\': 305, \'airplane\': \'Boeing 737\', \'airline\': \'El Al\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LY 325\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat power & USB outlets\', \'Stream media to your device\', \'Carbon emissions estimate: 273 kg\']}], \'total_duration\': 305, \'carbon_emissions\': {\'this_flight\': 273000, \'typical_for_this_route\': 273000, \'difference_percent\': 0}, \'price\': 660, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'extensions\': [\'Checked baggage for a fee\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ1ZNV1RNeU5Sb0xDUHVDQkJBQ0dnTlZVMFE0SEhEN2dnUT0iLFtbIlRMViIsIjIwMjQtMDMtMTkiLCJDREciLG51bGwsIkxZIiwiMzI1Il1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-03-19 09:00\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-03-19 13:00\'}, \'duration\': 300, \'airplane\': \'Boeing 787\', \'airline\': \'El Al\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LY 323\', \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'Wi-Fi for a fee\', \'In-seat power & USB outlets\', \'On-demand video\', \'Carbon emissions estimate: 272 kg\']}], \'total_duration\': 300, \'carbon_emissions\': {\'this_flight\': 273000, \'typical_for_this_route\': 273000, \'difference_percent\': 0}, \'price\': 661, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'extensions\': [\'Checked baggage for a fee\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ1ZNV1RNeU14b0xDT2lEQkJBQ0dnTlZVMFE0SEhEb2d3UT0iLFtbIlRMViIsIjIwMjQtMDMtMTkiLCJDREciLG51bGwsIkxZIiwiMzIzIl1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-03-19 15:55\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-03-19 19:40\'}, \'duration\': 285, \'airplane\': \'Airbus A350\', \'airline\': \'Air France\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/AF.png\', \'travel_class\': \'Economy\', \'flight_number\': \'AF 963\', \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'Wi-Fi for a fee\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 209 kg\']}], \'total_duration\': 285, \'carbon_emissions\': {\'this_flight\': 210000, \'typical_for_this_route\': 273000, \'difference_percent\': -23}, \'price\': 760, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/AF.png\', \'extensions\': [\'Checked baggage for a fee\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ1ZCUmprMk14b0xDSzdSQkJBQ0dnTlZVMFE0SEhDdTBRUT0iLFtbIlRMViIsIjIwMjQtMDMtMTkiLCJDREciLG51bGwsIkFGIiwiOTYzIl1dXQ==\'}], \'other_flights\': [{\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-03-19 20:00\'}, \'arrival_airport\': {\'name\': \'Larnaca International Airport\', \'id\': \'LCA\', \'time\': \'2024-03-19 21:05\'}, \'duration\': 65, \'airline\': \'El Al\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LY 5133\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat power & USB outlets\', \'Stream media to your device\', \'Carbon emissions estimate: 58 kg\']}, {\'departure_airport\': {\'name\': \'Larnaca International Airport\', \'id\': \'LCA\', \'time\': \'2024-03-20 07:30\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-03-20 11:10\'}, \'duration\': 280, \'airline\': \'Cyprus Airways\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/CY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'CY 380\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'In-seat USB outlet\', \'Carbon emissions estimate: 249 kg\']}], \'layovers\': [{\'duration\': 625, \'name\': \'Larnaca International Airport\', \'id\': \'LCA\', \'overnight\': True}], \'total_duration\': 970, \'carbon_emissions\': {\'this_flight\': 309000, \'typical_for_this_route\': 273000, \'difference_percent\': 13}, \'price\': 590, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'extensions\': [\'Checked baggage for a fee\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ3hNV1RVeE16TjhRMWt6T0RBYUN3aSt6QU1RQWhvRFZWTkVPQnh3dnN3RCIsW1siVExWIiwiMjAyNC0wMy0xOSIsIkxDQSIsbnVsbCwiTFkiLCI1MTMzIl0sWyJMQ0EiLCIyMDI0LTAzLTIwIiwiQ0RHIixudWxsLCJDWSIsIjM4MCJdXV0=\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-03-19 15:40\'}, \'arrival_airport\': {\'name\': \'Vienna International Airport\', \'id\': \'VIE\', \'time\': \'2024-03-19 18:25\'}, \'duration\': 225, \'airplane\': \'Airbus A321\', \'airline\': \'Austrian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OS.png\', \'travel_class\': \'Economy\', \'flight_number\': \'OS 858\', \'legroom\': \'29 in\', \'extensions\': [\'Below average legroom (29 in)\', \'Wi-Fi for a fee\', \'In-seat USB outlet\', \'Carbon emissions estimate: 227 kg\'], \'often_delayed_by_over_30_min\': True}, {\'departure_airport\': {\'name\': \'Vienna International Airport\', \'id\': \'VIE\', \'time\': \'2024-03-19 20:25\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-03-19 22:30\'}, \'duration\': 125, \'airplane\': \'Airbus A320\', \'airline\': \'Austrian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OS.png\', \'travel_class\': \'Economy\', \'flight_number\': \'OS 419\', \'legroom\': \'28 in\', \'extensions\': [\'Below average legroom (28 in)\', \'In-seat USB outlet\', \'Carbon emissions estimate: 116 kg\']}], \'layovers\': [{\'duration\': 120, \'name\': \'Vienna International Airport\', \'id\': \'VIE\'}], \'total_duration\': 470, \'carbon_emissions\': {\'this_flight\': 344000, \'typical_for_this_route\': 273000, \'difference_percent\': 26}, \'price\': 617, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OS.png\', \'extensions\': [\'Checked baggage for a fee\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ3RQVXpnMU9IeFBVelF4T1JvTENLemhBeEFDR2dOVlUwUTRISENzNFFNPSIsW1siVExWIiwiMjAyNC0wMy0xOSIsIlZJRSIsbnVsbCwiT1MiLCI4NTgiXSxbIlZJRSIsIjIwMjQtMDMtMTkiLCJDREciLG51bGwsIk9TIiwiNDE5Il1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-03-19 09:20\'}, \'arrival_airport\': {\'name\': \'Bucharest Henri Coandă International Airport\', \'id\': \'OTP\', \'time\': \'2024-03-19 12:15\'}, \'duration\': 175, \'airline\': \'Wizz Air\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/W4.png\', \'travel_class\': \'Economy\', \'flight_number\': \'W4 3258\', \'legroom\': \'28 in\', \'extensions\': [\'Below average legroom (28 in)\', \'Carbon emissions estimate: 134 kg\']}, {\'departure_airport\': {\'name\': \'Bucharest Henri Coandă International Airport\', \'id\': \'OTP\', \'time\': \'2024-03-19 13:10\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-03-19 15:30\'}, \'duration\': 200, \'airplane\': \'Boeing 737\', \'airline\': \'TAROM\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/RO.png\', \'travel_class\': \'Economy\', \'flight_number\': \'RO 383\', \'legroom\': \'29 in\', \'extensions\': [\'Below average legroom (29 in)\', \'Carbon emissions estimate: 149 kg\']}], \'layovers\': [{\'duration\': 55, \'name\': \'Bucharest Henri Coandă International Airport\', \'id\': \'OTP\'}], \'total_duration\': 430, \'carbon_emissions\': {\'this_flight\': 284000, \'typical_for_this_route\': 273000, \'difference_percent\': 4}, \'price\': 653, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'extensions\': [\'Checked baggage for a fee\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ3hYTkRNeU5UaDhVazh6T0RNYUN3anQvUU1RQWhvRFZWTkVPQnh3N2YwRCIsW1siVExWIiwiMjAyNC0wMy0xOSIsIk9UUCIsbnVsbCwiVzQiLCIzMjU4Il0sWyJPVFAiLCIyMDI0LTAzLTE5IiwiQ0RHIixudWxsLCJSTyIsIjM4MyJdXV0=\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-03-19 05:35\'}, \'arrival_airport\': {\'name\': \'Václav Havel Airport Prague\', \'id\': \'PRG\', \'time\': \'2024-03-19 08:40\'}, \'duration\': 245, \'airplane\': \'Boeing 737\', \'airline\': \'Smartwings\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/QS.png\', \'travel_class\': \'Economy\', \'flight_number\': \'QS 1287\', \'ticket_also_sold_by\': [\'CSA\'], \'legroom\': \'29 in\', \'extensions\': [\'Below average legroom (29 in)\', \'Stream media to your device\', \'Carbon emissions estimate: 201 kg\']}, {\'departure_airport\': {\'name\': \'Václav Havel Airport Prague\', \'id\': \'PRG\', \'time\': \'2024-03-19 12:25\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-03-19 14:15\'}, \'duration\': 110, \'airplane\': \'Airbus A320\', \'airline\': \'CSA\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OK.png\', \'travel_class\': \'Economy\', \'flight_number\': \'OK 760\', \'ticket_also_sold_by\': [\'Smartwings\'], \'legroom\': \'28 in\', \'extensions\': [\'Below average legroom (28 in)\', \'Carbon emissions estimate: 89 kg\']}], \'layovers\': [{\'duration\': 225, \'name\': \'Václav Havel Airport Prague\', \'id\': \'PRG\'}], \'total_duration\': 580, \'carbon_emissions\': {\'this_flight\': 291000, \'typical_for_this_route\': 273000, \'difference_percent\': 7}, \'price\': 655, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'extensions\': [\'Checked baggage not included in price\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJV2xacGR6QkpSbEZGVUd0QlRGRnBZVUZDUnkwdExTMHRMUzB0TFhWcWMySXlNVUZCUVVGQlIxZ3lPRGwzUkhST1NuZEJFZ3hSVXpFeU9EZDhUMHMzTmpBYUN3aWwvd01RQWhvRFZWTkVPQnh3cGY4RCIsW1siVExWIiwiMjAyNC0wMy0xOSIsIlBSRyIsbnVsbCwiUVMiLCIxMjg3Il0sWyJQUkciLCIyMDI0LTAzLTE5IiwiQ0RHIixudWxsLCJPSyIsIjc2MCJdXV0=\'}], \'price_insights\': {\'lowest_price\': 590, \'price_level\': \'high\', \'typical_price_range\': [190, 430], \'price_history\': [[1705442400, 120], [1705528800, 120], [1705615200, 120], [1705701600, 120], [1705788000, 120], [1705874400, 120], [1705960800, 148], [1706047200, 153], [1706133600, 153], [1706220000, 154], [1706306400, 161], [1706392800, 166], [1706479200, 165], [1706565600, 160], [1706652000, 159], [1706738400, 169], [1706824800, 169], [1706911200, 182], [1706997600, 202], [1707084000, 205], [1707170400, 211], [1707256800, 215], [1707343200, 227], [1707429600, 232], [1707516000, 243], [1707602400, 248], [1707688800, 248], [1707775200, 248], [1707861600, 248], [1707948000, 248], [1708034400, 248], [1708120800, 248], [1708207200, 248], [1708293600, 248], [1708380000, 248], [1708466400, 248], [1708552800, 248], [1708639200, 248], [1708725600, 248], [1708812000, 248], [1708898400, 248], [1708984800, 248], [1709071200, 248], [1709157600, 248], [1709244000, 248], [1709330400, 289], [1709416800, 403], [1709503200, 442], [1709589600, 488], [1709676000, 477], [1709762400, 462], [1709848800, 487], [1709935200, 481], [1710021600, 466], [1710108000, 469], [1710194400, 539], [1710280800, 536], [1710367200, 551], [1710453600, 556], [1710540000, 555], [1710626400, 590]]}}\n    Accommodation Info: Top Hotels:\n1. Studio Marais Belle Epoque\n- Check-in Time: 2:00\u202fPM\n- Check-out Time: 11:00\u202fAM\n- Rate Per Night (Lowest): $155\n- Total Rate (Lowest): $776\n- Nearby Places: Gare de l\'Est, Paris Charles de Gaulle Airport, Café de la Poste\n\n2. Hôtel Louvre Saint-Honoré\n- Check-in Time: 2:00\u202fPM\n- Check-out Time: 12:00\u202fPM\n- Rate Per Night (Lowest): $306\n- Total Rate (Lowest): $1,531\n- Nearby Places: Louvre Museum, Saint-Michel Notre-Dame, Paris Charles de Gaulle Airport\n\n3. Hôtel Maison Mère\n- Check-in Time: 3:00\u202fPM\n- Check-out Time: 12:00\u202fPM\n- Rate Per Night (Lowest): $308\n- Total Rate (Lowest): $1,541\n- Nearby Places: Palais Garnier, Cadet, Paris Charles de Gaulle Airport, Les Anges Gourmands\n\n4. Warwick Paris\n- Check-in Time: 3:00\u202fPM\n- Check-out Time: 12:00\u202fPM\n- Rate Per Night (Lowest): $283\n- Total Rate (Lowest): $1,414\n- Nearby Places: Arc de Triomphe, George V, Paris Charles de Gaulle Airport, Cacao Restaurant Paris\n\n5. Courtyard by Marriott Paris Gare de Lyon\n- Check-in Time: 3:00\u202fPM\n- Check-out Time: 12:00\u202fPM\n- Rate Per Night (Lowest): $298\n- Total Rate (Lowest): $1,492\n- Nearby Places: Gare de Lyon, Paris Charles de Gaulle Airport, Mangiamo italiano\n    how to arrange the activities: Day 1:\n- Visit Disneyland Paris\n- Lunch at Angelina\n- Dinner at Ciel de Paris\n\nDay 2:\n- Visit The Paris Catacombs\n- Lunch at Pizzamore Paris\n- Dinner at L\' Entrecote de Paris\n\nDay 3:\n- Visit Paris Metro\n- Lunch at Gigi Paris\n- Dinner at Alleno Paris\n\nDay 4:\n- Visit Le Marais\n- Lunch at Bustronome Paris\n- Dinner at Au Vieux Paris\n\nDay 5:\n- Visit Galeries Lafayette Paris Haussmann\n- Lunch at Big Bus Paris\n- Dinner at Cafe de Paris Friedland\n    Activities Info: [{\'location_id\': \'189258\', \'name\': \'Disneyland Paris\', \'address_obj\': {\'street1\': \'Boulevard de Parc\', \'street2\': \'\', \'city\': \'Marne-la-Vallee\', \'country\': \'France\', \'postalcode\': \'77700\', \'address_string\': \'Boulevard de Parc, 77700, Marne-la-Vallee France\'}}, {\'location_id\': \'189229\', \'name\': \'The Paris Catacombs\', \'address_obj\': {\'street1\': \'1 Avenue du Colonel Henri Rol-Tanguy\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75014\', \'address_string\': \'1 Avenue du Colonel Henri Rol-Tanguy, 75014 Paris France\'}}, {\'location_id\': \'2323543\', \'name\': \'Paris Metro\', \'address_obj\': {\'street2\': \'\', \'city\': \'Paris\', \'country\': \'France\', \'address_string\': \'Paris France\'}}, {\'location_id\': \'2613395\', \'name\': \'Paris by Mouth\', \'address_obj\': {\'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75004\', \'address_string\': \'75004 Paris France\'}}, {\'location_id\': \'12103860\', \'name\': \'ExperienceFirst Paris\', \'address_obj\': {\'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75007\', \'address_string\': \'75007 Paris France\'}}, {\'location_id\': \'189193\', \'name\': \'Galeries Lafayette Paris Haussmann\', \'address_obj\': {\'street1\': \'40 Boulevard Haussmann\', \'street2\': \'\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75009\', \'address_string\': \'40 Boulevard Haussmann, 75009 Paris France\'}}, {\'location_id\': \'1008070\', \'name\': \'Big Bus Paris\', \'address_obj\': {\'street1\': \'11 avenue de l Opera\', \'street2\': \'Stop 1\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75001\', \'address_string\': \'11 avenue de l Opera Stop 1, 75001 Paris France\'}}, {\'location_id\': \'188679\', \'name\': \'Cathedrale Notre-Dame de Paris\', \'address_obj\': {\'street1\': \'6 Parvis Notre-Dame\', \'street2\': \'Place Jean-Paul II\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75004\', \'address_string\': \'6 Parvis Notre-Dame Place Jean-Paul II, 75004 Paris France\'}}, {\'location_id\': \'585912\', \'name\': \'Tootbus Paris\', \'address_obj\': {\'street1\': \'12 rue Auber\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75009\', \'address_string\': \'12 rue Auber, 75009 Paris France\'}}, {\'location_id\': \'292257\', \'name\': \'Le Marais\', \'address_obj\': {\'street1\': \'Le Marais\', \'street2\': \'3e Arrondissement\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75003\', \'address_string\': \'Le Marais 3e Arrondissement, 75003 Paris France\'}}, {\'location_id\': \'7621672\', \'name\': \'Bustronome Paris\', \'address_obj\': {\'street1\': \'2 avenue Kleber\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75116\', \'address_string\': \'2 avenue Kleber, 75116 Paris France\'}}, {\'location_id\': \'695078\', \'name\': \'Angelina\', \'address_obj\': {\'street1\': \'226 rue de Rivoli\', \'street2\': \'\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75001\', \'address_string\': \'226 rue de Rivoli, 75001 Paris France\'}}, {\'location_id\': \'23801439\', \'name\': \'Gigi Paris\', \'address_obj\': {\'street1\': \'15 avenue Montaigne\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75008\', \'address_string\': \'15 avenue Montaigne, 75008 Paris France\'}}, {\'location_id\': \'796575\', \'name\': \'Ciel de Paris\', \'address_obj\': {\'street1\': \'33 avenue du Maine\', \'street2\': \'56th Floor\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75015\', \'address_string\': \'33 avenue du Maine 56th Floor, 75015 Paris France\'}}, {\'location_id\': \'21389323\', \'name\': \'Pizzamore Paris\', \'address_obj\': {\'street1\': \'121 Avenue Du Maine\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75014\', \'address_string\': \'121 Avenue Du Maine, 75014 Paris France\'}}, {\'location_id\': \'783458\', \'name\': "L\' Entrecote de Paris", \'address_obj\': {\'street1\': \'29 Rue de Marignan\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75008\', \'address_string\': \'29 Rue de Marignan, 75008 Paris France\'}}, {\'location_id\': \'7205470\', \'name\': \'Alleno Paris\', \'address_obj\': {\'street1\': \'8 avenue Dutuit\', \'street2\': \'Pavillon Ledoyen\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75008\', \'address_string\': \'8 avenue Dutuit Pavillon Ledoyen, 75008 Paris France\'}}, {\'location_id\': \'2000672\', \'name\': \'Cesar Paris\', \'address_obj\': {\'street1\': \'12 avenue de Wagram\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75008\', \'address_string\': \'12 avenue de Wagram, 75008 Paris France\'}}, {\'location_id\': \'1390891\', \'name\': \'Au Vieux Paris\', \'address_obj\': {\'street1\': \'24 rue Chanoinesse\', \'street2\': \'\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75004\', \'address_string\': \'24 rue Chanoinesse, 75004 Paris France\'}}, {\'location_id\': \'7254376\', \'name\': \'Cafe de Paris Friedland\', \'address_obj\': {\'street1\': \'45 avenue de Friedland\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75008\', \'address_string\': \'45 avenue de Friedland, 75008 Paris France\'}}]\n    activities websites: [{\'location_id\': \'189258\', \'name\': \'Disneyland Paris\', \'location\': (48.872417, 2.776952), \'website\': \'https://www.disneylandparis.com/\'}, {\'location_id\': \'189229\', \'name\': \'The Paris Catacombs\', \'location\': (48.83387, 2.332481), \'website\': \'http://www.catacombes.paris.fr/\'}, {\'location_id\': \'2323543\', \'name\': \'Paris Metro\', \'location\': (48.864166, 2.330278), \'website\': \'http://www.ratp.fr\'}, {\'location_id\': \'2613395\', \'name\': \'Paris by Mouth\', \'location\': (48.85627, 2.35661), \'website\': \'http://parisbymouth.com/food-wine-tours/\'}, {\'location_id\': \'12103860\', \'name\': \'ExperienceFirst Paris\', \'location\': (48.85694, 2.292087), \'website\': \'https://www.exp1.com/paris-tours/\'}, {\'location_id\': \'189193\', \'name\': \'Galeries Lafayette Paris Haussmann\', \'location\': (48.873596, 2.33215), \'website\': \'http://haussmann.galerieslafayette.com/\'}, {\'location_id\': \'1008070\', \'name\': \'Big Bus Paris\', \'location\': (48.86527, 2.33439), \'website\': \'http://www.bigbustours.com/en/paris/paris-bus-tours/\'}, {\'location_id\': \'188679\', \'name\': \'Cathedrale Notre-Dame de Paris\', \'location\': (48.853, 2.3498), \'website\': \'https://www.notredamedeparis.fr/\'}, {\'location_id\': \'585912\', \'name\': \'Tootbus Paris\', \'location\': (48.872574, 2.328803), \'website\': \'http://www.tootbus.com\'}, {\'location_id\': \'292257\', \'name\': \'Le Marais\', \'location\': (48.85879, 2.358595), \'website\': \'N/A\'}, {\'location_id\': \'7621672\', \'name\': \'Bustronome Paris\', \'location\': (48.873188, 2.2945), \'website\': \'http://www.bustronome.com/\'}, {\'location_id\': \'695078\', \'name\': \'Angelina\', \'location\': (48.865074, 2.328488), \'website\': \'http://www.angelina-paris.fr/?y_source=1_MTE5MzAwODYtNzY5LWxvY2F0aW9uLndlYnNpdGU%3D\'}, {\'location_id\': \'23801439\', \'name\': \'Gigi Paris\', \'location\': (48.865707, 2.30314), \'website\': \'https://gigi-restaurant.com/?utm_source=Yext&utm_medium=ExtNet&y_source=1_MjU3NjI3OTMtNzY5LWxvY2F0aW9uLndlYnNpdGU%3D\'}, {\'location_id\': \'796575\', \'name\': \'Ciel de Paris\', \'location\': (48.84235, 2.321931), \'website\': \'http://www.cieldeparis.com/\'}, {\'location_id\': \'21389323\', \'name\': \'Pizzamore Paris\', \'location\': (48.835537, 2.324001), \'website\': \'https://pizzamoreparis.fr/\'}, {\'location_id\': \'783458\', \'name\': "L\' Entrecote de Paris", \'location\': (48.86989, 2.306535), \'website\': \'http://lentrecotedeparis.fr\'}, {\'location_id\': \'7205470\', \'name\': \'Alleno Paris\', \'location\': (48.866096, 2.316145), \'website\': \'http://www.yannick-alleno.com/fr/restaurants-reservation/restaurant-3-etoiles-paris.html\'}, {\'location_id\': \'2000672\', \'name\': \'Cesar Paris\', \'location\': (48.87587, 2.296569), \'website\': \'http://www.cesar-restaurant.com/\'}, {\'location_id\': \'1390891\', \'name\': \'Au Vieux Paris\', \'location\': (48.854176, 2.350185), \'website\': \'http://www.restaurantauvieuxparis.fr\'}, {\'location_id\': \'7254376\', \'name\': \'Cafe de Paris Friedland\', \'location\': (48.874023, 2.29773), \'website\': \'http://restaurant-lecafedeparis.com/fr\'}]I\'m planning a trip and need a detailed plan based on this information. Please create a comprehensive trip plan that includes in this order:1. The best flight option considering price and timing.2. Top 3 hotel recommendations based on the data.3. show now the budget that was left after the flight and hotel4. A day-by-day itinerary that: (in the first day take into account the arrival time of the flight in the planning)- Allocates activities and attractions based on their proximity (using the data).- Suggests dining options near each activity or attraction.- Utilizes the budget effectively, considering the cost of flights and accommodation.- Incorporates free time for shopping and exploration.- Include addresses and websites of attractions4. Ensure all recommendations are presented in a way that will be visually appealing on a webpage, using HTML formatting where appropriate (e.g., <b> for bold).Summarize the trip plan, ensuring it is well-organized and includes all relevant details.'}], 'model': 'gpt-4-0125-preview', 'temperature': 0.4}}
2024-03-17 15:45:30,667 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-17 15:45:30,667 - DEBUG - send_request_headers.complete
2024-03-17 15:45:30,667 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-17 15:45:30,667 - DEBUG - send_request_body.complete
2024-03-17 15:45:30,667 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-17 15:46:33,122 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:46:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-4-0125-preview'), (b'openai-organization', b'reichman-university-wxioss'), (b'openai-processing-ms', b'62077'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'800000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'793396'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'495ms'), (b'x-request-id', b'req_e61e74e88cd64867f84814da782892d0'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'865d6c809e9a09bd-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 15:46:33,122 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-03-17 15:46:33,122 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-17 15:46:33,123 - DEBUG - receive_response_body.complete
2024-03-17 15:46:33,123 - DEBUG - response_closed.started
2024-03-17 15:46:33,123 - DEBUG - response_closed.complete
2024-03-17 15:46:33,123 - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-03-17 15:46:33,126 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': "I'm planning a trip to Paris. Can you help me to create a photo for the trip?", 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}}
2024-03-17 15:46:33,127 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-17 15:46:33,127 - DEBUG - send_request_headers.complete
2024-03-17 15:46:33,127 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-17 15:46:33,127 - DEBUG - send_request_body.complete
2024-03-17 15:46:33,127 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-17 15:46:45,709 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 13:46:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'reichman-university-wxioss'), (b'x-request-id', b'req_6932ad71511652779f63c91782243198'), (b'openai-processing-ms', b'12367'), (b'access-control-allow-origin', b'*'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'865d6e06ed6d09bd-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 15:46:45,709 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2024-03-17 15:46:45,709 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-17 15:46:45,709 - DEBUG - receive_response_body.complete
2024-03-17 15:46:45,709 - DEBUG - response_closed.started
2024-03-17 15:46:45,709 - DEBUG - response_closed.complete
2024-03-17 15:46:45,709 - DEBUG - HTTP Request: POST https://api.openai.com/v1/images/generations "200 OK"
2024-03-17 19:20:49,404 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:20:49,408 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:20:49,453 - DEBUG - connect_tcp.started host='serpapi.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:20:49,489 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11D6FA0>
2024-03-17 19:20:49,489 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E112F5C0> server_hostname='serpapi.com' timeout=5.0
2024-03-17 19:20:49,523 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11D6F10>
2024-03-17 19:20:49,524 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:20:49,524 - DEBUG - send_request_headers.complete
2024-03-17 19:20:49,524 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:20:49,525 - DEBUG - send_request_body.complete
2024-03-17 19:20:49,525 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:20:50,864 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:20:50 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'865ea7e5eda509bf-HFA'), (b'CF-Cache-Status', b'MISS'), (b'Cache-Control', b'max-age=3600, public'), (b'ETag', b'W/"24d116ef8e405a70e5fca4ea95b6f050"'), (b'Vary', b'Accept-Encoding'), (b'referrer-policy', b'strict-origin-when-cross-origin'), (b'serpapi-search-id', b'65f72671d3aba26c9dda2264'), (b'x-content-type-options', b'nosniff'), (b'x-download-options', b'noopen'), (b'x-frame-options', b'SAMEORIGIN'), (b'x-permitted-cross-domain-policies', b'none'), (b'x-request-id', b'3436b89a-975c-48fb-92a5-0fa873eac64f'), (b'x-robots-tag', b'noindex, nofollow'), (b'x-runtime', b'0.964972'), (b'x-xss-protection', b'1; mode=block'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 19:20:50,865 - INFO - HTTP Request: GET https://serpapi.com/search?engine=google_flights&departure_id=TLV&arrival_id=CDG&outbound_date=2024-04-10&return_date=2024-04-15&currency=USD&hl=en&api_key=669f434e4ba2136c8626035972520de9b20e743726e97f32db7f33e748d2e561 "HTTP/1.1 200 OK"
2024-03-17 19:20:50,866 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:20:50,867 - DEBUG - receive_response_body.complete
2024-03-17 19:20:50,867 - DEBUG - response_closed.started
2024-03-17 19:20:50,867 - DEBUG - response_closed.complete
2024-03-17 19:20:50,868 - DEBUG - close.started
2024-03-17 19:20:50,868 - DEBUG - close.complete
2024-03-17 19:20:50,869 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:20:50,869 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:20:50,879 - DEBUG - connect_tcp.started host='serpapi.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:20:50,896 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207F8B36BB0>
2024-03-17 19:20:50,896 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160B40> server_hostname='serpapi.com' timeout=5.0
2024-03-17 19:20:50,932 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207F8B36AC0>
2024-03-17 19:20:50,934 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:20:50,934 - DEBUG - send_request_headers.complete
2024-03-17 19:20:50,934 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:20:50,934 - DEBUG - send_request_body.complete
2024-03-17 19:20:50,934 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:20:54,884 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:20:54 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'865ea7eebb6109b9-HFA'), (b'CF-Cache-Status', b'MISS'), (b'Cache-Control', b'max-age=3600, public'), (b'ETag', b'W/"8cdd2fd6706614dba745d2555aeee061"'), (b'Vary', b'Accept-Encoding'), (b'referrer-policy', b'strict-origin-when-cross-origin'), (b'serpapi-search-id', b'65f726731d64ea4f1d342d84'), (b'x-content-type-options', b'nosniff'), (b'x-download-options', b'noopen'), (b'x-frame-options', b'SAMEORIGIN'), (b'x-permitted-cross-domain-policies', b'none'), (b'x-request-id', b'3efb3458-37c1-4266-ac5d-07be75384207'), (b'x-robots-tag', b'noindex, nofollow'), (b'x-runtime', b'3.480940'), (b'x-xss-protection', b'1; mode=block'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 19:20:54,884 - INFO - HTTP Request: GET https://serpapi.com/search?engine=google_hotels&q=central%20hotels%20in%20Paris&check_in_date=2024-04-10&check_out_date=2024-04-15&currency=USD&api_key=669f434e4ba2136c8626035972520de9b20e743726e97f32db7f33e748d2e561 "HTTP/1.1 200 OK"
2024-03-17 19:20:54,884 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:20:54,997 - DEBUG - receive_response_body.complete
2024-03-17 19:20:54,997 - DEBUG - response_closed.started
2024-03-17 19:20:54,997 - DEBUG - response_closed.complete
2024-03-17 19:20:55,000 - DEBUG - close.started
2024-03-17 19:20:55,000 - DEBUG - close.complete
2024-03-17 19:20:55,010 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'This is the hotels list I have gathered so far. Write me a list of the top hotels and the info on each hotel you got.\nName: One bedroom appartement with balcony and wifi at Paris, Link: https://travel.homerez.com/en/book/34154380/property, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $98, Total Rate (Lowest): $490, Nearby Places: \nName: Hôtel Convention Montparnasse, Link: http://www.conventionmontparnasseparishotel.com/, Check-in Time: 2:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $131, Total Rate (Lowest): $655, Nearby Places: Convention, Paris Charles de Gaulle Airport, Le Quotidien\nName: Hôtel La Comtesse Tour Eiffel, Link: http://www.comtesse-hotel.com/, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $324, Total Rate (Lowest): $1,619, Nearby Places: Hôtel des Invalides, Paris Charles de Gaulle Airport\nName: Citadines Apart’hotel Tour Eiffel Paris, Link: https://www.discoverasr.com/citadines/france/citadines-tour-eiffel-paris?utm_source=google&utm_medium=gmb&utm_campaign=CitadinesTourEiffelParis&y_source=1_NTg1OTcwOTctNzE1LWxvY2F0aW9uLndlYnNpdGU%3D, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $217, Total Rate (Lowest): $1,084, Nearby Places: Musée Rodin, La Motte - Picquet Grenelle, Paris Charles de Gaulle Airport, Sushi Shop\nName: Hôtel Maison Mère, Link: https://www.maisonmere.co/, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $279, Total Rate (Lowest): $1,393, Nearby Places: Palais Garnier, Cadet, Paris Charles de Gaulle Airport, Les Anges Gourmands\nName: B Montmartre Hôtel, Link: http://www.b-montmartre.com/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $243, Total Rate (Lowest): $1,213, Nearby Places: Moulin Rouge, Place de Clichy, Paris Charles de Gaulle Airport, Pita Li beirut\nName: Hôtel Central Saint Germain, Link: https://www.hotelcentralsaintgermain.fr/, Check-in Time: 2:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $222, Total Rate (Lowest): $1,108, Nearby Places: Jardin du Luxembourg, Cluny La Sorbonne, Paris Charles de Gaulle Airport, Restaurant Shanghai Fouxing\nName: Hôtel Léopold, Link: https://www.leopoldhotelparis.com/, Check-in Time: 2:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $174, Total Rate (Lowest): $868, Nearby Places: Catacombs of Paris, Paris Charles de Gaulle Airport, Ristorante Il Barone\nName: Hôtel Paris Louvre Opéra, Link: http://www.hotelparislouvreopera.com/, Check-in Time: 2:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $252, Total Rate (Lowest): $1,261, Nearby Places: Domaine National du Palais-Royal, Pyramides, Paris Charles de Gaulle Airport\nName: Les Jardins du Marais, Link: http://www.lesjardinsdumarais.com/, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $220, Total Rate (Lowest): $1,099, Nearby Places: Saint-Sébastien - Froissart, Paris Charles de Gaulle Airport, Les Petites Canailles\nName: Villa Montparnasse, Link: http://www.villa-montparnasse.com/, Check-in Time: 2:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $135, Total Rate (Lowest): $675, Nearby Places: Catacombs of Paris, Denfert-Rochereau, Paris Charles de Gaulle Airport\nName: Paris Center, Link: https://www.bluepillow.com/search?p_id=589df1ad7c00cb10c8da1742&dest=bpex&cat=Apartment&accomodationids=62339adc4c4d8d9b9b7aba01, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $148, Total Rate (Lowest): $739, Nearby Places: Strasbourg Saint-Denis, Paris Charles de Gaulle Airport, Restaurant Crêperie Chouchou\nName: Hôtel Dame des Arts, Link: https://www.damedesarts.com/?utm_source=google&utm_medium=organic&utm_campaign=gbp, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $341, Total Rate (Lowest): $1,704, Nearby Places: Shakespeare and Company, Saint-Michel Notre-Dame, Paris Charles de Gaulle Airport, Le Saint André\nName: Courtyard by Marriott Paris Gare de Lyon, Link: https://www.marriott.com/en-us/hotels/pargl-courtyard-paris-gare-de-lyon/overview/?scid=f2ae0541-1279-4f24-b197-a979c79310b0, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $289, Total Rate (Lowest): $1,447, Nearby Places: Gare de Lyon, Paris Charles de Gaulle Airport, Mangiamo italiano\nName: The Originals Boutique, Hôtel Maison Montmartre, Paris, Link: https://www.hotelmaisonmontmartre.com/?utm_campaign=uberall&utm_source=googlelisting&utm_medium=organic, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $110, Total Rate (Lowest): $549, Nearby Places: Porte de Clichy, Paris Charles de Gaulle Airport\nName: Hôtel Mistral, Link: https://www.hotel-mistral-paris.com/?utm_source=Google&utm_medium=Mybusiness, Check-in Time: 2:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $180, Total Rate (Lowest): $899, Nearby Places: Montparnasse Tower, Gaîté, Paris Charles de Gaulle Airport, Brasserie Saigon\nName: Le Grand Quartier hotel, Link: https://www.legrandquartier.com/, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $162, Total Rate (Lowest): $810, Nearby Places: The Centre Pompidou, Château d’Eau, Paris Charles de Gaulle Airport, Les Rupins - Restaurant Parisien\nName: Hôtel La Villa des Ternes, Link: https://www.paris-hotel-ternes.com/, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $181, Total Rate (Lowest): $906, Nearby Places: Fondation Louis Vuitton, Neuilly - Porte Maillot, Paris Charles de Gaulle Airport, Le Panna Cotta - Restaurant Porte Maillot\nName: InterContinental Paris - Le Grand, an IHG Hotel, Link: https://www.ihg.com/intercontinental/hotels/gb/en//paris/parhb/hoteldetail, Check-in Time: 2:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $526, Total Rate (Lowest): $2,632, Nearby Places: Palais Garnier, Opéra, Paris Charles de Gaulle Airport, Rivages\nName: Hôtel Bradford Elysées - Astotel, Link: https://www.astotel.com/hotel/bradford-elysees/overview#utm_source=google&utm_medium=organic&utm_campaign=mybusiness_bradford, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $334, Total Rate (Lowest): $1,669, Nearby Places: Tuileries Garden, Paris Charles de Gaulle Airport, Bistrot Marloe Paris\n'}], 'model': 'gpt-3.5-turbo'}}
2024-03-17 19:20:55,012 - DEBUG - close.started
2024-03-17 19:20:55,012 - DEBUG - close.complete
2024-03-17 19:20:55,013 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:20:55,073 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000207F8BD3C70>
2024-03-17 19:20:55,073 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1080BC0> server_hostname='api.openai.com' timeout=5.0
2024-03-17 19:20:55,090 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000207F8BD3EB0>
2024-03-17 19:20:55,090 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-17 19:20:55,090 - DEBUG - send_request_headers.complete
2024-03-17 19:20:55,090 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-17 19:20:55,090 - DEBUG - send_request_body.complete
2024-03-17 19:20:55,091 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-17 19:21:04,664 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0125'), (b'openai-organization', b'reichman-university-wxioss'), (b'openai-processing-ms', b'8778'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'998377'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'97ms'), (b'x-request-id', b'req_907dd2a49788e08e178ff141a7b6ce2f'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=CHj5PEGb1_GKdvEkYYK5087Cm3JzZ1Hdkzi1B9cupU4-1710696064-1.0.1.1-GoLTqTKkfp3Wtyh5VFUOqxyXKn7fol8FZf2Rck5BSbLX1kbx9MPmY.5F66ibiiRdJ5aIJh5N45bk5jfqvcjTog; path=/; expires=Sun, 17-Mar-24 17:51:04 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'865ea808be3c09c1-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 19:21:04,664 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-03-17 19:21:04,664 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-17 19:21:04,664 - DEBUG - receive_response_body.complete
2024-03-17 19:21:04,664 - DEBUG - response_closed.started
2024-03-17 19:21:04,664 - DEBUG - response_closed.complete
2024-03-17 19:21:04,665 - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-03-17 19:21:04,671 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:04,672 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:04,680 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:04,970 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11EC910>
2024-03-17 19:21:04,970 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160C40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:05,123 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11D6E80>
2024-03-17 19:21:05,123 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:05,123 - DEBUG - send_request_headers.complete
2024-03-17 19:21:05,123 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:05,124 - DEBUG - send_request_body.complete
2024-03-17 19:21:05,124 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:05,703 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3105'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'c7047237-5f1c-47a6-b759-b1317b6844d5'), (b'x-amz-apigw-id', b'UyL0PFTNIAMEo1g='), (b'X-Amzn-Trace-Id', b'Root=1-65f72681-79698c8b4027a1c90d58d1f6')])
2024-03-17 19:21:05,704 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/search?key=7D8FF18728F342E29B426D6D5946FA6C&searchQuery=Paris&category=attractions&language=en "HTTP/1.1 200 OK"
2024-03-17 19:21:05,704 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:05,704 - DEBUG - receive_response_body.complete
2024-03-17 19:21:05,704 - DEBUG - response_closed.started
2024-03-17 19:21:05,704 - DEBUG - response_closed.complete
2024-03-17 19:21:05,705 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:05,705 - DEBUG - send_request_headers.complete
2024-03-17 19:21:05,705 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:05,706 - DEBUG - send_request_body.complete
2024-03-17 19:21:05,706 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:06,177 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:06 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3176'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'c742394b-7f99-4339-88e3-22991bcc05d3'), (b'x-amz-apigw-id', b'UyL0VF2dIAMEglA='), (b'X-Amzn-Trace-Id', b'Root=1-65f72681-67992dbb459184b721264b89')])
2024-03-17 19:21:06,177 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/search?key=7D8FF18728F342E29B426D6D5946FA6C&searchQuery=Paris&category=restaurants&language=en "HTTP/1.1 200 OK"
2024-03-17 19:21:06,177 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:06,178 - DEBUG - receive_response_body.complete
2024-03-17 19:21:06,178 - DEBUG - response_closed.started
2024-03-17 19:21:06,178 - DEBUG - response_closed.complete
2024-03-17 19:21:06,178 - DEBUG - close.started
2024-03-17 19:21:06,178 - DEBUG - close.complete
2024-03-17 19:21:06,179 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:06,179 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:06,188 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:06,344 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11F9EE0>
2024-03-17 19:21:06,344 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160D40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:06,502 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11F9E50>
2024-03-17 19:21:06,502 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:06,502 - DEBUG - send_request_headers.complete
2024-03-17 19:21:06,503 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:06,503 - DEBUG - send_request_body.complete
2024-03-17 19:21:06,503 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:07,452 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:07 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5541'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'83c3fc3a-ece1-4359-b8f5-a6838047a3fb'), (b'x-amz-apigw-id', b'UyL0dEKNoAMEg-w='), (b'X-Amzn-Trace-Id', b'Root=1-65f72682-4da14a462f1224a959f2e79e')])
2024-03-17 19:21:07,452 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/189258/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:07,452 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:07,453 - DEBUG - receive_response_body.complete
2024-03-17 19:21:07,453 - DEBUG - response_closed.started
2024-03-17 19:21:07,453 - DEBUG - response_closed.complete
2024-03-17 19:21:07,453 - DEBUG - close.started
2024-03-17 19:21:07,454 - DEBUG - close.complete
2024-03-17 19:21:07,454 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:07,454 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:07,461 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:07,606 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11EC4F0>
2024-03-17 19:21:07,606 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160EC0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:07,752 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11EC490>
2024-03-17 19:21:07,752 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:07,752 - DEBUG - send_request_headers.complete
2024-03-17 19:21:07,752 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:07,752 - DEBUG - send_request_body.complete
2024-03-17 19:21:07,752 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:08,102 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'4605'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'1000f649-2587-46f6-abd0-28e49421435e'), (b'x-amz-apigw-id', b'UyL0pG9SIAMEfhA='), (b'X-Amzn-Trace-Id', b'Root=1-65f72683-51e7aabc42b0fd8279e981e5')])
2024-03-17 19:21:08,102 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/189229/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:08,102 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:08,102 - DEBUG - receive_response_body.complete
2024-03-17 19:21:08,102 - DEBUG - response_closed.started
2024-03-17 19:21:08,102 - DEBUG - response_closed.complete
2024-03-17 19:21:08,103 - DEBUG - close.started
2024-03-17 19:21:08,103 - DEBUG - close.complete
2024-03-17 19:21:08,103 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:08,103 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:08,113 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:08,261 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207F8A71A60>
2024-03-17 19:21:08,261 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160F40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:08,411 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207F8B36250>
2024-03-17 19:21:08,412 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:08,412 - DEBUG - send_request_headers.complete
2024-03-17 19:21:08,412 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:08,412 - DEBUG - send_request_body.complete
2024-03-17 19:21:08,412 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:08,717 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2820'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'd80f87e0-577f-4133-9600-4c7bd3748758'), (b'x-amz-apigw-id', b'UyL0wE0vIAMEtlQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f72684-14220aaa57b160f56623e7dc')])
2024-03-17 19:21:08,717 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/2323543/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:08,718 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:08,718 - DEBUG - receive_response_body.complete
2024-03-17 19:21:08,718 - DEBUG - response_closed.started
2024-03-17 19:21:08,718 - DEBUG - response_closed.complete
2024-03-17 19:21:08,718 - DEBUG - close.started
2024-03-17 19:21:08,718 - DEBUG - close.complete
2024-03-17 19:21:08,719 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:08,719 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:08,728 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:08,878 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11FDB50>
2024-03-17 19:21:08,879 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160E40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:09,033 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11FDAF0>
2024-03-17 19:21:09,034 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:09,034 - DEBUG - send_request_headers.complete
2024-03-17 19:21:09,034 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:09,034 - DEBUG - send_request_body.complete
2024-03-17 19:21:09,034 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:09,327 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:09 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6962'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'955ac38d-155b-4814-80ef-dc6a31441e5b'), (b'x-amz-apigw-id', b'UyL02FSeIAMEOXg='), (b'X-Amzn-Trace-Id', b'Root=1-65f72685-51ae94e22e9d757a1980e725')])
2024-03-17 19:21:09,328 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/2613395/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:09,328 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:09,328 - DEBUG - receive_response_body.complete
2024-03-17 19:21:09,328 - DEBUG - response_closed.started
2024-03-17 19:21:09,328 - DEBUG - response_closed.complete
2024-03-17 19:21:09,329 - DEBUG - close.started
2024-03-17 19:21:09,329 - DEBUG - close.complete
2024-03-17 19:21:09,329 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:09,330 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:09,337 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:09,489 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1205130>
2024-03-17 19:21:09,489 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160C40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:09,646 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1200FD0>
2024-03-17 19:21:09,646 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:09,646 - DEBUG - send_request_headers.complete
2024-03-17 19:21:09,646 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:09,646 - DEBUG - send_request_body.complete
2024-03-17 19:21:09,646 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:10,045 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3946'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'eded4063-692f-49df-890a-99e830197169'), (b'x-amz-apigw-id', b'UyL08HCLIAMEQ4w='), (b'X-Amzn-Trace-Id', b'Root=1-65f72685-308e79f824f2abe60382342c')])
2024-03-17 19:21:10,045 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/12103860/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:10,045 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:10,045 - DEBUG - receive_response_body.complete
2024-03-17 19:21:10,045 - DEBUG - response_closed.started
2024-03-17 19:21:10,046 - DEBUG - response_closed.complete
2024-03-17 19:21:10,046 - DEBUG - close.started
2024-03-17 19:21:10,046 - DEBUG - close.complete
2024-03-17 19:21:10,046 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:10,046 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:10,058 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:10,208 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1205CD0>
2024-03-17 19:21:10,208 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E11E43C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:10,359 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1205F40>
2024-03-17 19:21:10,359 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:10,359 - DEBUG - send_request_headers.complete
2024-03-17 19:21:10,360 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:10,360 - DEBUG - send_request_body.complete
2024-03-17 19:21:10,360 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:10,703 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5271'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'854597e5-33a3-42d6-bcab-a46fd9492b22'), (b'x-amz-apigw-id', b'UyL1DGbXIAMEdsg='), (b'X-Amzn-Trace-Id', b'Root=1-65f72686-2b29ee5e688ee28d453a0706')])
2024-03-17 19:21:10,703 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/189193/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:10,703 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:10,703 - DEBUG - receive_response_body.complete
2024-03-17 19:21:10,704 - DEBUG - response_closed.started
2024-03-17 19:21:10,704 - DEBUG - response_closed.complete
2024-03-17 19:21:10,704 - DEBUG - close.started
2024-03-17 19:21:10,704 - DEBUG - close.complete
2024-03-17 19:21:10,705 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:10,705 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:10,713 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:10,865 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E12005E0>
2024-03-17 19:21:10,865 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160F40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:11,018 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1200400>
2024-03-17 19:21:11,019 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:11,019 - DEBUG - send_request_headers.complete
2024-03-17 19:21:11,019 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:11,019 - DEBUG - send_request_body.complete
2024-03-17 19:21:11,019 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:11,319 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:11 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5189'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'645395ec-872a-40a3-a570-4d9c5084617c'), (b'x-amz-apigw-id', b'UyL1KFuUIAMEjwg='), (b'X-Amzn-Trace-Id', b'Root=1-65f72687-715f3ca67ab3241c739ab476')])
2024-03-17 19:21:11,319 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1008070/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:11,319 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:11,319 - DEBUG - receive_response_body.complete
2024-03-17 19:21:11,319 - DEBUG - response_closed.started
2024-03-17 19:21:11,319 - DEBUG - response_closed.complete
2024-03-17 19:21:11,320 - DEBUG - close.started
2024-03-17 19:21:11,320 - DEBUG - close.complete
2024-03-17 19:21:11,320 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:11,321 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:11,328 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:11,475 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11F1880>
2024-03-17 19:21:11,475 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160E40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:11,627 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207F8A32DC0>
2024-03-17 19:21:11,627 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:11,627 - DEBUG - send_request_headers.complete
2024-03-17 19:21:11,627 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:11,627 - DEBUG - send_request_body.complete
2024-03-17 19:21:11,627 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:12,632 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'4415'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'a43cae6a-b335-40e0-8c8b-55d2b470c6f2'), (b'x-amz-apigw-id', b'UyL1QFPQoAMEqpw='), (b'X-Amzn-Trace-Id', b'Root=1-65f72687-070797a557c61e65374e4f0d')])
2024-03-17 19:21:12,633 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/188679/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:12,633 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:12,633 - DEBUG - receive_response_body.complete
2024-03-17 19:21:12,633 - DEBUG - response_closed.started
2024-03-17 19:21:12,633 - DEBUG - response_closed.complete
2024-03-17 19:21:12,634 - DEBUG - close.started
2024-03-17 19:21:12,634 - DEBUG - close.complete
2024-03-17 19:21:12,634 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:12,634 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:12,642 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:12,787 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11EC310>
2024-03-17 19:21:12,787 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160EC0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:12,937 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11EC790>
2024-03-17 19:21:12,937 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:12,937 - DEBUG - send_request_headers.complete
2024-03-17 19:21:12,937 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:12,938 - DEBUG - send_request_body.complete
2024-03-17 19:21:12,938 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:13,212 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:13 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5301'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'b017126d-4d66-42b8-a9e2-391f91eba233'), (b'x-amz-apigw-id', b'UyL1dEdCoAMEnPQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f72689-3d9fd64127501e1360509e6c')])
2024-03-17 19:21:13,212 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/585912/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:13,212 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:13,213 - DEBUG - receive_response_body.complete
2024-03-17 19:21:13,213 - DEBUG - response_closed.started
2024-03-17 19:21:13,213 - DEBUG - response_closed.complete
2024-03-17 19:21:13,213 - DEBUG - close.started
2024-03-17 19:21:13,213 - DEBUG - close.complete
2024-03-17 19:21:13,214 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:13,214 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:13,221 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:13,372 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11F9D00>
2024-03-17 19:21:13,372 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160D40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:13,526 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11F9B80>
2024-03-17 19:21:13,527 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:13,527 - DEBUG - send_request_headers.complete
2024-03-17 19:21:13,527 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:13,527 - DEBUG - send_request_body.complete
2024-03-17 19:21:13,527 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:13,921 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:13 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'4224'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'56926cbf-c54c-4927-8775-7c894e9a3cbc'), (b'x-amz-apigw-id', b'UyL1jGokIAMEIDw='), (b'X-Amzn-Trace-Id', b'Root=1-65f72689-22b853746baacb726d6378e9')])
2024-03-17 19:21:13,922 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/292257/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:13,922 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:13,922 - DEBUG - receive_response_body.complete
2024-03-17 19:21:13,922 - DEBUG - response_closed.started
2024-03-17 19:21:13,922 - DEBUG - response_closed.complete
2024-03-17 19:21:13,922 - DEBUG - close.started
2024-03-17 19:21:13,923 - DEBUG - close.complete
2024-03-17 19:21:13,923 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:13,923 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:13,930 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:14,077 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11F9B80>
2024-03-17 19:21:14,077 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E11E4940> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:14,234 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11F9F40>
2024-03-17 19:21:14,234 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:14,235 - DEBUG - send_request_headers.complete
2024-03-17 19:21:14,235 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:14,235 - DEBUG - send_request_body.complete
2024-03-17 19:21:14,235 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:14,520 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6416'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'6486279e-991a-4283-a7d6-74dcf6338d45'), (b'x-amz-apigw-id', b'UyL1qEAEoAMEOWw='), (b'X-Amzn-Trace-Id', b'Root=1-65f7268a-2ed6280a243ea5803d63d58c')])
2024-03-17 19:21:14,520 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/7621672/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:14,520 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:14,520 - DEBUG - receive_response_body.complete
2024-03-17 19:21:14,520 - DEBUG - response_closed.started
2024-03-17 19:21:14,521 - DEBUG - response_closed.complete
2024-03-17 19:21:14,521 - DEBUG - close.started
2024-03-17 19:21:14,521 - DEBUG - close.complete
2024-03-17 19:21:14,521 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:14,522 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:14,530 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:14,677 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11EC430>
2024-03-17 19:21:14,678 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160E40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:14,834 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11ECB20>
2024-03-17 19:21:14,835 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:14,835 - DEBUG - send_request_headers.complete
2024-03-17 19:21:14,835 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:14,835 - DEBUG - send_request_body.complete
2024-03-17 19:21:14,835 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:15,204 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5477'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'89062a45-ee17-4fab-918a-12b26b9f9c71'), (b'x-amz-apigw-id', b'UyL1wFYqoAMEW_g='), (b'X-Amzn-Trace-Id', b'Root=1-65f7268a-3122ad9b112107bb71003cd8')])
2024-03-17 19:21:15,204 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/695078/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:15,204 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:15,204 - DEBUG - receive_response_body.complete
2024-03-17 19:21:15,204 - DEBUG - response_closed.started
2024-03-17 19:21:15,204 - DEBUG - response_closed.complete
2024-03-17 19:21:15,204 - DEBUG - close.started
2024-03-17 19:21:15,206 - DEBUG - close.complete
2024-03-17 19:21:15,206 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:15,206 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:15,214 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:15,359 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11F16A0>
2024-03-17 19:21:15,360 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160D40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:15,508 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11F14F0>
2024-03-17 19:21:15,509 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:15,509 - DEBUG - send_request_headers.complete
2024-03-17 19:21:15,509 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:15,509 - DEBUG - send_request_body.complete
2024-03-17 19:21:15,509 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:15,772 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6860'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'8ff7fdb8-04dc-447e-ab89-f4228015e226'), (b'x-amz-apigw-id', b'UyL13GAmoAMEJuw='), (b'X-Amzn-Trace-Id', b'Root=1-65f7268b-7ea769967bce0204316a6744')])
2024-03-17 19:21:15,772 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/23801439/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:15,772 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:15,772 - DEBUG - receive_response_body.complete
2024-03-17 19:21:15,772 - DEBUG - response_closed.started
2024-03-17 19:21:15,772 - DEBUG - response_closed.complete
2024-03-17 19:21:15,773 - DEBUG - close.started
2024-03-17 19:21:15,773 - DEBUG - close.complete
2024-03-17 19:21:15,773 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:15,774 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:15,782 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:15,936 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1200790>
2024-03-17 19:21:15,936 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160EC0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:16,094 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1200B80>
2024-03-17 19:21:16,094 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:16,094 - DEBUG - send_request_headers.complete
2024-03-17 19:21:16,094 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:16,094 - DEBUG - send_request_body.complete
2024-03-17 19:21:16,095 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:16,406 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5781'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'283ad546-90b8-4208-aaf3-04f85f310a7a'), (b'x-amz-apigw-id', b'UyL19Gb_oAMEUbw='), (b'X-Amzn-Trace-Id', b'Root=1-65f7268c-239181fd21afaa4c4947b683')])
2024-03-17 19:21:16,406 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/796575/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:16,406 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:16,406 - DEBUG - receive_response_body.complete
2024-03-17 19:21:16,406 - DEBUG - response_closed.started
2024-03-17 19:21:16,407 - DEBUG - response_closed.complete
2024-03-17 19:21:16,407 - DEBUG - close.started
2024-03-17 19:21:16,407 - DEBUG - close.complete
2024-03-17 19:21:16,407 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:16,408 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:16,415 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:16,565 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1205970>
2024-03-17 19:21:16,565 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160F40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:16,712 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1205820>
2024-03-17 19:21:16,713 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:16,713 - DEBUG - send_request_headers.complete
2024-03-17 19:21:16,713 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:16,713 - DEBUG - send_request_body.complete
2024-03-17 19:21:16,713 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:16,985 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'7905'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'9fef95e2-a73f-497c-8f84-79d7e498d413'), (b'x-amz-apigw-id', b'UyL2DFzlIAMEdgQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f7268c-3f44a7ac24de36664b63b6c9')])
2024-03-17 19:21:16,985 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/21389323/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:16,986 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:16,986 - DEBUG - receive_response_body.complete
2024-03-17 19:21:16,986 - DEBUG - response_closed.started
2024-03-17 19:21:16,986 - DEBUG - response_closed.complete
2024-03-17 19:21:16,986 - DEBUG - close.started
2024-03-17 19:21:16,986 - DEBUG - close.complete
2024-03-17 19:21:16,987 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:16,987 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:16,994 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:17,148 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1200910>
2024-03-17 19:21:17,148 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E11E48C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:17,302 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1200760>
2024-03-17 19:21:17,302 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:17,302 - DEBUG - send_request_headers.complete
2024-03-17 19:21:17,302 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:17,302 - DEBUG - send_request_body.complete
2024-03-17 19:21:17,302 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:17,609 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5484'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'cac06d88-4d5f-4b24-b598-7de5a167a2e6'), (b'x-amz-apigw-id', b'UyL2JHiRoAMESvg='), (b'X-Amzn-Trace-Id', b'Root=1-65f7268d-376712ce6603ed646cf97676')])
2024-03-17 19:21:17,609 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/783458/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:17,609 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:17,609 - DEBUG - receive_response_body.complete
2024-03-17 19:21:17,609 - DEBUG - response_closed.started
2024-03-17 19:21:17,610 - DEBUG - response_closed.complete
2024-03-17 19:21:17,610 - DEBUG - close.started
2024-03-17 19:21:17,610 - DEBUG - close.complete
2024-03-17 19:21:17,610 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:17,611 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:17,618 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:17,767 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11D6400>
2024-03-17 19:21:17,767 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160F40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:17,918 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207F8B36250>
2024-03-17 19:21:17,918 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:17,919 - DEBUG - send_request_headers.complete
2024-03-17 19:21:17,919 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:17,919 - DEBUG - send_request_body.complete
2024-03-17 19:21:17,919 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:18,188 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:18 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6414'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'85023719-4326-4aa0-a72c-c3308bbb65ce'), (b'x-amz-apigw-id', b'UyL2PH8CoAMEqGg='), (b'X-Amzn-Trace-Id', b'Root=1-65f7268e-2b1d1c6a154d83ca674d6164')])
2024-03-17 19:21:18,188 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/7205470/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:18,188 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:18,188 - DEBUG - receive_response_body.complete
2024-03-17 19:21:18,188 - DEBUG - response_closed.started
2024-03-17 19:21:18,189 - DEBUG - response_closed.complete
2024-03-17 19:21:18,189 - DEBUG - close.started
2024-03-17 19:21:18,189 - DEBUG - close.complete
2024-03-17 19:21:18,189 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:18,190 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:18,197 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:18,350 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11F1B50>
2024-03-17 19:21:18,350 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160C40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:18,507 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E11F1D30>
2024-03-17 19:21:18,507 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:18,507 - DEBUG - send_request_headers.complete
2024-03-17 19:21:18,507 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:18,508 - DEBUG - send_request_body.complete
2024-03-17 19:21:18,508 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:18,761 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:18 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5243'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'e2aad2d5-de4b-46d6-bb82-bdd7f6634b47'), (b'x-amz-apigw-id', b'UyL2VFzGIAMEGaw='), (b'X-Amzn-Trace-Id', b'Root=1-65f7268e-54f046dd13ab3cc722053729')])
2024-03-17 19:21:18,763 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/2000672/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:18,763 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:18,763 - DEBUG - receive_response_body.complete
2024-03-17 19:21:18,763 - DEBUG - response_closed.started
2024-03-17 19:21:18,763 - DEBUG - response_closed.complete
2024-03-17 19:21:18,763 - DEBUG - close.started
2024-03-17 19:21:18,764 - DEBUG - close.complete
2024-03-17 19:21:18,764 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:18,764 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:18,772 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:18,918 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1205D90>
2024-03-17 19:21:18,919 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160E40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:19,062 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E1205FA0>
2024-03-17 19:21:19,062 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:19,062 - DEBUG - send_request_headers.complete
2024-03-17 19:21:19,062 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:19,063 - DEBUG - send_request_body.complete
2024-03-17 19:21:19,063 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:19,323 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:19 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'7384'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'db9fda83-f8bd-4c6b-b722-47362d21a196'), (b'x-amz-apigw-id', b'UyL2aHtgIAMEdVQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f7268f-1f8653cd21a96b986b7978bb')])
2024-03-17 19:21:19,323 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1390891/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:19,323 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:19,323 - DEBUG - receive_response_body.complete
2024-03-17 19:21:19,323 - DEBUG - response_closed.started
2024-03-17 19:21:19,323 - DEBUG - response_closed.complete
2024-03-17 19:21:19,324 - DEBUG - close.started
2024-03-17 19:21:19,324 - DEBUG - close.complete
2024-03-17 19:21:19,324 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:21:19,324 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:21:19,332 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:19,482 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E120D610>
2024-03-17 19:21:19,482 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1160D40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 19:21:19,636 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000207E120D760>
2024-03-17 19:21:19,637 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 19:21:19,637 - DEBUG - send_request_headers.complete
2024-03-17 19:21:19,637 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 19:21:19,637 - DEBUG - send_request_body.complete
2024-03-17 19:21:19,637 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 19:21:19,906 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:19 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'7154'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'0c2f5257-60fa-461f-9871-b36f1bc281cc'), (b'x-amz-apigw-id', b'UyL2gFayoAMEgng='), (b'X-Amzn-Trace-Id', b'Root=1-65f7268f-6cccbe62387d0df930419fb0')])
2024-03-17 19:21:19,906 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/7254376/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 19:21:19,907 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 19:21:19,907 - DEBUG - receive_response_body.complete
2024-03-17 19:21:19,907 - DEBUG - response_closed.started
2024-03-17 19:21:19,907 - DEBUG - response_closed.complete
2024-03-17 19:21:19,907 - DEBUG - close.started
2024-03-17 19:21:19,908 - DEBUG - close.complete
2024-03-17 19:21:19,916 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'I have this list of activities and the distances in km between each activity. Write a new list that is divided into 5 days. And in each day, write to me which attractions and restaurants to go to. I need you to also take into account the distances so we won\'t have too long trips. Also, don\'t repeat attractions on separate days. Don\'t assume any activity as a starting point. Just give the plan and also try to combine restaurants and attractions. If there is a bit of travel that\'s also ok; we don\'t need the closest attractions each day.\n{\n  "Disneyland Paris to The Paris Catacombs": 32.80110144004549,\n  "Disneyland Paris to Paris Metro": 32.684022547216415,\n  "Disneyland Paris to Paris by Mouth": 30.799945337724896,\n  "Disneyland Paris to ExperienceFirst Paris": 35.50883264769889,\n  "Disneyland Paris to Galeries Lafayette Paris Haussmann": 32.53141784549738,\n  "Disneyland Paris to Big Bus Paris": 32.3797759916736,\n  "Disneyland Paris to Cathedrale Notre-Dame de Paris": 31.321236033727455,\n  "Disneyland Paris to Tootbus Paris": 32.77627945590598,\n  "Disneyland Paris to Le Marais": 30.639088676211195,\n  "Disneyland Paris to Bustronome Paris": 35.28497294348467,\n  "Disneyland Paris to Angelina": 32.81193185751909,\n  "Disneyland Paris to Gigi Paris": 34.663592706653525,\n  "Disneyland Paris to Ciel de Paris": 33.456387336478514,\n  "Disneyland Paris to Pizzamore Paris": 33.39250229551781,\n  "Disneyland Paris to L\' Entrecote de Paris": 34.406954756773665,\n  "Disneyland Paris to Alleno Paris": 33.71154987121834,\n  "Disneyland Paris to Cesar Paris": 35.13470607767775,\n  "Disneyland Paris to Au Vieux Paris": 31.284023794318788,\n  "Disneyland Paris to Cafe de Paris Friedland": 35.048801023686075,\n  "The Paris Catacombs to Paris Metro": 3.372620603318036,\n  "The Paris Catacombs to Paris by Mouth": 3.0531301756245743,\n  "The Paris Catacombs to ExperienceFirst Paris": 3.9138159360692506,\n  "The Paris Catacombs to Galeries Lafayette Paris Haussmann": 4.417402141360891,\n  "The Paris Catacombs to Big Bus Paris": 3.4943184898298627,\n  "The Paris Catacombs to Cathedrale Notre-Dame de Paris": 2.4761084770286255,\n  "The Paris Catacombs to Tootbus Paris": 4.312099393643011,\n  "The Paris Catacombs to Le Marais": 3.3659888121479122,\n  "The Paris Catacombs to Bustronome Paris": 5.180370796928894,\n  "The Paris Catacombs to Angelina": 3.4820107656173906,\n  "The Paris Catacombs to Gigi Paris": 4.140237737557739,\n  "The Paris Catacombs to Ciel de Paris": 1.2187307506947427,\n  "The Paris Catacombs to Pizzamore Paris": 0.6477589652253624,\n  "The Paris Catacombs to L\' Entrecote de Paris": 4.432371066291403,\n  "The Paris Catacombs to Alleno Paris": 3.777474584284487,\n  "The Paris Catacombs to Cesar Paris": 5.358550805964063,\n  "The Paris Catacombs to Au Vieux Paris": 2.6032097872526796,\n  "The Paris Catacombs to Cafe de Paris Friedland": 5.13799951074261,\n  "Paris Metro to Paris by Mouth": 2.1169747438443167,\n  "Paris Metro to ExperienceFirst Paris": 2.907091424120088,\n  "Paris Metro to Galeries Lafayette Paris Haussmann": 1.0574715158421877,\n  "Paris Metro to Big Bus Paris": 0.3248729064842512,\n  "Paris Metro to Cathedrale Notre-Dame de Paris": 1.8924265314669195,\n  "Paris Metro to Tootbus Paris": 0.9411324141573623,\n  "Paris Metro to Le Marais": 2.1560088227513807,\n  "Paris Metro to Bustronome Paris": 2.8026015517980403,\n  "Paris Metro to Angelina": 0.16534268170032096,\n  "Paris Metro to Gigi Paris": 1.9924764450705466,\n  "Paris Metro to Ciel de Paris": 2.5015249604006846,\n  "Paris Metro to Pizzamore Paris": 3.216365562619749,\n  "Paris Metro to L\' Entrecote de Paris": 1.8496430359505345,\n  "Paris Metro to Alleno Paris": 1.0558390604425805,\n  "Paris Metro to Cesar Paris": 2.7879037322166837,\n  "Paris Metro to Au Vieux Paris": 1.8316262101741727,\n  "Paris Metro to Cafe de Paris Friedland": 2.620823723548882,\n  "Paris by Mouth to ExperienceFirst Paris": 4.721112044990717,\n  "Paris by Mouth to Galeries Lafayette Paris Haussmann": 2.629240856739762,\n  "Paris by Mouth to Big Bus Paris": 1.908853383855786,\n  "Paris by Mouth to Cathedrale Notre-Dame de Paris": 0.6168105844707071,\n  "Paris by Mouth to Tootbus Paris": 2.724713177758204,\n  "Paris by Mouth to Le Marais": 0.31560665321500075,\n  "Paris by Mouth to Bustronome Paris": 4.917319861306946,\n  "Paris by Mouth to Angelina": 2.278296292498615,\n  "Paris by Mouth to Gigi Paris": 4.049849384646553,\n  "Paris by Mouth to Ciel de Paris": 2.97231988112219,\n  "Paris by Mouth to Pizzamore Paris": 3.3179560029907864,\n  "Paris by Mouth to L\' Entrecote de Paris": 3.963764357905405,\n  "Paris by Mouth to Alleno Paris": 3.1553670318420552,\n  "Paris by Mouth to Cesar Paris": 4.90282537419872,\n  "Paris by Mouth to Au Vieux Paris": 0.5245757121825863,\n  "Paris by Mouth to Cafe de Paris Friedland": 4.7377881358505025,\n  "ExperienceFirst Paris to Galeries Lafayette Paris Haussmann": 3.4667080746132535,\n  "ExperienceFirst Paris to Big Bus Paris": 3.2302696974905394,\n  "ExperienceFirst Paris to Cathedrale Notre-Dame de Paris": 4.245107862212652,\n  "ExperienceFirst Paris to Tootbus Paris": 3.199249172898984,\n  "ExperienceFirst Paris to Le Marais": 4.869971586673072,\n  "ExperienceFirst Paris to Bustronome Paris": 1.8152991033641865,\n  "ExperienceFirst Paris to Angelina": 2.8122861403707833,\n  "ExperienceFirst Paris to Gigi Paris": 1.266532466871863,\n  "ExperienceFirst Paris to Ciel de Paris": 2.7203902242390945,\n  "ExperienceFirst Paris to Pizzamore Paris": 3.334320613331561,\n  "ExperienceFirst Paris to L\' Entrecote de Paris": 1.7862027020632905,\n  "ExperienceFirst Paris to Alleno Paris": 2.033186027441196,\n  "ExperienceFirst Paris to Cesar Paris": 2.130300359835465,\n  "ExperienceFirst Paris to Au Vieux Paris": 4.261654944434227,\n  "ExperienceFirst Paris to Cafe de Paris Friedland": 1.943875728684314,\n  "Galeries Lafayette Paris Haussmann to Big Bus Paris": 0.9401953036179314,\n  "Galeries Lafayette Paris Haussmann to Cathedrale Notre-Dame de Paris": 2.629040554954871,\n  "Galeries Lafayette Paris Haussmann to Tootbus Paris": 0.2698796882921996,\n  "Galeries Lafayette Paris Haussmann to Le Marais": 2.540120032002544,\n  "Galeries Lafayette Paris Haussmann to Bustronome Paris": 2.7539364912864546,\n  "Galeries Lafayette Paris Haussmann to Angelina": 0.9847310232308183,\n  "Galeries Lafayette Paris Haussmann to Gigi Paris": 2.296010875953188,\n  "Galeries Lafayette Paris Haussmann to Ciel de Paris": 3.553924428813548,\n  "Galeries Lafayette Paris Haussmann to Pizzamore Paris": 4.273764609581506,\n  "Galeries Lafayette Paris Haussmann to L\' Entrecote de Paris": 1.9182223038398425,\n  "Galeries Lafayette Paris Haussmann to Alleno Paris": 1.4373061402463398,\n  "Galeries Lafayette Paris Haussmann to Cesar Paris": 2.6144314937056023,\n  "Galeries Lafayette Paris Haussmann to Au Vieux Paris": 2.5305094023482373,\n  "Galeries Lafayette Paris Haussmann to Cafe de Paris Friedland": 2.517760884740017,\n  "Big Bus Paris to Cathedrale Notre-Dame de Paris": 1.7698565247464508,\n  "Big Bus Paris to Tootbus Paris": 0.9091809460858644,\n  "Big Bus Paris to Le Marais": 1.9116483407781064,\n  "Big Bus Paris to Bustronome Paris": 3.0475797506134956,\n  "Big Bus Paris to Angelina": 0.4322681627156371,\n  "Big Bus Paris to Gigi Paris": 2.286371141492141,\n  "Big Bus Paris to Ciel de Paris": 2.706704767519477,\n  "Big Bus Paris to Pizzamore Paris": 3.3924260229494467,\n  "Big Bus Paris to L\' Entrecote de Paris": 2.1012015816480907,\n  "Big Bus Paris to Alleno Paris": 1.3377250378142491,\n  "Big Bus Paris to Cesar Paris": 3.0068685824358528,\n  "Big Bus Paris to Au Vieux Paris": 1.6902468582942065,\n  "Big Bus Paris to Cafe de Paris Friedland": 2.852539365270569,\n  "Cathedrale Notre-Dame de Paris to Tootbus Paris": 2.6639181879022393,\n  "Cathedrale Notre-Dame de Paris to Le Marais": 0.9102400625581337,\n  "Cathedrale Notre-Dame de Paris to Bustronome Paris": 4.626352471870866,\n  "Cathedrale Notre-Dame de Paris to Angelina": 2.0575080420659586,\n  "Cathedrale Notre-Dame de Paris to Gigi Paris": 3.694353429442807,\n  "Cathedrale Notre-Dame de Paris to Ciel de Paris": 2.358180086337543,\n  "Cathedrale Notre-Dame de Paris to Pizzamore Paris": 2.708294711696242,\n  "Cathedrale Notre-Dame de Paris to L\' Entrecote de Paris": 3.6802546793401305,\n  "Cathedrale Notre-Dame de Paris to Alleno Paris": 2.860475520626834,\n  "Cathedrale Notre-Dame de Paris to Cesar Paris": 4.650655594707013,\n  "Cathedrale Notre-Dame de Paris to Au Vieux Paris": 0.13376492011967347,\n  "Cathedrale Notre-Dame de Paris to Cafe de Paris Friedland": 4.469071123114463,\n  "Tootbus Paris to Le Marais": 2.664227943000955,\n  "Tootbus Paris to Bustronome Paris": 2.509731712468602,\n  "Tootbus Paris to Angelina": 0.8342813021669022,\n  "Tootbus Paris to Gigi Paris": 2.026410975717287,\n  "Tootbus Paris to Ciel de Paris": 3.3981561516002667,\n  "Tootbus Paris to Pizzamore Paris": 4.1332911140406265,\n  "Tootbus Paris to L\' Entrecote de Paris": 1.6557773724126694,\n  "Tootbus Paris to Alleno Paris": 1.173039164914639,\n  "Tootbus Paris to Cesar Paris": 2.3857391878906027,\n  "Tootbus Paris to Au Vieux Paris": 2.575185465052892,\n  "Tootbus Paris to Cafe de Paris Friedland": 2.2782574138521583,\n  "Le Marais to Bustronome Paris": 4.954151727935866,\n  "Le Marais to Angelina": 2.310591675154564,\n  "Le Marais to Gigi Paris": 4.128918867516721,\n  "Le Marais to Ciel de Paris": 3.2463048484968047,\n  "Le Marais to Pizzamore Paris": 3.6184721909730193,\n  "Le Marais to L\' Entrecote de Paris": 4.003164897571229,\n  "Le Marais to Alleno Paris": 3.20980221846619,\n  "Le Marais to Cesar Paris": 4.918353347337914,\n  "Le Marais to Au Vieux Paris": 0.8011203964187439,\n  "Le Marais to Cafe de Paris Friedland": 4.763366671165435,\n  "Bustronome Paris to Angelina": 2.644614281001149,\n  "Bustronome Paris to Gigi Paris": 1.044666061531068,\n  "Bustronome Paris to Ciel de Paris": 3.9731067547152294,\n  "Bustronome Paris to Pizzamore Paris": 4.710239704642215,\n  "Bustronome Paris to L\' Entrecote de Paris": 0.9535592356311227,\n  "Bustronome Paris to Alleno Paris": 1.7686787814264198,\n  "Bustronome Paris to Cesar Paris": 0.33441644591755487,\n  "Bustronome Paris to Au Vieux Paris": 4.589270858169583,\n  "Bustronome Paris to Cafe de Paris Friedland": 0.2538192658821321,\n  "Angelina to Gigi Paris": 1.8554782034324675,\n  "Angelina to Ciel de Paris": 2.5719357669215994,\n  "Angelina to Pizzamore Paris": 3.300737624866311,\n  "Angelina to L\' Entrecote de Paris": 1.69268344908175,\n  "Angelina to Alleno Paris": 0.9099798620123638,\n  "Angelina to Cesar Paris": 2.6251226939762597,\n  "Angelina to Au Vieux Paris": 1.9969666879188261,\n  "Angelina to Cafe de Paris Friedland": 2.4599329935402565,\n  "Gigi Paris to Ciel de Paris": 2.938623857273072,\n  "Gigi Paris to Pizzamore Paris": 3.685677828353672,\n  "Gigi Paris to L\' Entrecote de Paris": 0.5272662636340256,\n  "Gigi Paris to Alleno Paris": 0.9522563569700311,\n  "Gigi Paris to Cesar Paris": 1.2280258733850151,\n  "Gigi Paris to Au Vieux Paris": 3.6726846545212792,\n  "Gigi Paris to Cafe de Paris Friedland": 1.005802925393003,\n  "Ciel de Paris to Pizzamore Paris": 0.7725712201474045,\n  "Ciel de Paris to L\' Entrecote de Paris": 3.262898472674238,\n  "Ciel de Paris to Alleno Paris": 2.6741577310137474,\n  "Ciel de Paris to Cesar Paris": 4.163528238207847,\n  "Ciel de Paris to Au Vieux Paris": 2.4501872906393185,\n  "Ciel de Paris to Cafe de Paris Friedland": 3.9418665201959757,\n  "Pizzamore Paris to L\' Entrecote de Paris": 4.027976145019418,\n  "Pizzamore Paris to Alleno Paris": 3.4462858589638645,\n  "Pizzamore Paris to Cesar Paris": 4.91341431380209,\n  "Pizzamore Paris to Au Vieux Paris": 2.8225675529569396,\n  "Pizzamore Paris to Cafe de Paris Friedland": 4.691274816043175,\n  "L\' Entrecote de Paris to Alleno Paris": 0.8197935535129931,\n  "L\' Entrecote de Paris to Cesar Paris": 0.9866196293961914,\n  "L\' Entrecote de Paris to Au Vieux Paris": 3.639921354269068,\n  "L\' Entrecote de Paris to Cafe de Paris Friedland": 0.7911466966775377,\n  "Alleno Paris to Cesar Paris": 1.7975427155622292,\n  "Alleno Paris to Au Vieux Paris": 2.8209771240371686,\n  "Alleno Paris to Cafe de Paris Friedland": 1.6096716506820443,\n  "Cesar Paris to Au Vieux Paris": 4.604385292643804,\n  "Cesar Paris to Cafe de Paris Friedland": 0.22223684038873998,\n  "Au Vieux Paris to Cafe de Paris Friedland": 4.426433741377855\n}'}], 'model': 'gpt-3.5-turbo'}}
2024-03-17 19:21:19,917 - DEBUG - close.started
2024-03-17 19:21:19,917 - DEBUG - close.complete
2024-03-17 19:21:19,917 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 19:21:19,933 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000207E11EC070>
2024-03-17 19:21:19,933 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000207E1080BC0> server_hostname='api.openai.com' timeout=5.0
2024-03-17 19:21:19,955 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000207E11EC5B0>
2024-03-17 19:21:19,955 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-17 19:21:19,955 - DEBUG - send_request_headers.complete
2024-03-17 19:21:19,955 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-17 19:21:19,955 - DEBUG - send_request_body.complete
2024-03-17 19:21:19,956 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-17 19:21:22,740 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:21:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0125'), (b'openai-organization', b'reichman-university-wxioss'), (b'openai-processing-ms', b'2342'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'996910'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'185ms'), (b'x-request-id', b'req_5ffcd167204e33264f6b6a07309c7c06'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'865ea8a41e0a09c7-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 19:21:22,740 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-03-17 19:21:22,740 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-17 19:21:22,740 - DEBUG - receive_response_body.complete
2024-03-17 19:21:22,741 - DEBUG - response_closed.started
2024-03-17 19:21:22,741 - DEBUG - response_closed.complete
2024-03-17 19:21:22,741 - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-03-17 19:21:22,742 - INFO - Destination: Paris
    Budget: 5000
    Dates: From 2024-04-10 to 2024-04-15
    Flights Info: {'search_metadata': {'id': '65f72671d3aba26c9dda2264', 'status': 'Success', 'json_endpoint': 'https://serpapi.com/searches/37dfa91bc5ebd09e/65f72671d3aba26c9dda2264.json', 'created_at': '2024-03-17 17:20:49 UTC', 'processed_at': '2024-03-17 17:20:49 UTC', 'google_flights_url': 'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&q=Flights+to+CDG+from+TLV+on+2024-04-10+through+2024-04-15', 'raw_html_file': 'https://serpapi.com/searches/37dfa91bc5ebd09e/65f72671d3aba26c9dda2264.html', 'prettify_html_file': 'https://serpapi.com/searches/37dfa91bc5ebd09e/65f72671d3aba26c9dda2264.prettify', 'total_time_taken': 0.93}, 'search_parameters': {'engine': 'google_flights', 'hl': 'en', 'gl': 'us', 'departure_id': 'TLV', 'arrival_id': 'CDG', 'outbound_date': '2024-04-10', 'return_date': '2024-04-15', 'currency': 'USD'}, 'best_flights': [{'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-10 17:15'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-04-10 21:10'}, 'duration': 295, 'airplane': 'Boeing 737', 'airline': 'El Al', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'travel_class': 'Economy', 'flight_number': 'LY 325', 'ticket_also_sold_by': ['Air France'], 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat power & USB outlets', 'Stream media to your device', 'Carbon emissions estimate: 273 kg']}], 'total_duration': 295, 'carbon_emissions': {'this_flight': 273000, 'typical_for_this_route': 273000, 'difference_percent': 0}, 'price': 699, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'extensions': ['Checked baggage for a fee', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ1ZNV1RNeU5Sb0xDSWVpQkJBQ0dnTlZVMFE0SEhDSG9nUT0iLFtbIlRMViIsIjIwMjQtMDQtMTAiLCJDREciLG51bGwsIkxZIiwiMzI1Il1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-10 05:50'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-04-10 09:50'}, 'duration': 300, 'airplane': 'Boeing 737', 'airline': 'El Al', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'travel_class': 'Economy', 'flight_number': 'LY 319', 'ticket_also_sold_by': ['Air France'], 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat power & USB outlets', 'Stream media to your device', 'Carbon emissions estimate: 273 kg']}], 'total_duration': 300, 'carbon_emissions': {'this_flight': 273000, 'typical_for_this_route': 273000, 'difference_percent': 0}, 'price': 764, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'extensions': ['Checked baggage for a fee', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ1ZNV1RNeE9Sb0xDT3ZVQkJBQ0dnTlZVMFE0SEhEcjFBUT0iLFtbIlRMViIsIjIwMjQtMDQtMTAiLCJDREciLG51bGwsIkxZIiwiMzE5Il1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-10 08:00'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-04-10 12:00'}, 'duration': 300, 'airplane': 'Boeing 737', 'airline': 'El Al', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'travel_class': 'Economy', 'flight_number': 'LY 221', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'In-seat USB outlet', 'Stream media to your device', 'Carbon emissions estimate: 273 kg']}], 'total_duration': 300, 'carbon_emissions': {'this_flight': 274000, 'typical_for_this_route': 273000, 'difference_percent': 0}, 'price': 764, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'extensions': ['Checked baggage for a fee', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ1ZNV1RJeU1Sb0xDT3ZVQkJBQ0dnTlZVMFE0SEhEcjFBUT0iLFtbIlRMViIsIjIwMjQtMDQtMTAiLCJDREciLG51bGwsIkxZIiwiMjIxIl1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-10 10:00'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-04-10 13:50'}, 'duration': 290, 'airplane': 'Boeing 787', 'airline': 'El Al', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'travel_class': 'Economy', 'flight_number': 'LY 323', 'ticket_also_sold_by': ['Air France'], 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 238 kg']}], 'total_duration': 290, 'carbon_emissions': {'this_flight': 239000, 'typical_for_this_route': 273000, 'difference_percent': -12}, 'price': 764, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'extensions': ['Checked baggage for a fee', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ1ZNV1RNeU14b0xDT3ZVQkJBQ0dnTlZVMFE0SEhEcjFBUT0iLFtbIlRMViIsIjIwMjQtMDQtMTAiLCJDREciLG51bGwsIkxZIiwiMzIzIl1dXQ=='}], 'other_flights': [{'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-10 18:50'}, 'arrival_airport': {'name': 'Warsaw Chopin Airport', 'id': 'WAW', 'time': '2024-04-10 21:50'}, 'duration': 240, 'airplane': 'Boeing 737MAX 8 Passenger', 'airline': 'LOT', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LO.png', 'travel_class': 'Economy', 'flight_number': 'LO 154', 'ticket_also_sold_by': ['El Al'], 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'In-seat power & USB outlets', 'Stream media to your device', 'Carbon emissions estimate: 170 kg'], 'often_delayed_by_over_30_min': True}, {'departure_airport': {'name': 'Warsaw Chopin Airport', 'id': 'WAW', 'time': '2024-04-11 07:20'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-04-11 09:50'}, 'duration': 150, 'airplane': 'Boeing 737', 'airline': 'LOT', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LO.png', 'travel_class': 'Economy', 'flight_number': 'LO 331', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'In-seat power outlet', 'Stream media to your device', 'Carbon emissions estimate: 121 kg']}], 'layovers': [{'duration': 570, 'name': 'Warsaw Chopin Airport', 'id': 'WAW', 'overnight': True}], 'total_duration': 960, 'carbon_emissions': {'this_flight': 292000, 'typical_for_this_route': 273000, 'difference_percent': 7}, 'price': 418, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LO.png', 'extensions': ['Checked baggage for a fee', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ3RNVHpFMU5IeE1Uek16TVJvTENKdkdBaEFDR2dOVlUwUTRISENieGdJPSIsW1siVExWIiwiMjAyNC0wNC0xMCIsIldBVyIsbnVsbCwiTE8iLCIxNTQiXSxbIldBVyIsIjIwMjQtMDQtMTEiLCJDREciLG51bGwsIkxPIiwiMzMxIl1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-10 09:25'}, 'arrival_airport': {'name': 'Sofia International Airport', 'id': 'SOF', 'time': '2024-04-10 12:10'}, 'duration': 165, 'airline': 'Wizz Air', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/W6.png', 'travel_class': 'Economy', 'flight_number': 'W6 4428', 'legroom': '28 in', 'extensions': ['Below average legroom (28 in)', 'Carbon emissions estimate: 100 kg']}, {'departure_airport': {'name': 'Sofia International Airport', 'id': 'SOF', 'time': '2024-04-10 15:15'}, 'arrival_airport': {'name': 'London Luton Airport', 'id': 'LTN', 'time': '2024-04-10 16:50'}, 'duration': 215, 'airline': 'Wizz Air', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/W6.png', 'travel_class': 'Economy', 'flight_number': 'W6 4303', 'legroom': '28 in', 'extensions': ['Below average legroom (28 in)', 'Carbon emissions estimate: 153 kg']}, {'departure_airport': {'name': 'London Luton Airport', 'id': 'LTN', 'time': '2024-04-10 19:00'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-04-10 21:20'}, 'duration': 80, 'airline': 'easyJet', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/U2.png', 'travel_class': 'Economy', 'flight_number': 'U2 2439', 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'Carbon emissions estimate: 53 kg'], 'often_delayed_by_over_30_min': True}], 'layovers': [{'duration': 185, 'name': 'Sofia International Airport', 'id': 'SOF'}, {'duration': 130, 'name': 'London Luton Airport', 'id': 'LTN'}], 'total_duration': 775, 'carbon_emissions': {'this_flight': 307000, 'typical_for_this_route': 273000, 'difference_percent': 12}, 'price': 488, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'extensions': ['Checked baggage for a fee', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFaFJYTmpRME1qaDhWelkwTXpBemZGVXlNalF6T1JvTENMMzhBaEFDR2dOVlUwUTRISEM5L0FJPSIsW1siVExWIiwiMjAyNC0wNC0xMCIsIlNPRiIsbnVsbCwiVzYiLCI0NDI4Il0sWyJTT0YiLCIyMDI0LTA0LTEwIiwiTFROIixudWxsLCJXNiIsIjQzMDMiXSxbIkxUTiIsIjIwMjQtMDQtMTAiLCJDREciLG51bGwsIlUyIiwiMjQzOSJdXV0='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-10 13:30'}, 'arrival_airport': {'name': 'Václav Havel Airport Prague', 'id': 'PRG', 'time': '2024-04-10 16:35'}, 'duration': 245, 'airplane': 'Airbus A320', 'airline': 'Israir Airlines', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/6H.png', 'travel_class': 'Economy', 'flight_number': '6H 761', 'ticket_also_sold_by': ['Smartwings'], 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Carbon emissions estimate: 206 kg']}, {'departure_airport': {'name': 'Václav Havel Airport Prague', 'id': 'PRG', 'time': '2024-04-10 17:35'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-04-10 19:25'}, 'duration': 110, 'airplane': 'Airbus A320', 'airline': 'CSA', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OK.png', 'travel_class': 'Economy', 'flight_number': 'OK 766', 'ticket_also_sold_by': ['Smartwings'], 'legroom': '28 in', 'extensions': ['Below average legroom (28 in)', 'Carbon emissions estimate: 89 kg']}], 'layovers': [{'duration': 60, 'name': 'Václav Havel Airport Prague', 'id': 'PRG'}], 'total_duration': 415, 'carbon_emissions': {'this_flight': 296000, 'typical_for_this_route': 273000, 'difference_percent': 8}, 'price': 553, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'extensions': ['Checked baggage for a fee', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ3MyU0RjMk1YeFBTemMyTmhvTENNYXZBeEFDR2dOVlUwUTRISERHcndNPSIsW1siVExWIiwiMjAyNC0wNC0xMCIsIlBSRyIsbnVsbCwiNkgiLCI3NjEiXSxbIlBSRyIsIjIwMjQtMDQtMTAiLCJDREciLG51bGwsIk9LIiwiNzY2Il1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-10 05:35'}, 'arrival_airport': {'name': 'Václav Havel Airport Prague', 'id': 'PRG', 'time': '2024-04-10 08:40'}, 'duration': 245, 'airplane': 'Boeing 737', 'airline': 'Smartwings', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QS.png', 'travel_class': 'Economy', 'flight_number': 'QS 1287', 'ticket_also_sold_by': ['CSA'], 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'Stream media to your device', 'Carbon emissions estimate: 193 kg']}, {'departure_airport': {'name': 'Václav Havel Airport Prague', 'id': 'PRG', 'time': '2024-04-10 12:25'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-04-10 14:15'}, 'duration': 110, 'airplane': 'Airbus A320', 'airline': 'CSA', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OK.png', 'travel_class': 'Economy', 'flight_number': 'OK 760', 'ticket_also_sold_by': ['Smartwings'], 'legroom': '28 in', 'extensions': ['Below average legroom (28 in)', 'Carbon emissions estimate: 89 kg']}], 'layovers': [{'duration': 225, 'name': 'Václav Havel Airport Prague', 'id': 'PRG'}], 'total_duration': 580, 'carbon_emissions': {'this_flight': 283000, 'typical_for_this_route': 273000, 'difference_percent': 4}, 'price': 609, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'extensions': ['Checked baggage not included in price', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ3hSVXpFeU9EZDhUMHMzTmpBYUN3akwyd01RQWhvRFZWTkVPQnh3eTlzRCIsW1siVExWIiwiMjAyNC0wNC0xMCIsIlBSRyIsbnVsbCwiUVMiLCIxMjg3Il0sWyJQUkciLCIyMDI0LTA0LTEwIiwiQ0RHIixudWxsLCJPSyIsIjc2MCJdXV0='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-10 12:10'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-04-10 16:00'}, 'duration': 290, 'airplane': 'Boeing 787', 'airline': 'El Al', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'travel_class': 'Economy', 'flight_number': 'LY 327', 'ticket_also_sold_by': ['Air France'], 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 238 kg']}], 'total_duration': 290, 'carbon_emissions': {'this_flight': 239000, 'typical_for_this_route': 273000, 'difference_percent': -12}, 'price': 764, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'extensions': ['Checked baggage for a fee', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ1ZNV1RNeU54b0xDT3ZVQkJBQ0dnTlZVMFE0SEhEcjFBUT0iLFtbIlRMViIsIjIwMjQtMDQtMTAiLCJDREciLG51bGwsIkxZIiwiMzI3Il1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-10 16:30'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2024-04-10 20:15'}, 'duration': 285, 'airplane': 'Airbus A350', 'airline': 'Air France', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/AF.png', 'travel_class': 'Economy', 'flight_number': 'AF 963', 'ticket_also_sold_by': ['El Al'], 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 210 kg']}], 'total_duration': 285, 'carbon_emissions': {'this_flight': 210000, 'typical_for_this_route': 273000, 'difference_percent': -23}, 'price': 924, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/AF.png', 'extensions': ['Checked baggage for a fee', 'Fare non-refundable, taxes may be refundable', 'Ticket changes for a fee', 'Bag and fare conditions depend on the return flight'], 'departure_token': 'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ1ZCUmprMk14b0xDSnZSQlJBQ0dnTlZVMFE0SEhDYjBRVT0iLFtbIlRMViIsIjIwMjQtMDQtMTAiLCJDREciLG51bGwsIkFGIiwiOTYzIl1dXQ=='}], 'price_insights': {'lowest_price': 418, 'price_level': 'typical', 'typical_price_range': [240, 425], 'price_history': [[1705442400, 142], [1705528800, 145], [1705615200, 145], [1705701600, 145], [1705788000, 145], [1705874400, 145], [1705960800, 156], [1706047200, 148], [1706133600, 157], [1706220000, 159], [1706306400, 163], [1706392800, 163], [1706479200, 163], [1706565600, 153], [1706652000, 153], [1706738400, 153], [1706824800, 168], [1706911200, 198], [1706997600, 198], [1707084000, 200], [1707170400, 202], [1707256800, 208], [1707343200, 208], [1707429600, 208], [1707516000, 208], [1707602400, 208], [1707688800, 208], [1707775200, 208], [1707861600, 208], [1707948000, 208], [1708034400, 208], [1708120800, 208], [1708207200, 208], [1708293600, 208], [1708380000, 208], [1708466400, 208], [1708552800, 338], [1708639200, 338], [1708725600, 398], [1708812000, 398], [1708898400, 397], [1708984800, 385], [1709071200, 382], [1709157600, 398], [1709244000, 397], [1709330400, 398], [1709416800, 407], [1709503200, 386], [1709589600, 400], [1709676000, 394], [1709762400, 327], [1709848800, 378], [1709935200, 398], [1710021600, 410], [1710108000, 413], [1710194400, 371], [1710280800, 384], [1710367200, 427], [1710453600, 427], [1710540000, 433], [1710626400, 418]]}}
    Accommodation Info: Top Hotels in Paris:

1. Hôtel La Comtesse Tour Eiffel
   - Link: http://www.comtesse-hotel.com/
   - Check-in Time: 3:00 PM
   - Check-out Time: 12:00 PM
   - Rate Per Night (Lowest): $324
   - Total Rate (Lowest): $1,619
   - Nearby Places: Hôtel des Invalides, Paris Charles de Gaulle Airport

2. Citadines Apart’hotel Tour Eiffel Paris
   - Link: https://www.discoverasr.com/citadines/france/citadines-tour-eiffel-paris?utm_source=google&utm_medium=gmb&utm_campaign=CitadinesTourEiffelParis&y_source=1_NTg1OTcwOTctNzE1LWxvY2F0aW9uLndlYnNpdGU%3D
   - Check-in Time: 3:00 PM
   - Check-out Time: 11:00 AM
   - Rate Per Night (Lowest): $217
   - Total Rate (Lowest): $1,084
   - Nearby Places: Musée Rodin, La Motte - Picquet Grenelle, Paris Charles de Gaulle Airport, Sushi Shop

3. InterContinental Paris - Le Grand, an IHG Hotel
   - Link: https://www.ihg.com/intercontinental/hotels/gb/en//paris/parhb/hoteldetail
   - Check-in Time: 2:00 PM
   - Check-out Time: 12:00 PM
   - Rate Per Night (Lowest): $526
   - Total Rate (Lowest): $2,632
   - Nearby Places: Palais Garnier, Opéra, Paris Charles de Gaulle Airport, Rivages

4. Courtyard by Marriott Paris Gare de Lyon
   - Link: https://www.marriott.com/en-us/hotels/pargl-courtyard-paris-gare-de-lyon/overview/?scid=f2ae0541-1279-4f24-b197-a979c79310b0
   - Check-in Time: 3:00 PM
   - Check-out Time: 12:00 PM
   - Rate Per Night (Lowest): $289
   - Total Rate (Lowest): $1,447
   - Nearby Places: Gare de Lyon, Paris Charles de Gaulle Airport, Mangiamo italiano

5. Hôtel Mistral
   - Link: https://www.hotel-mistral-paris.com/?utm_source=Google&utm_medium=Mybusiness
   - Check-in Time: 2:00 PM
   - Check-out Time: 12:00 PM
   - Rate Per Night (Lowest): $180
   - Total Rate (Lowest): $899
   - Nearby Places: Montparnasse Tower, Gaîté, Paris Charles de Gaulle Airport, Brasserie Saigon
    how to arrange the activities: Day 1:
- Visit Disneyland Paris
- Lunch at Angelina
- Dinner at Ciel de Paris

Day 2:
- Visit The Paris Catacombs
- Lunch at Cafe de Paris Friedland
- Dinner at Gigi Paris

Day 3:
- Visit Paris by Mouth
- Lunch at L' Entrecote de Paris
- Dinner at Alleno Paris

Day 4:
- Visit ExperienceFirst Paris
- Lunch at Au Vieux Paris
- Dinner at Pizzamore Paris

Day 5:
- Visit Galeries Lafayette Paris Haussmann
- Lunch at Big Bus Paris
- Dinner at Cesar Paris

Please note that these plans involve some traveling, but they aim to provide a mix of attractions and dining experiences without repeating locations. Enjoy your trip!
    Activities Info: [{'location_id': '189258', 'name': 'Disneyland Paris', 'address_obj': {'street1': 'Boulevard de Parc', 'street2': '', 'city': 'Marne-la-Vallee', 'country': 'France', 'postalcode': '77700', 'address_string': 'Boulevard de Parc, 77700, Marne-la-Vallee France'}}, {'location_id': '189229', 'name': 'The Paris Catacombs', 'address_obj': {'street1': '1 Avenue du Colonel Henri Rol-Tanguy', 'city': 'Paris', 'country': 'France', 'postalcode': '75014', 'address_string': '1 Avenue du Colonel Henri Rol-Tanguy, 75014 Paris France'}}, {'location_id': '2323543', 'name': 'Paris Metro', 'address_obj': {'street2': '', 'city': 'Paris', 'country': 'France', 'address_string': 'Paris France'}}, {'location_id': '2613395', 'name': 'Paris by Mouth', 'address_obj': {'city': 'Paris', 'country': 'France', 'postalcode': '75004', 'address_string': '75004 Paris France'}}, {'location_id': '12103860', 'name': 'ExperienceFirst Paris', 'address_obj': {'city': 'Paris', 'country': 'France', 'postalcode': '75007', 'address_string': '75007 Paris France'}}, {'location_id': '189193', 'name': 'Galeries Lafayette Paris Haussmann', 'address_obj': {'street1': '40 Boulevard Haussmann', 'street2': '', 'city': 'Paris', 'country': 'France', 'postalcode': '75009', 'address_string': '40 Boulevard Haussmann, 75009 Paris France'}}, {'location_id': '1008070', 'name': 'Big Bus Paris', 'address_obj': {'street1': '11 avenue de l Opera', 'street2': 'Stop 1', 'city': 'Paris', 'country': 'France', 'postalcode': '75001', 'address_string': '11 avenue de l Opera Stop 1, 75001 Paris France'}}, {'location_id': '188679', 'name': 'Cathedrale Notre-Dame de Paris', 'address_obj': {'street1': '6 Parvis Notre-Dame', 'street2': 'Place Jean-Paul II', 'city': 'Paris', 'country': 'France', 'postalcode': '75004', 'address_string': '6 Parvis Notre-Dame Place Jean-Paul II, 75004 Paris France'}}, {'location_id': '585912', 'name': 'Tootbus Paris', 'address_obj': {'street1': '12 rue Auber', 'city': 'Paris', 'country': 'France', 'postalcode': '75009', 'address_string': '12 rue Auber, 75009 Paris France'}}, {'location_id': '292257', 'name': 'Le Marais', 'address_obj': {'street1': 'Le Marais', 'street2': '3e Arrondissement', 'city': 'Paris', 'country': 'France', 'postalcode': '75003', 'address_string': 'Le Marais 3e Arrondissement, 75003 Paris France'}}, {'location_id': '7621672', 'name': 'Bustronome Paris', 'address_obj': {'street1': '2 avenue Kleber', 'city': 'Paris', 'country': 'France', 'postalcode': '75116', 'address_string': '2 avenue Kleber, 75116 Paris France'}}, {'location_id': '695078', 'name': 'Angelina', 'address_obj': {'street1': '226 rue de Rivoli', 'street2': '', 'city': 'Paris', 'country': 'France', 'postalcode': '75001', 'address_string': '226 rue de Rivoli, 75001 Paris France'}}, {'location_id': '23801439', 'name': 'Gigi Paris', 'address_obj': {'street1': '15 avenue Montaigne', 'city': 'Paris', 'country': 'France', 'postalcode': '75008', 'address_string': '15 avenue Montaigne, 75008 Paris France'}}, {'location_id': '796575', 'name': 'Ciel de Paris', 'address_obj': {'street1': '33 avenue du Maine', 'street2': '56th Floor', 'city': 'Paris', 'country': 'France', 'postalcode': '75015', 'address_string': '33 avenue du Maine 56th Floor, 75015 Paris France'}}, {'location_id': '21389323', 'name': 'Pizzamore Paris', 'address_obj': {'street1': '121 Avenue Du Maine', 'city': 'Paris', 'country': 'France', 'postalcode': '75014', 'address_string': '121 Avenue Du Maine, 75014 Paris France'}}, {'location_id': '783458', 'name': "L' Entrecote de Paris", 'address_obj': {'street1': '29 Rue de Marignan', 'city': 'Paris', 'country': 'France', 'postalcode': '75008', 'address_string': '29 Rue de Marignan, 75008 Paris France'}}, {'location_id': '7205470', 'name': 'Alleno Paris', 'address_obj': {'street1': '8 avenue Dutuit', 'street2': 'Pavillon Ledoyen', 'city': 'Paris', 'country': 'France', 'postalcode': '75008', 'address_string': '8 avenue Dutuit Pavillon Ledoyen, 75008 Paris France'}}, {'location_id': '2000672', 'name': 'Cesar Paris', 'address_obj': {'street1': '12 avenue de Wagram', 'city': 'Paris', 'country': 'France', 'postalcode': '75008', 'address_string': '12 avenue de Wagram, 75008 Paris France'}}, {'location_id': '1390891', 'name': 'Au Vieux Paris', 'address_obj': {'street1': '24 rue Chanoinesse', 'street2': '', 'city': 'Paris', 'country': 'France', 'postalcode': '75004', 'address_string': '24 rue Chanoinesse, 75004 Paris France'}}, {'location_id': '7254376', 'name': 'Cafe de Paris Friedland', 'address_obj': {'street1': '45 avenue de Friedland', 'city': 'Paris', 'country': 'France', 'postalcode': '75008', 'address_string': '45 avenue de Friedland, 75008 Paris France'}}]
    activities websites: [{'location_id': '189258', 'name': 'Disneyland Paris', 'location': (48.872417, 2.776952), 'website': 'https://www.disneylandparis.com/'}, {'location_id': '189229', 'name': 'The Paris Catacombs', 'location': (48.83387, 2.332481), 'website': 'http://www.catacombes.paris.fr/'}, {'location_id': '2323543', 'name': 'Paris Metro', 'location': (48.864166, 2.330278), 'website': 'http://www.ratp.fr'}, {'location_id': '2613395', 'name': 'Paris by Mouth', 'location': (48.85627, 2.35661), 'website': 'http://parisbymouth.com/food-wine-tours/'}, {'location_id': '12103860', 'name': 'ExperienceFirst Paris', 'location': (48.85694, 2.292087), 'website': 'https://www.exp1.com/paris-tours/'}, {'location_id': '189193', 'name': 'Galeries Lafayette Paris Haussmann', 'location': (48.873596, 2.33215), 'website': 'http://haussmann.galerieslafayette.com/'}, {'location_id': '1008070', 'name': 'Big Bus Paris', 'location': (48.86527, 2.33439), 'website': 'http://www.bigbustours.com/en/paris/paris-bus-tours/'}, {'location_id': '188679', 'name': 'Cathedrale Notre-Dame de Paris', 'location': (48.853, 2.3498), 'website': 'https://www.notredamedeparis.fr/'}, {'location_id': '585912', 'name': 'Tootbus Paris', 'location': (48.872574, 2.328803), 'website': 'http://www.tootbus.com'}, {'location_id': '292257', 'name': 'Le Marais', 'location': (48.85879, 2.358595), 'website': 'N/A'}, {'location_id': '7621672', 'name': 'Bustronome Paris', 'location': (48.873188, 2.2945), 'website': 'http://www.bustronome.com/'}, {'location_id': '695078', 'name': 'Angelina', 'location': (48.865074, 2.328488), 'website': 'http://www.angelina-paris.fr/?y_source=1_MTE5MzAwODYtNzY5LWxvY2F0aW9uLndlYnNpdGU%3D'}, {'location_id': '23801439', 'name': 'Gigi Paris', 'location': (48.865707, 2.30314), 'website': 'https://gigi-restaurant.com/?utm_source=Yext&utm_medium=ExtNet&y_source=1_MjU3NjI3OTMtNzY5LWxvY2F0aW9uLndlYnNpdGU%3D'}, {'location_id': '796575', 'name': 'Ciel de Paris', 'location': (48.84235, 2.321931), 'website': 'http://www.cieldeparis.com/'}, {'location_id': '21389323', 'name': 'Pizzamore Paris', 'location': (48.835537, 2.324001), 'website': 'https://pizzamoreparis.fr/'}, {'location_id': '783458', 'name': "L' Entrecote de Paris", 'location': (48.86989, 2.306535), 'website': 'http://lentrecotedeparis.fr'}, {'location_id': '7205470', 'name': 'Alleno Paris', 'location': (48.866096, 2.316145), 'website': 'http://www.yannick-alleno.com/fr/restaurants-reservation/restaurant-3-etoiles-paris.html'}, {'location_id': '2000672', 'name': 'Cesar Paris', 'location': (48.87587, 2.296569), 'website': 'http://www.cesar-restaurant.com/'}, {'location_id': '1390891', 'name': 'Au Vieux Paris', 'location': (48.854176, 2.350185), 'website': 'http://www.restaurantauvieuxparis.fr'}, {'location_id': '7254376', 'name': 'Cafe de Paris Friedland', 'location': (48.874023, 2.29773), 'website': 'http://restaurant-lecafedeparis.com/fr'}]
2024-03-17 19:21:22,746 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'Destination: Paris\n    Budget: 5000\n    Dates: From 2024-04-10 to 2024-04-15\n    Flights Info: {\'search_metadata\': {\'id\': \'65f72671d3aba26c9dda2264\', \'status\': \'Success\', \'json_endpoint\': \'https://serpapi.com/searches/37dfa91bc5ebd09e/65f72671d3aba26c9dda2264.json\', \'created_at\': \'2024-03-17 17:20:49 UTC\', \'processed_at\': \'2024-03-17 17:20:49 UTC\', \'google_flights_url\': \'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&q=Flights+to+CDG+from+TLV+on+2024-04-10+through+2024-04-15\', \'raw_html_file\': \'https://serpapi.com/searches/37dfa91bc5ebd09e/65f72671d3aba26c9dda2264.html\', \'prettify_html_file\': \'https://serpapi.com/searches/37dfa91bc5ebd09e/65f72671d3aba26c9dda2264.prettify\', \'total_time_taken\': 0.93}, \'search_parameters\': {\'engine\': \'google_flights\', \'hl\': \'en\', \'gl\': \'us\', \'departure_id\': \'TLV\', \'arrival_id\': \'CDG\', \'outbound_date\': \'2024-04-10\', \'return_date\': \'2024-04-15\', \'currency\': \'USD\'}, \'best_flights\': [{\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-10 17:15\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-04-10 21:10\'}, \'duration\': 295, \'airplane\': \'Boeing 737\', \'airline\': \'El Al\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LY 325\', \'ticket_also_sold_by\': [\'Air France\'], \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat power & USB outlets\', \'Stream media to your device\', \'Carbon emissions estimate: 273 kg\']}], \'total_duration\': 295, \'carbon_emissions\': {\'this_flight\': 273000, \'typical_for_this_route\': 273000, \'difference_percent\': 0}, \'price\': 699, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'extensions\': [\'Checked baggage for a fee\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ1ZNV1RNeU5Sb0xDSWVpQkJBQ0dnTlZVMFE0SEhDSG9nUT0iLFtbIlRMViIsIjIwMjQtMDQtMTAiLCJDREciLG51bGwsIkxZIiwiMzI1Il1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-10 05:50\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-04-10 09:50\'}, \'duration\': 300, \'airplane\': \'Boeing 737\', \'airline\': \'El Al\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LY 319\', \'ticket_also_sold_by\': [\'Air France\'], \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat power & USB outlets\', \'Stream media to your device\', \'Carbon emissions estimate: 273 kg\']}], \'total_duration\': 300, \'carbon_emissions\': {\'this_flight\': 273000, \'typical_for_this_route\': 273000, \'difference_percent\': 0}, \'price\': 764, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'extensions\': [\'Checked baggage for a fee\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ1ZNV1RNeE9Sb0xDT3ZVQkJBQ0dnTlZVMFE0SEhEcjFBUT0iLFtbIlRMViIsIjIwMjQtMDQtMTAiLCJDREciLG51bGwsIkxZIiwiMzE5Il1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-10 08:00\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-04-10 12:00\'}, \'duration\': 300, \'airplane\': \'Boeing 737\', \'airline\': \'El Al\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LY 221\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'In-seat USB outlet\', \'Stream media to your device\', \'Carbon emissions estimate: 273 kg\']}], \'total_duration\': 300, \'carbon_emissions\': {\'this_flight\': 274000, \'typical_for_this_route\': 273000, \'difference_percent\': 0}, \'price\': 764, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'extensions\': [\'Checked baggage for a fee\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ1ZNV1RJeU1Sb0xDT3ZVQkJBQ0dnTlZVMFE0SEhEcjFBUT0iLFtbIlRMViIsIjIwMjQtMDQtMTAiLCJDREciLG51bGwsIkxZIiwiMjIxIl1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-10 10:00\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-04-10 13:50\'}, \'duration\': 290, \'airplane\': \'Boeing 787\', \'airline\': \'El Al\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LY 323\', \'ticket_also_sold_by\': [\'Air France\'], \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'Wi-Fi for a fee\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 238 kg\']}], \'total_duration\': 290, \'carbon_emissions\': {\'this_flight\': 239000, \'typical_for_this_route\': 273000, \'difference_percent\': -12}, \'price\': 764, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'extensions\': [\'Checked baggage for a fee\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ1ZNV1RNeU14b0xDT3ZVQkJBQ0dnTlZVMFE0SEhEcjFBUT0iLFtbIlRMViIsIjIwMjQtMDQtMTAiLCJDREciLG51bGwsIkxZIiwiMzIzIl1dXQ==\'}], \'other_flights\': [{\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-10 18:50\'}, \'arrival_airport\': {\'name\': \'Warsaw Chopin Airport\', \'id\': \'WAW\', \'time\': \'2024-04-10 21:50\'}, \'duration\': 240, \'airplane\': \'Boeing 737MAX 8 Passenger\', \'airline\': \'LOT\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LO.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LO 154\', \'ticket_also_sold_by\': [\'El Al\'], \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'In-seat power & USB outlets\', \'Stream media to your device\', \'Carbon emissions estimate: 170 kg\'], \'often_delayed_by_over_30_min\': True}, {\'departure_airport\': {\'name\': \'Warsaw Chopin Airport\', \'id\': \'WAW\', \'time\': \'2024-04-11 07:20\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-04-11 09:50\'}, \'duration\': 150, \'airplane\': \'Boeing 737\', \'airline\': \'LOT\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LO.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LO 331\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'In-seat power outlet\', \'Stream media to your device\', \'Carbon emissions estimate: 121 kg\']}], \'layovers\': [{\'duration\': 570, \'name\': \'Warsaw Chopin Airport\', \'id\': \'WAW\', \'overnight\': True}], \'total_duration\': 960, \'carbon_emissions\': {\'this_flight\': 292000, \'typical_for_this_route\': 273000, \'difference_percent\': 7}, \'price\': 418, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LO.png\', \'extensions\': [\'Checked baggage for a fee\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ3RNVHpFMU5IeE1Uek16TVJvTENKdkdBaEFDR2dOVlUwUTRISENieGdJPSIsW1siVExWIiwiMjAyNC0wNC0xMCIsIldBVyIsbnVsbCwiTE8iLCIxNTQiXSxbIldBVyIsIjIwMjQtMDQtMTEiLCJDREciLG51bGwsIkxPIiwiMzMxIl1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-10 09:25\'}, \'arrival_airport\': {\'name\': \'Sofia International Airport\', \'id\': \'SOF\', \'time\': \'2024-04-10 12:10\'}, \'duration\': 165, \'airline\': \'Wizz Air\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/W6.png\', \'travel_class\': \'Economy\', \'flight_number\': \'W6 4428\', \'legroom\': \'28 in\', \'extensions\': [\'Below average legroom (28 in)\', \'Carbon emissions estimate: 100 kg\']}, {\'departure_airport\': {\'name\': \'Sofia International Airport\', \'id\': \'SOF\', \'time\': \'2024-04-10 15:15\'}, \'arrival_airport\': {\'name\': \'London Luton Airport\', \'id\': \'LTN\', \'time\': \'2024-04-10 16:50\'}, \'duration\': 215, \'airline\': \'Wizz Air\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/W6.png\', \'travel_class\': \'Economy\', \'flight_number\': \'W6 4303\', \'legroom\': \'28 in\', \'extensions\': [\'Below average legroom (28 in)\', \'Carbon emissions estimate: 153 kg\']}, {\'departure_airport\': {\'name\': \'London Luton Airport\', \'id\': \'LTN\', \'time\': \'2024-04-10 19:00\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-04-10 21:20\'}, \'duration\': 80, \'airline\': \'easyJet\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/U2.png\', \'travel_class\': \'Economy\', \'flight_number\': \'U2 2439\', \'legroom\': \'29 in\', \'extensions\': [\'Below average legroom (29 in)\', \'Carbon emissions estimate: 53 kg\'], \'often_delayed_by_over_30_min\': True}], \'layovers\': [{\'duration\': 185, \'name\': \'Sofia International Airport\', \'id\': \'SOF\'}, {\'duration\': 130, \'name\': \'London Luton Airport\', \'id\': \'LTN\'}], \'total_duration\': 775, \'carbon_emissions\': {\'this_flight\': 307000, \'typical_for_this_route\': 273000, \'difference_percent\': 12}, \'price\': 488, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'extensions\': [\'Checked baggage for a fee\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFaFJYTmpRME1qaDhWelkwTXpBemZGVXlNalF6T1JvTENMMzhBaEFDR2dOVlUwUTRISEM5L0FJPSIsW1siVExWIiwiMjAyNC0wNC0xMCIsIlNPRiIsbnVsbCwiVzYiLCI0NDI4Il0sWyJTT0YiLCIyMDI0LTA0LTEwIiwiTFROIixudWxsLCJXNiIsIjQzMDMiXSxbIkxUTiIsIjIwMjQtMDQtMTAiLCJDREciLG51bGwsIlUyIiwiMjQzOSJdXV0=\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-10 13:30\'}, \'arrival_airport\': {\'name\': \'Václav Havel Airport Prague\', \'id\': \'PRG\', \'time\': \'2024-04-10 16:35\'}, \'duration\': 245, \'airplane\': \'Airbus A320\', \'airline\': \'Israir Airlines\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/6H.png\', \'travel_class\': \'Economy\', \'flight_number\': \'6H 761\', \'ticket_also_sold_by\': [\'Smartwings\'], \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Carbon emissions estimate: 206 kg\']}, {\'departure_airport\': {\'name\': \'Václav Havel Airport Prague\', \'id\': \'PRG\', \'time\': \'2024-04-10 17:35\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-04-10 19:25\'}, \'duration\': 110, \'airplane\': \'Airbus A320\', \'airline\': \'CSA\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OK.png\', \'travel_class\': \'Economy\', \'flight_number\': \'OK 766\', \'ticket_also_sold_by\': [\'Smartwings\'], \'legroom\': \'28 in\', \'extensions\': [\'Below average legroom (28 in)\', \'Carbon emissions estimate: 89 kg\']}], \'layovers\': [{\'duration\': 60, \'name\': \'Václav Havel Airport Prague\', \'id\': \'PRG\'}], \'total_duration\': 415, \'carbon_emissions\': {\'this_flight\': 296000, \'typical_for_this_route\': 273000, \'difference_percent\': 8}, \'price\': 553, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'extensions\': [\'Checked baggage for a fee\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ3MyU0RjMk1YeFBTemMyTmhvTENNYXZBeEFDR2dOVlUwUTRISERHcndNPSIsW1siVExWIiwiMjAyNC0wNC0xMCIsIlBSRyIsbnVsbCwiNkgiLCI3NjEiXSxbIlBSRyIsIjIwMjQtMDQtMTAiLCJDREciLG51bGwsIk9LIiwiNzY2Il1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-10 05:35\'}, \'arrival_airport\': {\'name\': \'Václav Havel Airport Prague\', \'id\': \'PRG\', \'time\': \'2024-04-10 08:40\'}, \'duration\': 245, \'airplane\': \'Boeing 737\', \'airline\': \'Smartwings\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/QS.png\', \'travel_class\': \'Economy\', \'flight_number\': \'QS 1287\', \'ticket_also_sold_by\': [\'CSA\'], \'legroom\': \'29 in\', \'extensions\': [\'Below average legroom (29 in)\', \'Stream media to your device\', \'Carbon emissions estimate: 193 kg\']}, {\'departure_airport\': {\'name\': \'Václav Havel Airport Prague\', \'id\': \'PRG\', \'time\': \'2024-04-10 12:25\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-04-10 14:15\'}, \'duration\': 110, \'airplane\': \'Airbus A320\', \'airline\': \'CSA\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OK.png\', \'travel_class\': \'Economy\', \'flight_number\': \'OK 760\', \'ticket_also_sold_by\': [\'Smartwings\'], \'legroom\': \'28 in\', \'extensions\': [\'Below average legroom (28 in)\', \'Carbon emissions estimate: 89 kg\']}], \'layovers\': [{\'duration\': 225, \'name\': \'Václav Havel Airport Prague\', \'id\': \'PRG\'}], \'total_duration\': 580, \'carbon_emissions\': {\'this_flight\': 283000, \'typical_for_this_route\': 273000, \'difference_percent\': 4}, \'price\': 609, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'extensions\': [\'Checked baggage not included in price\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ3hSVXpFeU9EZDhUMHMzTmpBYUN3akwyd01RQWhvRFZWTkVPQnh3eTlzRCIsW1siVExWIiwiMjAyNC0wNC0xMCIsIlBSRyIsbnVsbCwiUVMiLCIxMjg3Il0sWyJQUkciLCIyMDI0LTA0LTEwIiwiQ0RHIixudWxsLCJPSyIsIjc2MCJdXV0=\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-10 12:10\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-04-10 16:00\'}, \'duration\': 290, \'airplane\': \'Boeing 787\', \'airline\': \'El Al\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LY 327\', \'ticket_also_sold_by\': [\'Air France\'], \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'Wi-Fi for a fee\', \'In-seat power & USB outlets\', \'On-demand video\', \'Carbon emissions estimate: 238 kg\']}], \'total_duration\': 290, \'carbon_emissions\': {\'this_flight\': 239000, \'typical_for_this_route\': 273000, \'difference_percent\': -12}, \'price\': 764, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'extensions\': [\'Checked baggage for a fee\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ1ZNV1RNeU54b0xDT3ZVQkJBQ0dnTlZVMFE0SEhEcjFBUT0iLFtbIlRMViIsIjIwMjQtMDQtMTAiLCJDREciLG51bGwsIkxZIiwiMzI3Il1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-10 16:30\'}, \'arrival_airport\': {\'name\': \'Paris Charles de Gaulle Airport\', \'id\': \'CDG\', \'time\': \'2024-04-10 20:15\'}, \'duration\': 285, \'airplane\': \'Airbus A350\', \'airline\': \'Air France\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/AF.png\', \'travel_class\': \'Economy\', \'flight_number\': \'AF 963\', \'ticket_also_sold_by\': [\'El Al\'], \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'Wi-Fi for a fee\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 210 kg\']}], \'total_duration\': 285, \'carbon_emissions\': {\'this_flight\': 210000, \'typical_for_this_route\': 273000, \'difference_percent\': -23}, \'price\': 924, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/AF.png\', \'extensions\': [\'Checked baggage for a fee\', \'Fare non-refundable, taxes may be refundable\', \'Ticket changes for a fee\', \'Bag and fare conditions depend on the return flight\'], \'departure_token\': \'WyJDalJJY21Sak9GOUJVVTAzTFdkQlNUZHBUSGRDUnkwdExTMHRMUzB0TFMxNWJHVmhOVUZCUVVGQlIxZ3pTbTVKUlc5bldWTkJFZ1ZCUmprMk14b0xDSnZSQlJBQ0dnTlZVMFE0SEhDYjBRVT0iLFtbIlRMViIsIjIwMjQtMDQtMTAiLCJDREciLG51bGwsIkFGIiwiOTYzIl1dXQ==\'}], \'price_insights\': {\'lowest_price\': 418, \'price_level\': \'typical\', \'typical_price_range\': [240, 425], \'price_history\': [[1705442400, 142], [1705528800, 145], [1705615200, 145], [1705701600, 145], [1705788000, 145], [1705874400, 145], [1705960800, 156], [1706047200, 148], [1706133600, 157], [1706220000, 159], [1706306400, 163], [1706392800, 163], [1706479200, 163], [1706565600, 153], [1706652000, 153], [1706738400, 153], [1706824800, 168], [1706911200, 198], [1706997600, 198], [1707084000, 200], [1707170400, 202], [1707256800, 208], [1707343200, 208], [1707429600, 208], [1707516000, 208], [1707602400, 208], [1707688800, 208], [1707775200, 208], [1707861600, 208], [1707948000, 208], [1708034400, 208], [1708120800, 208], [1708207200, 208], [1708293600, 208], [1708380000, 208], [1708466400, 208], [1708552800, 338], [1708639200, 338], [1708725600, 398], [1708812000, 398], [1708898400, 397], [1708984800, 385], [1709071200, 382], [1709157600, 398], [1709244000, 397], [1709330400, 398], [1709416800, 407], [1709503200, 386], [1709589600, 400], [1709676000, 394], [1709762400, 327], [1709848800, 378], [1709935200, 398], [1710021600, 410], [1710108000, 413], [1710194400, 371], [1710280800, 384], [1710367200, 427], [1710453600, 427], [1710540000, 433], [1710626400, 418]]}}\n    Accommodation Info: Top Hotels in Paris:\n\n1. Hôtel La Comtesse Tour Eiffel\n   - Link: http://www.comtesse-hotel.com/\n   - Check-in Time: 3:00 PM\n   - Check-out Time: 12:00 PM\n   - Rate Per Night (Lowest): $324\n   - Total Rate (Lowest): $1,619\n   - Nearby Places: Hôtel des Invalides, Paris Charles de Gaulle Airport\n\n2. Citadines Apart’hotel Tour Eiffel Paris\n   - Link: https://www.discoverasr.com/citadines/france/citadines-tour-eiffel-paris?utm_source=google&utm_medium=gmb&utm_campaign=CitadinesTourEiffelParis&y_source=1_NTg1OTcwOTctNzE1LWxvY2F0aW9uLndlYnNpdGU%3D\n   - Check-in Time: 3:00 PM\n   - Check-out Time: 11:00 AM\n   - Rate Per Night (Lowest): $217\n   - Total Rate (Lowest): $1,084\n   - Nearby Places: Musée Rodin, La Motte - Picquet Grenelle, Paris Charles de Gaulle Airport, Sushi Shop\n\n3. InterContinental Paris - Le Grand, an IHG Hotel\n   - Link: https://www.ihg.com/intercontinental/hotels/gb/en//paris/parhb/hoteldetail\n   - Check-in Time: 2:00 PM\n   - Check-out Time: 12:00 PM\n   - Rate Per Night (Lowest): $526\n   - Total Rate (Lowest): $2,632\n   - Nearby Places: Palais Garnier, Opéra, Paris Charles de Gaulle Airport, Rivages\n\n4. Courtyard by Marriott Paris Gare de Lyon\n   - Link: https://www.marriott.com/en-us/hotels/pargl-courtyard-paris-gare-de-lyon/overview/?scid=f2ae0541-1279-4f24-b197-a979c79310b0\n   - Check-in Time: 3:00 PM\n   - Check-out Time: 12:00 PM\n   - Rate Per Night (Lowest): $289\n   - Total Rate (Lowest): $1,447\n   - Nearby Places: Gare de Lyon, Paris Charles de Gaulle Airport, Mangiamo italiano\n\n5. Hôtel Mistral\n   - Link: https://www.hotel-mistral-paris.com/?utm_source=Google&utm_medium=Mybusiness\n   - Check-in Time: 2:00 PM\n   - Check-out Time: 12:00 PM\n   - Rate Per Night (Lowest): $180\n   - Total Rate (Lowest): $899\n   - Nearby Places: Montparnasse Tower, Gaîté, Paris Charles de Gaulle Airport, Brasserie Saigon\n    how to arrange the activities: Day 1:\n- Visit Disneyland Paris\n- Lunch at Angelina\n- Dinner at Ciel de Paris\n\nDay 2:\n- Visit The Paris Catacombs\n- Lunch at Cafe de Paris Friedland\n- Dinner at Gigi Paris\n\nDay 3:\n- Visit Paris by Mouth\n- Lunch at L\' Entrecote de Paris\n- Dinner at Alleno Paris\n\nDay 4:\n- Visit ExperienceFirst Paris\n- Lunch at Au Vieux Paris\n- Dinner at Pizzamore Paris\n\nDay 5:\n- Visit Galeries Lafayette Paris Haussmann\n- Lunch at Big Bus Paris\n- Dinner at Cesar Paris\n\nPlease note that these plans involve some traveling, but they aim to provide a mix of attractions and dining experiences without repeating locations. Enjoy your trip!\n    Activities Info: [{\'location_id\': \'189258\', \'name\': \'Disneyland Paris\', \'address_obj\': {\'street1\': \'Boulevard de Parc\', \'street2\': \'\', \'city\': \'Marne-la-Vallee\', \'country\': \'France\', \'postalcode\': \'77700\', \'address_string\': \'Boulevard de Parc, 77700, Marne-la-Vallee France\'}}, {\'location_id\': \'189229\', \'name\': \'The Paris Catacombs\', \'address_obj\': {\'street1\': \'1 Avenue du Colonel Henri Rol-Tanguy\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75014\', \'address_string\': \'1 Avenue du Colonel Henri Rol-Tanguy, 75014 Paris France\'}}, {\'location_id\': \'2323543\', \'name\': \'Paris Metro\', \'address_obj\': {\'street2\': \'\', \'city\': \'Paris\', \'country\': \'France\', \'address_string\': \'Paris France\'}}, {\'location_id\': \'2613395\', \'name\': \'Paris by Mouth\', \'address_obj\': {\'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75004\', \'address_string\': \'75004 Paris France\'}}, {\'location_id\': \'12103860\', \'name\': \'ExperienceFirst Paris\', \'address_obj\': {\'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75007\', \'address_string\': \'75007 Paris France\'}}, {\'location_id\': \'189193\', \'name\': \'Galeries Lafayette Paris Haussmann\', \'address_obj\': {\'street1\': \'40 Boulevard Haussmann\', \'street2\': \'\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75009\', \'address_string\': \'40 Boulevard Haussmann, 75009 Paris France\'}}, {\'location_id\': \'1008070\', \'name\': \'Big Bus Paris\', \'address_obj\': {\'street1\': \'11 avenue de l Opera\', \'street2\': \'Stop 1\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75001\', \'address_string\': \'11 avenue de l Opera Stop 1, 75001 Paris France\'}}, {\'location_id\': \'188679\', \'name\': \'Cathedrale Notre-Dame de Paris\', \'address_obj\': {\'street1\': \'6 Parvis Notre-Dame\', \'street2\': \'Place Jean-Paul II\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75004\', \'address_string\': \'6 Parvis Notre-Dame Place Jean-Paul II, 75004 Paris France\'}}, {\'location_id\': \'585912\', \'name\': \'Tootbus Paris\', \'address_obj\': {\'street1\': \'12 rue Auber\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75009\', \'address_string\': \'12 rue Auber, 75009 Paris France\'}}, {\'location_id\': \'292257\', \'name\': \'Le Marais\', \'address_obj\': {\'street1\': \'Le Marais\', \'street2\': \'3e Arrondissement\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75003\', \'address_string\': \'Le Marais 3e Arrondissement, 75003 Paris France\'}}, {\'location_id\': \'7621672\', \'name\': \'Bustronome Paris\', \'address_obj\': {\'street1\': \'2 avenue Kleber\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75116\', \'address_string\': \'2 avenue Kleber, 75116 Paris France\'}}, {\'location_id\': \'695078\', \'name\': \'Angelina\', \'address_obj\': {\'street1\': \'226 rue de Rivoli\', \'street2\': \'\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75001\', \'address_string\': \'226 rue de Rivoli, 75001 Paris France\'}}, {\'location_id\': \'23801439\', \'name\': \'Gigi Paris\', \'address_obj\': {\'street1\': \'15 avenue Montaigne\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75008\', \'address_string\': \'15 avenue Montaigne, 75008 Paris France\'}}, {\'location_id\': \'796575\', \'name\': \'Ciel de Paris\', \'address_obj\': {\'street1\': \'33 avenue du Maine\', \'street2\': \'56th Floor\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75015\', \'address_string\': \'33 avenue du Maine 56th Floor, 75015 Paris France\'}}, {\'location_id\': \'21389323\', \'name\': \'Pizzamore Paris\', \'address_obj\': {\'street1\': \'121 Avenue Du Maine\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75014\', \'address_string\': \'121 Avenue Du Maine, 75014 Paris France\'}}, {\'location_id\': \'783458\', \'name\': "L\' Entrecote de Paris", \'address_obj\': {\'street1\': \'29 Rue de Marignan\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75008\', \'address_string\': \'29 Rue de Marignan, 75008 Paris France\'}}, {\'location_id\': \'7205470\', \'name\': \'Alleno Paris\', \'address_obj\': {\'street1\': \'8 avenue Dutuit\', \'street2\': \'Pavillon Ledoyen\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75008\', \'address_string\': \'8 avenue Dutuit Pavillon Ledoyen, 75008 Paris France\'}}, {\'location_id\': \'2000672\', \'name\': \'Cesar Paris\', \'address_obj\': {\'street1\': \'12 avenue de Wagram\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75008\', \'address_string\': \'12 avenue de Wagram, 75008 Paris France\'}}, {\'location_id\': \'1390891\', \'name\': \'Au Vieux Paris\', \'address_obj\': {\'street1\': \'24 rue Chanoinesse\', \'street2\': \'\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75004\', \'address_string\': \'24 rue Chanoinesse, 75004 Paris France\'}}, {\'location_id\': \'7254376\', \'name\': \'Cafe de Paris Friedland\', \'address_obj\': {\'street1\': \'45 avenue de Friedland\', \'city\': \'Paris\', \'country\': \'France\', \'postalcode\': \'75008\', \'address_string\': \'45 avenue de Friedland, 75008 Paris France\'}}]\n    activities websites: [{\'location_id\': \'189258\', \'name\': \'Disneyland Paris\', \'location\': (48.872417, 2.776952), \'website\': \'https://www.disneylandparis.com/\'}, {\'location_id\': \'189229\', \'name\': \'The Paris Catacombs\', \'location\': (48.83387, 2.332481), \'website\': \'http://www.catacombes.paris.fr/\'}, {\'location_id\': \'2323543\', \'name\': \'Paris Metro\', \'location\': (48.864166, 2.330278), \'website\': \'http://www.ratp.fr\'}, {\'location_id\': \'2613395\', \'name\': \'Paris by Mouth\', \'location\': (48.85627, 2.35661), \'website\': \'http://parisbymouth.com/food-wine-tours/\'}, {\'location_id\': \'12103860\', \'name\': \'ExperienceFirst Paris\', \'location\': (48.85694, 2.292087), \'website\': \'https://www.exp1.com/paris-tours/\'}, {\'location_id\': \'189193\', \'name\': \'Galeries Lafayette Paris Haussmann\', \'location\': (48.873596, 2.33215), \'website\': \'http://haussmann.galerieslafayette.com/\'}, {\'location_id\': \'1008070\', \'name\': \'Big Bus Paris\', \'location\': (48.86527, 2.33439), \'website\': \'http://www.bigbustours.com/en/paris/paris-bus-tours/\'}, {\'location_id\': \'188679\', \'name\': \'Cathedrale Notre-Dame de Paris\', \'location\': (48.853, 2.3498), \'website\': \'https://www.notredamedeparis.fr/\'}, {\'location_id\': \'585912\', \'name\': \'Tootbus Paris\', \'location\': (48.872574, 2.328803), \'website\': \'http://www.tootbus.com\'}, {\'location_id\': \'292257\', \'name\': \'Le Marais\', \'location\': (48.85879, 2.358595), \'website\': \'N/A\'}, {\'location_id\': \'7621672\', \'name\': \'Bustronome Paris\', \'location\': (48.873188, 2.2945), \'website\': \'http://www.bustronome.com/\'}, {\'location_id\': \'695078\', \'name\': \'Angelina\', \'location\': (48.865074, 2.328488), \'website\': \'http://www.angelina-paris.fr/?y_source=1_MTE5MzAwODYtNzY5LWxvY2F0aW9uLndlYnNpdGU%3D\'}, {\'location_id\': \'23801439\', \'name\': \'Gigi Paris\', \'location\': (48.865707, 2.30314), \'website\': \'https://gigi-restaurant.com/?utm_source=Yext&utm_medium=ExtNet&y_source=1_MjU3NjI3OTMtNzY5LWxvY2F0aW9uLndlYnNpdGU%3D\'}, {\'location_id\': \'796575\', \'name\': \'Ciel de Paris\', \'location\': (48.84235, 2.321931), \'website\': \'http://www.cieldeparis.com/\'}, {\'location_id\': \'21389323\', \'name\': \'Pizzamore Paris\', \'location\': (48.835537, 2.324001), \'website\': \'https://pizzamoreparis.fr/\'}, {\'location_id\': \'783458\', \'name\': "L\' Entrecote de Paris", \'location\': (48.86989, 2.306535), \'website\': \'http://lentrecotedeparis.fr\'}, {\'location_id\': \'7205470\', \'name\': \'Alleno Paris\', \'location\': (48.866096, 2.316145), \'website\': \'http://www.yannick-alleno.com/fr/restaurants-reservation/restaurant-3-etoiles-paris.html\'}, {\'location_id\': \'2000672\', \'name\': \'Cesar Paris\', \'location\': (48.87587, 2.296569), \'website\': \'http://www.cesar-restaurant.com/\'}, {\'location_id\': \'1390891\', \'name\': \'Au Vieux Paris\', \'location\': (48.854176, 2.350185), \'website\': \'http://www.restaurantauvieuxparis.fr\'}, {\'location_id\': \'7254376\', \'name\': \'Cafe de Paris Friedland\', \'location\': (48.874023, 2.29773), \'website\': \'http://restaurant-lecafedeparis.com/fr\'}]I\'m planning a trip and need a detailed plan based on this information. Please create a comprehensive trip plan that includes in this order:1. The best flight option considering price and timing.2. Top 3 hotel recommendations based on the data.3. show now the budget that was left after the flight and hotel4. A day-by-day itinerary that: (in the first day take into account the arrival time of the flight in the planning)- Allocates activities and attractions based on their proximity (using the data).- Suggests dining options near each activity or attraction.- Utilizes the budget effectively, considering the cost of flights and accommodation.- Incorporates free time for shopping and exploration.- Include addresses and websites of attractions4. Ensure all recommendations are presented in a way that will be visually appealing on a webpage, using HTML formatting where appropriate (e.g., <b> for bold).Summarize the trip plan, ensuring it is well-organized and includes all relevant details.'}], 'model': 'gpt-4-0125-preview', 'temperature': 0.4}}
2024-03-17 19:21:22,747 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-17 19:21:22,747 - DEBUG - send_request_headers.complete
2024-03-17 19:21:22,747 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-17 19:21:22,747 - DEBUG - send_request_body.complete
2024-03-17 19:21:22,747 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-17 19:22:31,668 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:22:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-4-0125-preview'), (b'openai-organization', b'reichman-university-wxioss'), (b'openai-processing-ms', b'68411'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'800000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'792670'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'549ms'), (b'x-request-id', b'req_e276b2bd8b046641754d79dddb033319'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'865ea8b58e0b09c7-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 19:22:31,668 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-03-17 19:22:31,669 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-17 19:22:31,669 - DEBUG - receive_response_body.complete
2024-03-17 19:22:31,669 - DEBUG - response_closed.started
2024-03-17 19:22:31,669 - DEBUG - response_closed.complete
2024-03-17 19:22:31,669 - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-03-17 19:22:31,692 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': "I'm planning a trip to Paris. Can you help me to create a photo for the trip?", 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}}
2024-03-17 19:22:31,692 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-17 19:22:31,692 - DEBUG - send_request_headers.complete
2024-03-17 19:22:31,693 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-17 19:22:31,693 - DEBUG - send_request_body.complete
2024-03-17 19:22:31,693 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-17 19:22:46,770 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 17:22:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'reichman-university-wxioss'), (b'x-request-id', b'req_f16ab45352eb7e6841ff2ae0ccb6bc99'), (b'openai-processing-ms', b'14854'), (b'access-control-allow-origin', b'*'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'865eaa6469f509c7-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 19:22:46,771 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2024-03-17 19:22:46,771 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-17 19:22:46,771 - DEBUG - receive_response_body.complete
2024-03-17 19:22:46,771 - DEBUG - response_closed.started
2024-03-17 19:22:46,771 - DEBUG - response_closed.complete
2024-03-17 19:22:46,771 - DEBUG - HTTP Request: POST https://api.openai.com/v1/images/generations "200 OK"
2024-03-17 19:38:36,418 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:38:36,434 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:40:36,626 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:40:36,628 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:42:08,188 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:42:08,189 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:43:50,445 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:43:50,446 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 19:45:57,909 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 19:45:57,911 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:03:13,759 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:03:13,760 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:03:13,797 - DEBUG - connect_tcp.started host='serpapi.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:03:13,837 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000027B3128D400>
2024-03-17 20:03:13,837 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027B3123F5C0> server_hostname='serpapi.com' timeout=5.0
2024-03-17 20:03:13,892 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000027B3128D460>
2024-03-17 20:03:13,893 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:03:13,893 - DEBUG - send_request_headers.complete
2024-03-17 20:03:13,893 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:03:13,893 - DEBUG - send_request_body.complete
2024-03-17 20:03:13,893 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:03:14,874 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:03:14 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'865ee603ef6709c5-HFA'), (b'CF-Cache-Status', b'MISS'), (b'Cache-Control', b'max-age=3600, public'), (b'ETag', b'W/"0c733aec25aeb55e77cfa800c6c6d6da"'), (b'Vary', b'Accept-Encoding'), (b'referrer-policy', b'strict-origin-when-cross-origin'), (b'serpapi-search-id', b'65f73062a74fe0bead716dc2'), (b'x-content-type-options', b'nosniff'), (b'x-download-options', b'noopen'), (b'x-frame-options', b'SAMEORIGIN'), (b'x-permitted-cross-domain-policies', b'none'), (b'x-request-id', b'177f3040-d486-4f24-a20f-6e18ee580c0a'), (b'x-robots-tag', b'noindex, nofollow'), (b'x-runtime', b'0.527620'), (b'x-xss-protection', b'1; mode=block'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 20:03:14,874 - INFO - HTTP Request: GET https://serpapi.com/search?engine=google_flights&departure_id=TLV&arrival_id=NRT&outbound_date=2024-04-20&return_date=2024-04-27&currency=USD&hl=en&api_key=669f434e4ba2136c8626035972520de9b20e743726e97f32db7f33e748d2e561 "HTTP/1.1 200 OK"
2024-03-17 20:03:14,874 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:03:14,875 - DEBUG - receive_response_body.complete
2024-03-17 20:03:14,875 - DEBUG - response_closed.started
2024-03-17 20:03:14,875 - DEBUG - response_closed.complete
2024-03-17 20:03:14,876 - DEBUG - close.started
2024-03-17 20:03:14,876 - DEBUG - close.complete
2024-03-17 20:03:14,876 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:03:14,876 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:03:14,880 - DEBUG - connect_tcp.started host='serpapi.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:03:14,898 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000027B312E7070>
2024-03-17 20:03:14,898 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027B31267B40> server_hostname='serpapi.com' timeout=5.0
2024-03-17 20:03:14,929 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000027B312C6FD0>
2024-03-17 20:03:14,929 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:03:14,929 - DEBUG - send_request_headers.complete
2024-03-17 20:03:14,929 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:03:14,931 - DEBUG - send_request_body.complete
2024-03-17 20:03:14,931 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:03:19,923 - DEBUG - receive_response_headers.failed exception=ReadTimeout(TimeoutError())
2024-03-17 20:03:19,923 - DEBUG - response_closed.started
2024-03-17 20:03:19,923 - DEBUG - response_closed.complete
2024-03-17 20:05:41,027 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:05:41,028 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:05:53,948 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:05:53,949 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:37,503 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:37,504 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:37,517 - DEBUG - connect_tcp.started host='serpapi.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:37,534 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E160E6A3A0>
2024-03-17 20:06:37,534 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E160E47140> server_hostname='serpapi.com' timeout=5.0
2024-03-17 20:06:37,566 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E160E0FA60>
2024-03-17 20:06:37,567 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:37,567 - DEBUG - send_request_headers.complete
2024-03-17 20:06:37,567 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:37,567 - DEBUG - send_request_body.complete
2024-03-17 20:06:37,567 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:37,618 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:37 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'865eeafcda5f09c5-HFA'), (b'CF-Cache-Status', b'HIT'), (b'Age', b'203'), (b'Cache-Control', b'max-age=3600, public'), (b'ETag', b'W/"0c733aec25aeb55e77cfa800c6c6d6da"'), (b'Vary', b'Accept-Encoding'), (b'referrer-policy', b'strict-origin-when-cross-origin'), (b'serpapi-search-id', b'65f73062a74fe0bead716dc2'), (b'x-content-type-options', b'nosniff'), (b'x-download-options', b'noopen'), (b'x-frame-options', b'SAMEORIGIN'), (b'x-permitted-cross-domain-policies', b'none'), (b'x-request-id', b'177f3040-d486-4f24-a20f-6e18ee580c0a'), (b'x-robots-tag', b'noindex, nofollow'), (b'x-runtime', b'0.527620'), (b'x-xss-protection', b'1; mode=block'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 20:06:37,619 - INFO - HTTP Request: GET https://serpapi.com/search?engine=google_flights&departure_id=TLV&arrival_id=NRT&outbound_date=2024-04-20&return_date=2024-04-27&currency=USD&hl=en&api_key=669f434e4ba2136c8626035972520de9b20e743726e97f32db7f33e748d2e561 "HTTP/1.1 200 OK"
2024-03-17 20:06:37,619 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:37,619 - DEBUG - receive_response_body.complete
2024-03-17 20:06:37,620 - DEBUG - response_closed.started
2024-03-17 20:06:37,620 - DEBUG - response_closed.complete
2024-03-17 20:06:37,620 - DEBUG - close.started
2024-03-17 20:06:37,620 - DEBUG - close.complete
2024-03-17 20:06:37,621 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:37,621 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:37,629 - DEBUG - connect_tcp.started host='serpapi.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:37,642 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E160EA7D90>
2024-03-17 20:06:37,642 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E160E47AC0> server_hostname='serpapi.com' timeout=5.0
2024-03-17 20:06:37,678 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E160EA7D30>
2024-03-17 20:06:37,678 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:37,678 - DEBUG - send_request_headers.complete
2024-03-17 20:06:37,678 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:37,678 - DEBUG - send_request_body.complete
2024-03-17 20:06:37,678 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:38,368 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:38 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'865eeafd89ed09b9-HFA'), (b'CF-Cache-Status', b'MISS'), (b'Cache-Control', b'max-age=3600, public'), (b'ETag', b'W/"cd042990d33c3d018f9b94ed21399695"'), (b'Vary', b'Accept-Encoding'), (b'referrer-policy', b'strict-origin-when-cross-origin'), (b'serpapi-search-id', b'65f73063f26ac607863ffdd8'), (b'x-content-type-options', b'nosniff'), (b'x-download-options', b'noopen'), (b'x-frame-options', b'SAMEORIGIN'), (b'x-permitted-cross-domain-policies', b'none'), (b'x-request-id', b'a2b76c1f-6870-4d7d-87eb-03320c28dab2'), (b'x-robots-tag', b'noindex, nofollow'), (b'x-runtime', b'0.104694'), (b'x-xss-protection', b'1; mode=block'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 20:06:38,368 - INFO - HTTP Request: GET https://serpapi.com/search?engine=google_hotels&q=central%20hotels%20in%20Tokyo&check_in_date=2024-04-20&check_out_date=2024-04-27&currency=USD&adults=2&api_key=669f434e4ba2136c8626035972520de9b20e743726e97f32db7f33e748d2e561 "HTTP/1.1 200 OK"
2024-03-17 20:06:38,368 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:38,506 - DEBUG - receive_response_body.complete
2024-03-17 20:06:38,506 - DEBUG - response_closed.started
2024-03-17 20:06:38,506 - DEBUG - response_closed.complete
2024-03-17 20:06:38,508 - DEBUG - close.started
2024-03-17 20:06:38,508 - DEBUG - close.complete
2024-03-17 20:06:38,512 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': "This is the hotels list I have gathered so far. Write me a list of the top hotels and the info on each hotel you got.\nName: Tokyo Bay Shiomi Prince Hotel, Link: https://www.princehotels.com/shiomi/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $159, Total Rate (Lowest): $1,113, Nearby Places: Shiomi Station, Haneda Airport\nName: Hakusan House, Link: N/A, Check-in Time: 2:00\u202fPM, Check-out Time: 10:00\u202fAM, Rate Per Night (Lowest): $142, Total Rate (Lowest): $991, Nearby Places: Hakusan Sta., Haneda Airport, Yutaka\nName: Shinjuku Granbell Hotel, Link: https://www.granbellhotel.jp/shinjuku/, Check-in Time: 3:00\u202fPM, Check-out Time: 12:00\u202fPM, Rate Per Night (Lowest): $138, Total Rate (Lowest): $966, Nearby Places: Shinjuku Golden Gai, Higashi-Shinjuku Station, Haneda Airport, ペキンリョウリギョクラン\nName: ONE@Tokyo, Link: https://onetokyo.com/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $144, Total Rate (Lowest): $1,006, Nearby Places: Tokyo Skytree, Oshiage Sta.(SKYTREE), Haneda Airport\nName: APA Hotel & Resort Ryogoku Eki Tower, Link: https://www.apahotel.com/resort/ryogokueki/?utm_source=google&utm_medium=maps, Check-in Time: 3:00\u202fPM, Check-out Time: 10:00\u202fAM, Rate Per Night (Lowest): $68, Total Rate (Lowest): $479, Nearby Places: Edo-Tokyo Museum, Ryogoku Sta., Haneda Airport, Ryogoku Terrace\nName: APA Hotel Asakusa Tawaramachi-Ekimae, Link: https://www.apahotel.com/hotel/syutoken/tokyo/asakusa-tawaramachi-ekimae/?utm_source=google&utm_medium=maps, Check-in Time: 3:00\u202fPM, Check-out Time: 10:00\u202fAM, Rate Per Night (Lowest): $75, Total Rate (Lowest): $525, Nearby Places: Sensō-ji, Tawaramachi Station, Haneda Airport, 中華料理 味原\nName: Daiwa Roynet Hotel Tokyo Akabane, Link: https://www.daiwaroynet.jp/akabane/, Check-in Time: 2:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $72, Total Rate (Lowest): $505, Nearby Places: Akabane Eki Higashiguchi, Haneda Airport, Mala-eki\nName: Citadines Central Shinjuku Tokyo, Link: https://www.discoverasr.com/en/citadines/japan/citadines-central-shinjuku-tokyo?utm_source=google&utm_medium=organic&utm_campaign=HQ-google-organic-alwayson-20230628-all-en-jp-jp-citadinescentralshinjukutokyo-eme-gbp, Check-in Time: 2:00\u202fPM, Check-out Time: 10:00\u202fAM, Rate Per Night (Lowest): $144, Total Rate (Lowest): $1,008, Nearby Places: Shinjuku Golden Gai, Seibu-Shinjuku Station, Haneda Airport, Miyabi\nName: APA Hotel Nishi Shinjuku Gochome Eki Tower, Link: https://www.apahotel.com/resort/nishishinjuku-tower/?utm_source=google&utm_medium=maps, Check-in Time: 2:00\u202fPM, Check-out Time: 10:00\u202fAM, Rate Per Night (Lowest): $89, Total Rate (Lowest): $623, Nearby Places: Meiji Jingu, Nishi-Shinjuku-Gochome Station, Haneda Airport, Lunette\nName: MANGA ART HOTEL, TOKYO, Link: https://mangaarthotel.com/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $58, Total Rate (Lowest): $403, Nearby Places: Ueno Park, Ogawamachi Sta., Haneda Airport\nName: Tokyo Prince Hotel, Link: http://www.princehotels.co.jp/tokyo/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $175, Total Rate (Lowest): $1,222, Nearby Places: Tokyo Tower, Onarimon Sta., Haneda Airport\nName: Rembrandt Hotel Tokyo Machida, Link: https://rembrandt-group.com/machida, Check-in Time: 2:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $65, Total Rate (Lowest): $457, Nearby Places: Sagami-Ono Station, Haneda Airport, 中国料理 龍皇\nName: Shinagawa Prince Hotel, Link: http://www.princehotels.co.jp/shinagawa/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $203, Total Rate (Lowest): $1,419, Nearby Places: Shinagawa Station, Haneda Airport, 中国料理 品川大飯店\nName: QUINTESSA Tokyo Haneda Comic & Books, Link: https://quintessahotels.com/haneda/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $62, Total Rate (Lowest): $437, Nearby Places: Kojiya Station, Haneda Airport, Shun'ya\nName: Shinjuku Prince Hotel, Link: https://www.princehotels.co.jp/shinjuku/, Check-in Time: 1:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $151, Total Rate (Lowest): $1,060, Nearby Places: Kabukicho, Seibu-Shinjuku Station, Haneda Airport, Kagetora\nName: 日久の宿, Link: https://www.bluepillow.com/search?p_id=589df90c7c00cb10c8da9250&dest=bkng&cat=House&accomodationids=64861d597f7e24c1922fb7a9, Check-in Time: 3:00\u202fPM, Check-out Time: 10:30\u202fAM, Rate Per Night (Lowest): $74, Total Rate (Lowest): $519, Nearby Places: \nName: Tobu Hotel Levant, Link: https://www.tobuhotel.co.jp/levant/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $137, Total Rate (Lowest): $961, Nearby Places: Tokyo Skytree, Kinshichō Station, Haneda Airport, Yoshoku E ITALIAN TERZO3\nName: Hilton Tokyo, Link: https://www.hilton.com/en/hotels/tyohitw-hilton-tokyo/?SEO_id=GMB-APAC-TW-TYOHITW, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $407, Total Rate (Lowest): $2,849, Nearby Places: Tokyo Metropolitan Government Building, Nishi-shinjuku Sta., Haneda Airport, Dynasty\nName: APA HOTEL SHINJUKU-KABUKICHO TOWER, Link: https://www.apahotel.com/hotel/syutoken/tokyo/shinjuku-kabukichotower/?utm_source=google&utm_medium=maps, Check-in Time: 3:00\u202fPM, Check-out Time: 10:00\u202fAM, Rate Per Night (Lowest): $108, Total Rate (Lowest): $756, Nearby Places: Kabukicho, Seibu-Shinjuku Station, Haneda Airport, Restaurant Bellustar（レストラン・ベルスター）\nName: The Royal Park Hotel Tokyo Shiodome, Link: https://www.royalparkhotels.co.jp/ic/tokyoshiodome/, Check-in Time: 3:00\u202fPM, Check-out Time: 11:00\u202fAM, Rate Per Night (Lowest): $230, Total Rate (Lowest): $1,611, Nearby Places: Tokyo Tower, Shimbashi Station, Haneda Airport, Oshima Shiodome\n"}], 'model': 'gpt-3.5-turbo'}}
2024-03-17 20:06:38,543 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:38,607 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E160ECA550>
2024-03-17 20:06:38,607 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E160D7EC40> server_hostname='api.openai.com' timeout=5.0
2024-03-17 20:06:38,635 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E160ECA520>
2024-03-17 20:06:38,635 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-17 20:06:38,635 - DEBUG - send_request_headers.complete
2024-03-17 20:06:38,635 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-17 20:06:38,635 - DEBUG - send_request_body.complete
2024-03-17 20:06:38,635 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-17 20:06:47,938 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0125'), (b'openai-organization', b'reichman-university-wxioss'), (b'openai-processing-ms', b'9023'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'998505'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'89ms'), (b'x-request-id', b'req_bc67fccfdc15cb7ef4c40ec6abf36ff5'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=qsySjMsphrYJtMBp9FjoLn2mMUKGp_qqhyr46yZn5Tc-1710698807-1.0.1.1-xYhdkUjT_eBCvWIwmDVVbsF50Z4n_Lw3awtRXjY2xKpmEj46fJZXFJf0oulMN3QAVcNYrEzOT7syJ9pvOg9Yig; path=/; expires=Sun, 17-Mar-24 18:36:47 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=rFwZiByv8oGmmPR70GM67eY1uYoZ3sH36OHK9H5I8v4-1710698807931-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'865eeb038b0c09cb-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 20:06:47,938 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-03-17 20:06:47,938 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-17 20:06:47,938 - DEBUG - receive_response_body.complete
2024-03-17 20:06:47,938 - DEBUG - response_closed.started
2024-03-17 20:06:47,939 - DEBUG - response_closed.complete
2024-03-17 20:06:47,939 - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-03-17 20:06:47,940 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:47,940 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:47,947 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:48,231 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F25A00>
2024-03-17 20:06:48,231 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E160E47DC0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:48,375 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E160ECA4C0>
2024-03-17 20:06:48,375 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:48,375 - DEBUG - send_request_headers.complete
2024-03-17 20:06:48,375 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:48,375 - DEBUG - send_request_body.complete
2024-03-17 20:06:48,375 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:48,921 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:48 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3756'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'af0a59ac-36fb-44e6-96ea-de8e63f4ffe2'), (b'x-amz-apigw-id', b'UySg3FdVoAMEl5g='), (b'X-Amzn-Trace-Id', b'Root=1-65f73138-1fa34f0217ef4c4f7597c2dc')])
2024-03-17 20:06:48,922 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/search?key=7D8FF18728F342E29B426D6D5946FA6C&searchQuery=Tokyo&category=attractions&language=en "HTTP/1.1 200 OK"
2024-03-17 20:06:48,922 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:48,922 - DEBUG - receive_response_body.complete
2024-03-17 20:06:48,922 - DEBUG - response_closed.started
2024-03-17 20:06:48,922 - DEBUG - response_closed.complete
2024-03-17 20:06:48,923 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:48,924 - DEBUG - send_request_headers.complete
2024-03-17 20:06:48,924 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:48,924 - DEBUG - send_request_body.complete
2024-03-17 20:06:48,924 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:49,357 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:49 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3804'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'7aed97fb-8b1e-4c1b-ba33-ee4d952425d7'), (b'x-amz-apigw-id', b'UySg9EVWoAMEgJg='), (b'X-Amzn-Trace-Id', b'Root=1-65f73139-5da0126e173d866d7c83fc8d')])
2024-03-17 20:06:49,357 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/search?key=7D8FF18728F342E29B426D6D5946FA6C&searchQuery=Tokyo&category=restaurants&language=en "HTTP/1.1 200 OK"
2024-03-17 20:06:49,357 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:49,359 - DEBUG - receive_response_body.complete
2024-03-17 20:06:49,359 - DEBUG - response_closed.started
2024-03-17 20:06:49,359 - DEBUG - response_closed.complete
2024-03-17 20:06:49,359 - DEBUG - close.started
2024-03-17 20:06:49,359 - DEBUG - close.complete
2024-03-17 20:06:49,360 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:49,360 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:49,368 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:49,514 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F2CAF0>
2024-03-17 20:06:49,514 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E160E507C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:49,673 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F2CA90>
2024-03-17 20:06:49,673 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:49,674 - DEBUG - send_request_headers.complete
2024-03-17 20:06:49,674 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:49,674 - DEBUG - send_request_body.complete
2024-03-17 20:06:49,674 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:50,219 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:50 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5577'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'07928ed5-ea48-40b1-8879-718946cb81bd'), (b'x-amz-apigw-id', b'UyShEGuPIAMErQg='), (b'X-Amzn-Trace-Id', b'Root=1-65f73139-3b70734878963683370ae579')])
2024-03-17 20:06:50,219 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/14951238/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:50,219 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:50,220 - DEBUG - receive_response_body.complete
2024-03-17 20:06:50,220 - DEBUG - response_closed.started
2024-03-17 20:06:50,220 - DEBUG - response_closed.complete
2024-03-17 20:06:50,220 - DEBUG - close.started
2024-03-17 20:06:50,220 - DEBUG - close.complete
2024-03-17 20:06:50,221 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:50,221 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:50,228 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:50,376 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F26730>
2024-03-17 20:06:50,376 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEF5C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:50,531 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F261C0>
2024-03-17 20:06:50,532 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:50,532 - DEBUG - send_request_headers.complete
2024-03-17 20:06:50,532 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:50,532 - DEBUG - send_request_body.complete
2024-03-17 20:06:50,532 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:50,774 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:50 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'4359'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'82d6be84-1bcb-48e6-b6ee-e928d14aa1f4'), (b'x-amz-apigw-id', b'UyShNH_IIAMEaGg='), (b'X-Amzn-Trace-Id', b'Root=1-65f7313a-34527c9b07a707cc237c0243')])
2024-03-17 20:06:50,774 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/144151/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:50,774 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:50,774 - DEBUG - receive_response_body.complete
2024-03-17 20:06:50,774 - DEBUG - response_closed.started
2024-03-17 20:06:50,774 - DEBUG - response_closed.complete
2024-03-17 20:06:50,774 - DEBUG - close.started
2024-03-17 20:06:50,774 - DEBUG - close.complete
2024-03-17 20:06:50,774 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:50,774 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:50,784 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:50,942 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F0EF70>
2024-03-17 20:06:50,942 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEF840> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:51,092 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F0EEB0>
2024-03-17 20:06:51,092 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:51,092 - DEBUG - send_request_headers.complete
2024-03-17 20:06:51,092 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:51,092 - DEBUG - send_request_body.complete
2024-03-17 20:06:51,092 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:51,416 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5275'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'36b89cf7-9518-4b3c-a721-182bfcbfdfa5'), (b'x-amz-apigw-id', b'UyShSHHfIAMElMA='), (b'X-Amzn-Trace-Id', b'Root=1-65f7313b-685cba194930c27c76dfca2d')])
2024-03-17 20:06:51,416 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/320047/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:51,416 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:51,416 - DEBUG - receive_response_body.complete
2024-03-17 20:06:51,416 - DEBUG - response_closed.started
2024-03-17 20:06:51,416 - DEBUG - response_closed.complete
2024-03-17 20:06:51,416 - DEBUG - close.started
2024-03-17 20:06:51,416 - DEBUG - close.complete
2024-03-17 20:06:51,416 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:51,425 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:51,426 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:51,587 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F30CD0>
2024-03-17 20:06:51,587 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEF540> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:51,740 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F30C70>
2024-03-17 20:06:51,741 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:51,741 - DEBUG - send_request_headers.complete
2024-03-17 20:06:51,741 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:51,741 - DEBUG - send_request_body.complete
2024-03-17 20:06:51,741 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:52,077 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:52 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'4793'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'82ad7e9f-a857-4c31-9ddb-652c904a3954'), (b'x-amz-apigw-id', b'UyShZEYMoAMEBag='), (b'X-Amzn-Trace-Id', b'Root=1-65f7313b-1ceb745763cd04e25fdf8775')])
2024-03-17 20:06:52,077 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1872416/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:52,078 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:52,078 - DEBUG - receive_response_body.complete
2024-03-17 20:06:52,078 - DEBUG - response_closed.started
2024-03-17 20:06:52,078 - DEBUG - response_closed.complete
2024-03-17 20:06:52,078 - DEBUG - close.started
2024-03-17 20:06:52,078 - DEBUG - close.complete
2024-03-17 20:06:52,079 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:52,079 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:52,087 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:52,226 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F372B0>
2024-03-17 20:06:52,226 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEF240> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:52,387 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F37250>
2024-03-17 20:06:52,387 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:52,388 - DEBUG - send_request_headers.complete
2024-03-17 20:06:52,388 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:52,388 - DEBUG - send_request_body.complete
2024-03-17 20:06:52,388 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:52,746 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:52 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5705'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'db85b74d-3db3-4e8e-9ff0-6ce5f15dc0a3'), (b'x-amz-apigw-id', b'UyShfFUZoAMEq7A='), (b'X-Amzn-Trace-Id', b'Root=1-65f7313c-691e65d519aee8e13241bb1e')])
2024-03-17 20:06:52,746 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/320634/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:52,746 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:52,746 - DEBUG - receive_response_body.complete
2024-03-17 20:06:52,746 - DEBUG - response_closed.started
2024-03-17 20:06:52,746 - DEBUG - response_closed.complete
2024-03-17 20:06:52,746 - DEBUG - close.started
2024-03-17 20:06:52,746 - DEBUG - close.complete
2024-03-17 20:06:52,746 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:52,746 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:52,756 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:52,916 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F37C10>
2024-03-17 20:06:52,916 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEF940> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:53,075 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F37EB0>
2024-03-17 20:06:53,075 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:53,075 - DEBUG - send_request_headers.complete
2024-03-17 20:06:53,075 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:53,076 - DEBUG - send_request_body.complete
2024-03-17 20:06:53,076 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:53,325 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2864'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'a4b334a9-2010-4ba0-a0a9-4733fd29b923'), (b'x-amz-apigw-id', b'UyShmEo5IAMEEoQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f7313d-257ee9f1529b04d92454c583')])
2024-03-17 20:06:53,325 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1509275/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:53,325 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:53,325 - DEBUG - receive_response_body.complete
2024-03-17 20:06:53,325 - DEBUG - response_closed.started
2024-03-17 20:06:53,326 - DEBUG - response_closed.complete
2024-03-17 20:06:53,326 - DEBUG - close.started
2024-03-17 20:06:53,326 - DEBUG - close.complete
2024-03-17 20:06:53,326 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:53,327 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:53,334 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:53,488 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E160E8E2B0>
2024-03-17 20:06:53,488 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E160E507C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:53,638 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F359D0>
2024-03-17 20:06:53,638 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:53,638 - DEBUG - send_request_headers.complete
2024-03-17 20:06:53,638 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:53,638 - DEBUG - send_request_body.complete
2024-03-17 20:06:53,638 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:53,898 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5689'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'4097eb6e-1522-41c6-ab21-8063580434a2'), (b'x-amz-apigw-id', b'UyShsHA2IAMEAOA='), (b'X-Amzn-Trace-Id', b'Root=1-65f7313d-6856b2eb538fa678156569b2')])
2024-03-17 20:06:53,898 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/12310322/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:53,898 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:53,898 - DEBUG - receive_response_body.complete
2024-03-17 20:06:53,898 - DEBUG - response_closed.started
2024-03-17 20:06:53,898 - DEBUG - response_closed.complete
2024-03-17 20:06:53,898 - DEBUG - close.started
2024-03-17 20:06:53,904 - DEBUG - close.complete
2024-03-17 20:06:53,904 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:53,904 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:53,904 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:54,066 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F26B80>
2024-03-17 20:06:54,066 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEFA40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:54,218 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F0E2B0>
2024-03-17 20:06:54,218 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:54,218 - DEBUG - send_request_headers.complete
2024-03-17 20:06:54,218 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:54,218 - DEBUG - send_request_body.complete
2024-03-17 20:06:54,218 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:54,455 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6132'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'884a1eb6-55c4-40d9-83ea-6b3e3a71cbb9'), (b'x-amz-apigw-id', b'UyShyHDeoAMEDJA='), (b'X-Amzn-Trace-Id', b'Root=1-65f7313e-14430c6d2d1b5f201462e0be')])
2024-03-17 20:06:54,455 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/7744338/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:54,455 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:54,455 - DEBUG - receive_response_body.complete
2024-03-17 20:06:54,456 - DEBUG - response_closed.started
2024-03-17 20:06:54,456 - DEBUG - response_closed.complete
2024-03-17 20:06:54,456 - DEBUG - close.started
2024-03-17 20:06:54,456 - DEBUG - close.complete
2024-03-17 20:06:54,456 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:54,457 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:54,465 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:54,613 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F25820>
2024-03-17 20:06:54,613 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEFD40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:54,762 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F25A30>
2024-03-17 20:06:54,762 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:54,763 - DEBUG - send_request_headers.complete
2024-03-17 20:06:54,763 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:54,763 - DEBUG - send_request_body.complete
2024-03-17 20:06:54,763 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:55,056 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3931'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'4561469d-b784-49ba-9e32-a1152968a736'), (b'x-amz-apigw-id', b'UySh3HgeoAMEv_Q='), (b'X-Amzn-Trace-Id', b'Root=1-65f7313e-764ebf88641993925e7ad16e')])
2024-03-17 20:06:55,056 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/550327/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:55,056 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:55,056 - DEBUG - receive_response_body.complete
2024-03-17 20:06:55,056 - DEBUG - response_closed.started
2024-03-17 20:06:55,056 - DEBUG - response_closed.complete
2024-03-17 20:06:55,057 - DEBUG - close.started
2024-03-17 20:06:55,057 - DEBUG - close.complete
2024-03-17 20:06:55,057 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:55,058 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:55,065 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:55,219 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F2C760>
2024-03-17 20:06:55,219 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEF6C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:55,372 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F2C8B0>
2024-03-17 20:06:55,372 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:55,372 - DEBUG - send_request_headers.complete
2024-03-17 20:06:55,382 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:55,382 - DEBUG - send_request_body.complete
2024-03-17 20:06:55,382 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:55,720 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:55 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5166'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'ea0c7a9d-5205-4a06-8ab0-d0c821545371'), (b'x-amz-apigw-id', b'UySh9EOEIAMECqQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f7313f-1fbd351052feaa592c98b5a9')])
2024-03-17 20:06:55,720 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/320639/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:55,720 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:55,720 - DEBUG - receive_response_body.complete
2024-03-17 20:06:55,720 - DEBUG - response_closed.started
2024-03-17 20:06:55,720 - DEBUG - response_closed.complete
2024-03-17 20:06:55,720 - DEBUG - close.started
2024-03-17 20:06:55,720 - DEBUG - close.complete
2024-03-17 20:06:55,721 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:55,721 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:55,729 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:55,881 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F30C10>
2024-03-17 20:06:55,881 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEF7C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:56,036 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F30BB0>
2024-03-17 20:06:56,036 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:56,036 - DEBUG - send_request_headers.complete
2024-03-17 20:06:56,036 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:56,036 - DEBUG - send_request_body.complete
2024-03-17 20:06:56,036 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:56,309 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6776'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'c889622b-c40f-4985-8b7d-91cab7a638a0'), (b'x-amz-apigw-id', b'UySiEGBSIAMEJTQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f73140-497569bd2bf591756b2d7dc0')])
2024-03-17 20:06:56,309 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/7604418/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:56,309 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:56,309 - DEBUG - receive_response_body.complete
2024-03-17 20:06:56,309 - DEBUG - response_closed.started
2024-03-17 20:06:56,309 - DEBUG - response_closed.complete
2024-03-17 20:06:56,309 - DEBUG - close.started
2024-03-17 20:06:56,309 - DEBUG - close.complete
2024-03-17 20:06:56,309 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:56,309 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:56,324 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:56,471 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F25190>
2024-03-17 20:06:56,471 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEF4C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:56,621 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F251C0>
2024-03-17 20:06:56,621 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:56,621 - DEBUG - send_request_headers.complete
2024-03-17 20:06:56,621 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:56,621 - DEBUG - send_request_body.complete
2024-03-17 20:06:56,621 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:56,887 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6349'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'9bad2aef-441a-44d7-8e6c-aadc6bc3d682'), (b'x-amz-apigw-id', b'UySiJEa-IAMEmWA='), (b'X-Amzn-Trace-Id', b'Root=1-65f73140-16a0933265e493ee1a5bd5b4')])
2024-03-17 20:06:56,887 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1010352/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:56,887 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:56,887 - DEBUG - receive_response_body.complete
2024-03-17 20:06:56,887 - DEBUG - response_closed.started
2024-03-17 20:06:56,887 - DEBUG - response_closed.complete
2024-03-17 20:06:56,887 - DEBUG - close.started
2024-03-17 20:06:56,888 - DEBUG - close.complete
2024-03-17 20:06:56,888 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:56,888 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:56,888 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:57,043 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E160EA7EB0>
2024-03-17 20:06:57,043 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEF640> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:57,210 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F262B0>
2024-03-17 20:06:57,210 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:57,210 - DEBUG - send_request_headers.complete
2024-03-17 20:06:57,210 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:57,210 - DEBUG - send_request_body.complete
2024-03-17 20:06:57,210 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:57,463 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5439'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'7e77f061-3cd9-4b56-945a-f7bca3adf49d'), (b'x-amz-apigw-id', b'UySiPE7fIAMEG1A='), (b'X-Amzn-Trace-Id', b'Root=1-65f73141-4c54411b6a32f01666c5e098')])
2024-03-17 20:06:57,463 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1160290/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:57,463 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:57,463 - DEBUG - receive_response_body.complete
2024-03-17 20:06:57,463 - DEBUG - response_closed.started
2024-03-17 20:06:57,463 - DEBUG - response_closed.complete
2024-03-17 20:06:57,463 - DEBUG - close.started
2024-03-17 20:06:57,472 - DEBUG - close.complete
2024-03-17 20:06:57,472 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:57,473 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:57,480 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:57,625 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F3AFD0>
2024-03-17 20:06:57,625 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEF8C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:57,781 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F0E700>
2024-03-17 20:06:57,781 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:57,781 - DEBUG - send_request_headers.complete
2024-03-17 20:06:57,781 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:57,781 - DEBUG - send_request_body.complete
2024-03-17 20:06:57,781 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:58,098 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5505'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'10c5eec8-d4d4-4fd6-b9fa-8ac3d27b7ee1'), (b'x-amz-apigw-id', b'UySiVFVoIAMECkw='), (b'X-Amzn-Trace-Id', b'Root=1-65f73141-116b6dc93fb97dd3227b8574')])
2024-03-17 20:06:58,098 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/24035984/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:58,098 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:58,098 - DEBUG - receive_response_body.complete
2024-03-17 20:06:58,098 - DEBUG - response_closed.started
2024-03-17 20:06:58,098 - DEBUG - response_closed.complete
2024-03-17 20:06:58,098 - DEBUG - close.started
2024-03-17 20:06:58,098 - DEBUG - close.complete
2024-03-17 20:06:58,098 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:58,098 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:58,109 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:58,264 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F37850>
2024-03-17 20:06:58,265 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEFC40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:58,419 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F37460>
2024-03-17 20:06:58,420 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:58,420 - DEBUG - send_request_headers.complete
2024-03-17 20:06:58,420 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:58,420 - DEBUG - send_request_body.complete
2024-03-17 20:06:58,420 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:58,693 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5287'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'161057f3-e512-4be5-b986-167da5c6f010'), (b'x-amz-apigw-id', b'UySicEqmoAMENfg='), (b'X-Amzn-Trace-Id', b'Root=1-65f73142-2fecd35c6c03c9015c940af4')])
2024-03-17 20:06:58,693 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/16714835/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:58,693 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:58,693 - DEBUG - receive_response_body.complete
2024-03-17 20:06:58,693 - DEBUG - response_closed.started
2024-03-17 20:06:58,693 - DEBUG - response_closed.complete
2024-03-17 20:06:58,693 - DEBUG - close.started
2024-03-17 20:06:58,693 - DEBUG - close.complete
2024-03-17 20:06:58,693 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:58,693 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:58,703 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:58,860 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F350D0>
2024-03-17 20:06:58,860 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEF840> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:59,012 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F35A90>
2024-03-17 20:06:59,012 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:59,012 - DEBUG - send_request_headers.complete
2024-03-17 20:06:59,013 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:59,013 - DEBUG - send_request_body.complete
2024-03-17 20:06:59,013 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:59,255 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:59 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6179'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'0a26b28e-cacd-4c2a-bc82-18eff8c7c0c5'), (b'x-amz-apigw-id', b'UySihHnlIAMEZDg='), (b'X-Amzn-Trace-Id', b'Root=1-65f73143-2552496b25e9420074a81157')])
2024-03-17 20:06:59,255 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/9798604/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:59,255 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:59,255 - DEBUG - receive_response_body.complete
2024-03-17 20:06:59,255 - DEBUG - response_closed.started
2024-03-17 20:06:59,255 - DEBUG - response_closed.complete
2024-03-17 20:06:59,256 - DEBUG - close.started
2024-03-17 20:06:59,256 - DEBUG - close.complete
2024-03-17 20:06:59,256 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:59,257 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:59,263 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:06:59,410 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F3A040>
2024-03-17 20:06:59,410 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEFBC0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:06:59,569 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F370A0>
2024-03-17 20:06:59,570 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:06:59,570 - DEBUG - send_request_headers.complete
2024-03-17 20:06:59,570 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:06:59,570 - DEBUG - send_request_body.complete
2024-03-17 20:06:59,570 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:06:59,865 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:06:59 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3645'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'5675b681-4ea0-4850-97d9-8329ce782306'), (b'x-amz-apigw-id', b'UySinFJZIAMEiJw='), (b'X-Amzn-Trace-Id', b'Root=1-65f73143-6b6982ba3fc00c3a70dec03f')])
2024-03-17 20:06:59,865 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/5113133/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:06:59,865 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:06:59,865 - DEBUG - receive_response_body.complete
2024-03-17 20:06:59,865 - DEBUG - response_closed.started
2024-03-17 20:06:59,865 - DEBUG - response_closed.complete
2024-03-17 20:06:59,866 - DEBUG - close.started
2024-03-17 20:06:59,866 - DEBUG - close.complete
2024-03-17 20:06:59,866 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:06:59,867 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:06:59,874 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:07:00,019 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F0E4C0>
2024-03-17 20:07:00,019 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E160E507C0> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:07:00,167 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F0EC40>
2024-03-17 20:07:00,167 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:07:00,167 - DEBUG - send_request_headers.complete
2024-03-17 20:07:00,167 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:07:00,167 - DEBUG - send_request_body.complete
2024-03-17 20:07:00,167 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:07:00,415 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:07:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'7071'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'15e05b7e-17fc-40a3-acca-f4facfa79312'), (b'x-amz-apigw-id', b'UySitHjEoAMEmdQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f73144-698a8a6b0a1b1c33566ca396')])
2024-03-17 20:07:00,416 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/21356820/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:07:00,416 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:07:00,416 - DEBUG - receive_response_body.complete
2024-03-17 20:07:00,416 - DEBUG - response_closed.started
2024-03-17 20:07:00,416 - DEBUG - response_closed.complete
2024-03-17 20:07:00,416 - DEBUG - close.started
2024-03-17 20:07:00,416 - DEBUG - close.complete
2024-03-17 20:07:00,416 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:07:00,418 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:07:00,425 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:07:00,582 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F25550>
2024-03-17 20:07:00,582 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEFD40> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:07:00,733 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F26880>
2024-03-17 20:07:00,734 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:07:00,734 - DEBUG - send_request_headers.complete
2024-03-17 20:07:00,734 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:07:00,734 - DEBUG - send_request_body.complete
2024-03-17 20:07:00,734 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:07:00,981 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:07:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'5026'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'18b72c3a-d2cd-4fd2-b978-7a03810e840d'), (b'x-amz-apigw-id', b'UySizHXrIAMEujw='), (b'X-Amzn-Trace-Id', b'Root=1-65f73144-6949070e63e18db136875d76')])
2024-03-17 20:07:00,981 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/2167155/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:07:00,981 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:07:00,981 - DEBUG - receive_response_body.complete
2024-03-17 20:07:00,981 - DEBUG - response_closed.started
2024-03-17 20:07:00,981 - DEBUG - response_closed.complete
2024-03-17 20:07:00,982 - DEBUG - close.started
2024-03-17 20:07:00,982 - DEBUG - close.complete
2024-03-17 20:07:00,983 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:07:00,983 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:07:00,990 - DEBUG - connect_tcp.started host='api.content.tripadvisor.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:07:01,134 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F30BB0>
2024-03-17 20:07:01,134 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E161EEF740> server_hostname='api.content.tripadvisor.com' timeout=5.0
2024-03-17 20:07:01,281 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000001E161F30C70>
2024-03-17 20:07:01,281 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2024-03-17 20:07:01,281 - DEBUG - send_request_headers.complete
2024-03-17 20:07:01,281 - DEBUG - send_request_body.started request=<Request [b'GET']>
2024-03-17 20:07:01,281 - DEBUG - send_request_body.complete
2024-03-17 20:07:01,281 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2024-03-17 20:07:01,558 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:07:01 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'6968'), (b'Connection', b'keep-alive'), (b'x-amzn-RequestId', b'6da8df8e-d619-48ff-9bff-8afeb06142cb'), (b'x-amz-apigw-id', b'UySi4EB4IAMEtuQ='), (b'X-Amzn-Trace-Id', b'Root=1-65f73145-4b0576944fe9520a13e1b738')])
2024-03-17 20:07:01,558 - INFO - HTTP Request: GET https://api.content.tripadvisor.com/api/v1/location/1106443/details?language=en&currency=USD&key=7D8FF18728F342E29B426D6D5946FA6C "HTTP/1.1 200 OK"
2024-03-17 20:07:01,558 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2024-03-17 20:07:01,558 - DEBUG - receive_response_body.complete
2024-03-17 20:07:01,558 - DEBUG - response_closed.started
2024-03-17 20:07:01,558 - DEBUG - response_closed.complete
2024-03-17 20:07:01,558 - DEBUG - close.started
2024-03-17 20:07:01,558 - DEBUG - close.complete
2024-03-17 20:07:02,807 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=121)
           2	LOAD_DEREF(arg=2, lineno=121)
           4	LOAD_FAST(arg=0, lineno=121)
           6	CALL_FUNCTION(arg=1, lineno=121)
           8	STORE_FAST(arg=0, lineno=121)
          10	LOAD_DEREF(arg=2, lineno=122)
          12	LOAD_FAST(arg=1, lineno=122)
          14	CALL_FUNCTION(arg=1, lineno=122)
          16	STORE_FAST(arg=1, lineno=122)
          18	LOAD_DEREF(arg=2, lineno=123)
          20	LOAD_FAST(arg=2, lineno=123)
          22	CALL_FUNCTION(arg=1, lineno=123)
          24	STORE_FAST(arg=2, lineno=123)
          26	LOAD_DEREF(arg=2, lineno=124)
          28	LOAD_FAST(arg=3, lineno=124)
          30	CALL_FUNCTION(arg=1, lineno=124)
          32	STORE_FAST(arg=3, lineno=124)
          34	LOAD_FAST(arg=2, lineno=125)
          36	LOAD_FAST(arg=0, lineno=125)
          38	BINARY_SUBTRACT(arg=None, lineno=125)
          40	STORE_FAST(arg=4, lineno=125)
          42	LOAD_FAST(arg=3, lineno=126)
          44	LOAD_FAST(arg=1, lineno=126)
          46	BINARY_SUBTRACT(arg=None, lineno=126)
          48	STORE_FAST(arg=5, lineno=126)
          50	LOAD_DEREF(arg=3, lineno=127)
          52	LOAD_FAST(arg=4, lineno=127)
          54	LOAD_CONST(arg=1, lineno=127)
          56	BINARY_MULTIPLY(arg=None, lineno=127)
          58	CALL_FUNCTION(arg=1, lineno=127)
          60	LOAD_CONST(arg=2, lineno=127)
          62	BINARY_POWER(arg=None, lineno=127)
          64	LOAD_DEREF(arg=1, lineno=128)
          66	LOAD_FAST(arg=0, lineno=128)
          68	CALL_FUNCTION(arg=1, lineno=128)
          70	LOAD_DEREF(arg=1, lineno=128)
          72	LOAD_FAST(arg=2, lineno=128)
          74	CALL_FUNCTION(arg=1, lineno=128)
          76	BINARY_MULTIPLY(arg=None, lineno=128)
          78	LOAD_DEREF(arg=3, lineno=128)
          80	LOAD_FAST(arg=5, lineno=128)
          82	LOAD_CONST(arg=1, lineno=128)
          84	BINARY_MULTIPLY(arg=None, lineno=128)
          86	CALL_FUNCTION(arg=1, lineno=128)
          88	LOAD_CONST(arg=2, lineno=128)
          90	BINARY_POWER(arg=None, lineno=128)
          92	BINARY_MULTIPLY(arg=None, lineno=128)
          94	BINARY_ADD(arg=None, lineno=127)
          96	STORE_FAST(arg=6, lineno=127)
          98	LOAD_CONST(arg=2, lineno=131)
         100	LOAD_DEREF(arg=0, lineno=131)
         102	LOAD_DEREF(arg=4, lineno=131)
         104	LOAD_FAST(arg=6, lineno=131)
         106	CALL_FUNCTION(arg=1, lineno=131)
         108	CALL_FUNCTION(arg=1, lineno=131)
         110	BINARY_MULTIPLY(arg=None, lineno=131)
         112	RETURN_VALUE(arg=None, lineno=131)
2024-03-17 20:07:02,807 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-03-17 20:07:02,807 - DEBUG - stack: []
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=121)
2024-03-17 20:07:02,807 - DEBUG - stack []
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=2, inst=LOAD_DEREF(arg=2, lineno=121)
2024-03-17 20:07:02,807 - DEBUG - stack []
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=121)
2024-03-17 20:07:02,807 - DEBUG - stack ['$2load_deref.0']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=121)
2024-03-17 20:07:02,807 - DEBUG - stack ['$2load_deref.0', '$lat14.1']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=0, lineno=121)
2024-03-17 20:07:02,807 - DEBUG - stack ['$6call_function.2']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=10, inst=LOAD_DEREF(arg=2, lineno=122)
2024-03-17 20:07:02,807 - DEBUG - stack []
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=122)
2024-03-17 20:07:02,807 - DEBUG - stack ['$10load_deref.3']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=122)
2024-03-17 20:07:02,807 - DEBUG - stack ['$10load_deref.3', '$lng112.4']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=122)
2024-03-17 20:07:02,807 - DEBUG - stack ['$14call_function.5']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=18, inst=LOAD_DEREF(arg=2, lineno=123)
2024-03-17 20:07:02,807 - DEBUG - stack []
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=123)
2024-03-17 20:07:02,807 - DEBUG - stack ['$18load_deref.6']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=22, inst=CALL_FUNCTION(arg=1, lineno=123)
2024-03-17 20:07:02,807 - DEBUG - stack ['$18load_deref.6', '$lat220.7']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=24, inst=STORE_FAST(arg=2, lineno=123)
2024-03-17 20:07:02,807 - DEBUG - stack ['$22call_function.8']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=26, inst=LOAD_DEREF(arg=2, lineno=124)
2024-03-17 20:07:02,807 - DEBUG - stack []
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=3, lineno=124)
2024-03-17 20:07:02,807 - DEBUG - stack ['$26load_deref.9']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=124)
2024-03-17 20:07:02,807 - DEBUG - stack ['$26load_deref.9', '$lng228.10']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=32, inst=STORE_FAST(arg=3, lineno=124)
2024-03-17 20:07:02,807 - DEBUG - stack ['$30call_function.11']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=2, lineno=125)
2024-03-17 20:07:02,807 - DEBUG - stack []
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=125)
2024-03-17 20:07:02,807 - DEBUG - stack ['$lat234.12']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=38, inst=BINARY_SUBTRACT(arg=None, lineno=125)
2024-03-17 20:07:02,807 - DEBUG - stack ['$lat234.12', '$lat136.13']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=40, inst=STORE_FAST(arg=4, lineno=125)
2024-03-17 20:07:02,807 - DEBUG - stack ['$38binary_subtract.14']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=126)
2024-03-17 20:07:02,807 - DEBUG - stack []
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=44, inst=LOAD_FAST(arg=1, lineno=126)
2024-03-17 20:07:02,807 - DEBUG - stack ['$lng242.15']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=46, inst=BINARY_SUBTRACT(arg=None, lineno=126)
2024-03-17 20:07:02,807 - DEBUG - stack ['$lng242.15', '$lng144.16']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=5, lineno=126)
2024-03-17 20:07:02,807 - DEBUG - stack ['$46binary_subtract.17']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=50, inst=LOAD_DEREF(arg=3, lineno=127)
2024-03-17 20:07:02,807 - DEBUG - stack []
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=127)
2024-03-17 20:07:02,807 - DEBUG - stack ['$50load_deref.18']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=127)
2024-03-17 20:07:02,807 - DEBUG - stack ['$50load_deref.18', '$lat52.19']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=56, inst=BINARY_MULTIPLY(arg=None, lineno=127)
2024-03-17 20:07:02,807 - DEBUG - stack ['$50load_deref.18', '$lat52.19', '$const54.20']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=58, inst=CALL_FUNCTION(arg=1, lineno=127)
2024-03-17 20:07:02,807 - DEBUG - stack ['$50load_deref.18', '$56binary_multiply.21']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=127)
2024-03-17 20:07:02,807 - DEBUG - stack ['$58call_function.22']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=62, inst=BINARY_POWER(arg=None, lineno=127)
2024-03-17 20:07:02,807 - DEBUG - stack ['$58call_function.22', '$const60.23']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=64, inst=LOAD_DEREF(arg=1, lineno=128)
2024-03-17 20:07:02,807 - DEBUG - stack ['$62binary_power.24']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=128)
2024-03-17 20:07:02,807 - DEBUG - stack ['$62binary_power.24', '$64load_deref.25']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=68, inst=CALL_FUNCTION(arg=1, lineno=128)
2024-03-17 20:07:02,807 - DEBUG - stack ['$62binary_power.24', '$64load_deref.25', '$lat166.26']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=70, inst=LOAD_DEREF(arg=1, lineno=128)
2024-03-17 20:07:02,807 - DEBUG - stack ['$62binary_power.24', '$68call_function.27']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=72, inst=LOAD_FAST(arg=2, lineno=128)
2024-03-17 20:07:02,807 - DEBUG - stack ['$62binary_power.24', '$68call_function.27', '$70load_deref.28']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=74, inst=CALL_FUNCTION(arg=1, lineno=128)
2024-03-17 20:07:02,807 - DEBUG - stack ['$62binary_power.24', '$68call_function.27', '$70load_deref.28', '$lat272.29']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=76, inst=BINARY_MULTIPLY(arg=None, lineno=128)
2024-03-17 20:07:02,807 - DEBUG - stack ['$62binary_power.24', '$68call_function.27', '$74call_function.30']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=78, inst=LOAD_DEREF(arg=3, lineno=128)
2024-03-17 20:07:02,807 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=5, lineno=128)
2024-03-17 20:07:02,807 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$78load_deref.32']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=82, inst=LOAD_CONST(arg=1, lineno=128)
2024-03-17 20:07:02,807 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$78load_deref.32', '$lng80.33']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=84, inst=BINARY_MULTIPLY(arg=None, lineno=128)
2024-03-17 20:07:02,807 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$78load_deref.32', '$lng80.33', '$const82.34']
2024-03-17 20:07:02,807 - DEBUG - dispatch pc=86, inst=CALL_FUNCTION(arg=1, lineno=128)
2024-03-17 20:07:02,817 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$78load_deref.32', '$84binary_multiply.35']
2024-03-17 20:07:02,817 - DEBUG - dispatch pc=88, inst=LOAD_CONST(arg=2, lineno=128)
2024-03-17 20:07:02,817 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$86call_function.36']
2024-03-17 20:07:02,817 - DEBUG - dispatch pc=90, inst=BINARY_POWER(arg=None, lineno=128)
2024-03-17 20:07:02,817 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$86call_function.36', '$const88.37']
2024-03-17 20:07:02,817 - DEBUG - dispatch pc=92, inst=BINARY_MULTIPLY(arg=None, lineno=128)
2024-03-17 20:07:02,817 - DEBUG - stack ['$62binary_power.24', '$76binary_multiply.31', '$90binary_power.38']
2024-03-17 20:07:02,817 - DEBUG - dispatch pc=94, inst=BINARY_ADD(arg=None, lineno=127)
2024-03-17 20:07:02,817 - DEBUG - stack ['$62binary_power.24', '$92binary_multiply.39']
2024-03-17 20:07:02,817 - DEBUG - dispatch pc=96, inst=STORE_FAST(arg=6, lineno=127)
2024-03-17 20:07:02,817 - DEBUG - stack ['$94binary_add.40']
2024-03-17 20:07:02,817 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=2, lineno=131)
2024-03-17 20:07:02,817 - DEBUG - stack []
2024-03-17 20:07:02,817 - DEBUG - dispatch pc=100, inst=LOAD_DEREF(arg=0, lineno=131)
2024-03-17 20:07:02,817 - DEBUG - stack ['$const98.41']
2024-03-17 20:07:02,817 - DEBUG - dispatch pc=102, inst=LOAD_DEREF(arg=4, lineno=131)
2024-03-17 20:07:02,817 - DEBUG - stack ['$const98.41', '$100load_deref.42']
2024-03-17 20:07:02,817 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=6, lineno=131)
2024-03-17 20:07:02,817 - DEBUG - stack ['$const98.41', '$100load_deref.42', '$102load_deref.43']
2024-03-17 20:07:02,817 - DEBUG - dispatch pc=106, inst=CALL_FUNCTION(arg=1, lineno=131)
2024-03-17 20:07:02,817 - DEBUG - stack ['$const98.41', '$100load_deref.42', '$102load_deref.43', '$d104.44']
2024-03-17 20:07:02,817 - DEBUG - dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=131)
2024-03-17 20:07:02,817 - DEBUG - stack ['$const98.41', '$100load_deref.42', '$106call_function.45']
2024-03-17 20:07:02,817 - DEBUG - dispatch pc=110, inst=BINARY_MULTIPLY(arg=None, lineno=131)
2024-03-17 20:07:02,817 - DEBUG - stack ['$const98.41', '$108call_function.46']
2024-03-17 20:07:02,817 - DEBUG - dispatch pc=112, inst=RETURN_VALUE(arg=None, lineno=131)
2024-03-17 20:07:02,817 - DEBUG - stack ['$110binary_multiply.47']
2024-03-17 20:07:02,817 - DEBUG - end state. edges=[]
2024-03-17 20:07:02,817 - DEBUG - -------------------------Prune PHIs-------------------------
2024-03-17 20:07:02,817 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-03-17 20:07:02,817 - DEBUG - defmap: {}
2024-03-17 20:07:02,817 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-03-17 20:07:02,817 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-03-17 20:07:02,817 - DEBUG - keep phismap: {}
2024-03-17 20:07:02,817 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-03-17 20:07:02,817 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-03-17 20:07:02,817 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$lat14.1'}), (6, {'func': '$2load_deref.0', 'args': ['$lat14.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$lng112.4'}), (14, {'func': '$10load_deref.3', 'args': ['$lng112.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$18load_deref.6'}), (20, {'res': '$lat220.7'}), (22, {'func': '$18load_deref.6', 'args': ['$lat220.7'], 'res': '$22call_function.8'}), (24, {'value': '$22call_function.8'}), (26, {'res': '$26load_deref.9'}), (28, {'res': '$lng228.10'}), (30, {'func': '$26load_deref.9', 'args': ['$lng228.10'], 'res': '$30call_function.11'}), (32, {'value': '$30call_function.11'}), (34, {'res': '$lat234.12'}), (36, {'res': '$lat136.13'}), (38, {'lhs': '$lat234.12', 'rhs': '$lat136.13', 'res': '$38binary_subtract.14'}), (40, {'value': '$38binary_subtract.14'}), (42, {'res': '$lng242.15'}), (44, {'res': '$lng144.16'}), (46, {'lhs': '$lng242.15', 'rhs': '$lng144.16', 'res': '$46binary_subtract.17'}), (48, {'value': '$46binary_subtract.17'}), (50, {'res': '$50load_deref.18'}), (52, {'res': '$lat52.19'}), (54, {'res': '$const54.20'}), (56, {'lhs': '$lat52.19', 'rhs': '$const54.20', 'res': '$56binary_multiply.21'}), (58, {'func': '$50load_deref.18', 'args': ['$56binary_multiply.21'], 'res': '$58call_function.22'}), (60, {'res': '$const60.23'}), (62, {'lhs': '$58call_function.22', 'rhs': '$const60.23', 'res': '$62binary_power.24'}), (64, {'res': '$64load_deref.25'}), (66, {'res': '$lat166.26'}), (68, {'func': '$64load_deref.25', 'args': ['$lat166.26'], 'res': '$68call_function.27'}), (70, {'res': '$70load_deref.28'}), (72, {'res': '$lat272.29'}), (74, {'func': '$70load_deref.28', 'args': ['$lat272.29'], 'res': '$74call_function.30'}), (76, {'lhs': '$68call_function.27', 'rhs': '$74call_function.30', 'res': '$76binary_multiply.31'}), (78, {'res': '$78load_deref.32'}), (80, {'res': '$lng80.33'}), (82, {'res': '$const82.34'}), (84, {'lhs': '$lng80.33', 'rhs': '$const82.34', 'res': '$84binary_multiply.35'}), (86, {'func': '$78load_deref.32', 'args': ['$84binary_multiply.35'], 'res': '$86call_function.36'}), (88, {'res': '$const88.37'}), (90, {'lhs': '$86call_function.36', 'rhs': '$const88.37', 'res': '$90binary_power.38'}), (92, {'lhs': '$76binary_multiply.31', 'rhs': '$90binary_power.38', 'res': '$92binary_multiply.39'}), (94, {'lhs': '$62binary_power.24', 'rhs': '$92binary_multiply.39', 'res': '$94binary_add.40'}), (96, {'value': '$94binary_add.40'}), (98, {'res': '$const98.41'}), (100, {'res': '$100load_deref.42'}), (102, {'res': '$102load_deref.43'}), (104, {'res': '$d104.44'}), (106, {'func': '$102load_deref.43', 'args': ['$d104.44'], 'res': '$106call_function.45'}), (108, {'func': '$100load_deref.42', 'args': ['$106call_function.45'], 'res': '$108call_function.46'}), (110, {'lhs': '$const98.41', 'rhs': '$108call_function.46', 'res': '$110binary_multiply.47'}), (112, {'retval': '$110binary_multiply.47', 'castval': '$112return_value.48'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-17 20:07:02,817 - DEBUG - label 0:
    lat1 = arg(0, name=lat1)                 ['lat1']
    lng1 = arg(1, name=lng1)                 ['lng1']
    lat2 = arg(2, name=lat2)                 ['lat2']
    lng2 = arg(3, name=lng2)                 ['lng2']
    $2load_deref.0 = freevar(radians: <built-in function radians>) ['$2load_deref.0']
    lat1.1 = call $2load_deref.0(lat1, func=$2load_deref.0, args=[Var(lat1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', 'lat1', 'lat1.1']
    $10load_deref.3 = freevar(radians: <built-in function radians>) ['$10load_deref.3']
    lng1.1 = call $10load_deref.3(lng1, func=$10load_deref.3, args=[Var(lng1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'lng1', 'lng1.1']
    $18load_deref.6 = freevar(radians: <built-in function radians>) ['$18load_deref.6']
    lat2.1 = call $18load_deref.6(lat2, func=$18load_deref.6, args=[Var(lat2, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_deref.6', 'lat2', 'lat2.1']
    $26load_deref.9 = freevar(radians: <built-in function radians>) ['$26load_deref.9']
    lng2.1 = call $26load_deref.9(lng2, func=$26load_deref.9, args=[Var(lng2, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_deref.9', 'lng2', 'lng2.1']
    lat = lat2.1 - lat1.1                    ['lat', 'lat1.1', 'lat2.1']
    lng = lng2.1 - lng1.1                    ['lng', 'lng1.1', 'lng2.1']
    $50load_deref.18 = freevar(sin: <built-in function sin>) ['$50load_deref.18']
    $const54.20 = const(float, 0.5)          ['$const54.20']
    $56binary_multiply.21 = lat * $const54.20 ['$56binary_multiply.21', '$const54.20', 'lat']
    $58call_function.22 = call $50load_deref.18($56binary_multiply.21, func=$50load_deref.18, args=[Var($56binary_multiply.21, haversine.py:127)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_deref.18', '$56binary_multiply.21', '$58call_function.22']
    $const60.23 = const(int, 2)              ['$const60.23']
    $62binary_power.24 = $58call_function.22 ** $const60.23 ['$58call_function.22', '$62binary_power.24', '$const60.23']
    $64load_deref.25 = freevar(cos: <built-in function cos>) ['$64load_deref.25']
    $68call_function.27 = call $64load_deref.25(lat1.1, func=$64load_deref.25, args=[Var(lat1.1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_deref.25', '$68call_function.27', 'lat1.1']
    $70load_deref.28 = freevar(cos: <built-in function cos>) ['$70load_deref.28']
    $74call_function.30 = call $70load_deref.28(lat2.1, func=$70load_deref.28, args=[Var(lat2.1, haversine.py:123)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_deref.28', '$74call_function.30', 'lat2.1']
    $76binary_multiply.31 = $68call_function.27 * $74call_function.30 ['$68call_function.27', '$74call_function.30', '$76binary_multiply.31']
    $78load_deref.32 = freevar(sin: <built-in function sin>) ['$78load_deref.32']
    $const82.34 = const(float, 0.5)          ['$const82.34']
    $84binary_multiply.35 = lng * $const82.34 ['$84binary_multiply.35', '$const82.34', 'lng']
    $86call_function.36 = call $78load_deref.32($84binary_multiply.35, func=$78load_deref.32, args=[Var($84binary_multiply.35, haversine.py:128)], kws=(), vararg=None, varkwarg=None, target=None) ['$78load_deref.32', '$84binary_multiply.35', '$86call_function.36']
    $const88.37 = const(int, 2)              ['$const88.37']
    $90binary_power.38 = $86call_function.36 ** $const88.37 ['$86call_function.36', '$90binary_power.38', '$const88.37']
    $92binary_multiply.39 = $76binary_multiply.31 * $90binary_power.38 ['$76binary_multiply.31', '$90binary_power.38', '$92binary_multiply.39']
    d = $62binary_power.24 + $92binary_multiply.39 ['$62binary_power.24', '$92binary_multiply.39', 'd']
    $const98.41 = const(int, 2)              ['$const98.41']
    $100load_deref.42 = freevar(asin: <built-in function asin>) ['$100load_deref.42']
    $102load_deref.43 = freevar(sqrt: <built-in function sqrt>) ['$102load_deref.43']
    $106call_function.45 = call $102load_deref.43(d, func=$102load_deref.43, args=[Var(d, haversine.py:127)], kws=(), vararg=None, varkwarg=None, target=None) ['$102load_deref.43', '$106call_function.45', 'd']
    $108call_function.46 = call $100load_deref.42($106call_function.45, func=$100load_deref.42, args=[Var($106call_function.45, haversine.py:131)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_deref.42', '$106call_function.45', '$108call_function.46']
    $110binary_multiply.47 = $const98.41 * $108call_function.46 ['$108call_function.46', '$110binary_multiply.47', '$const98.41']
    $112return_value.48 = cast(value=$110binary_multiply.47) ['$110binary_multiply.47', '$112return_value.48']
    return $112return_value.48               ['$112return_value.48']

2024-03-17 20:07:02,839 - DEBUG - ==== SSA block analysis pass on 0
2024-03-17 20:07:02,839 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E178733DF0>
2024-03-17 20:07:02,839 - DEBUG - on stmt: lat1 = arg(0, name=lat1)
2024-03-17 20:07:02,839 - DEBUG - on stmt: lng1 = arg(1, name=lng1)
2024-03-17 20:07:02,839 - DEBUG - on stmt: lat2 = arg(2, name=lat2)
2024-03-17 20:07:02,839 - DEBUG - on stmt: lng2 = arg(3, name=lng2)
2024-03-17 20:07:02,839 - DEBUG - on stmt: $2load_deref.0 = freevar(radians: <built-in function radians>)
2024-03-17 20:07:02,839 - DEBUG - on stmt: lat1.1 = call $2load_deref.0(lat1, func=$2load_deref.0, args=[Var(lat1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,840 - DEBUG - on stmt: $10load_deref.3 = freevar(radians: <built-in function radians>)
2024-03-17 20:07:02,840 - DEBUG - on stmt: lng1.1 = call $10load_deref.3(lng1, func=$10load_deref.3, args=[Var(lng1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,840 - DEBUG - on stmt: $18load_deref.6 = freevar(radians: <built-in function radians>)
2024-03-17 20:07:02,840 - DEBUG - on stmt: lat2.1 = call $18load_deref.6(lat2, func=$18load_deref.6, args=[Var(lat2, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,840 - DEBUG - on stmt: $26load_deref.9 = freevar(radians: <built-in function radians>)
2024-03-17 20:07:02,840 - DEBUG - on stmt: lng2.1 = call $26load_deref.9(lng2, func=$26load_deref.9, args=[Var(lng2, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,840 - DEBUG - on stmt: lat = lat2.1 - lat1.1
2024-03-17 20:07:02,840 - DEBUG - on stmt: lng = lng2.1 - lng1.1
2024-03-17 20:07:02,840 - DEBUG - on stmt: $50load_deref.18 = freevar(sin: <built-in function sin>)
2024-03-17 20:07:02,840 - DEBUG - on stmt: $const54.20 = const(float, 0.5)
2024-03-17 20:07:02,840 - DEBUG - on stmt: $56binary_multiply.21 = lat * $const54.20
2024-03-17 20:07:02,840 - DEBUG - on stmt: $58call_function.22 = call $50load_deref.18($56binary_multiply.21, func=$50load_deref.18, args=[Var($56binary_multiply.21, haversine.py:127)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,840 - DEBUG - on stmt: $const60.23 = const(int, 2)
2024-03-17 20:07:02,841 - DEBUG - on stmt: $62binary_power.24 = $58call_function.22 ** $const60.23
2024-03-17 20:07:02,841 - DEBUG - on stmt: $64load_deref.25 = freevar(cos: <built-in function cos>)
2024-03-17 20:07:02,841 - DEBUG - on stmt: $68call_function.27 = call $64load_deref.25(lat1.1, func=$64load_deref.25, args=[Var(lat1.1, haversine.py:121)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,841 - DEBUG - on stmt: $70load_deref.28 = freevar(cos: <built-in function cos>)
2024-03-17 20:07:02,841 - DEBUG - on stmt: $74call_function.30 = call $70load_deref.28(lat2.1, func=$70load_deref.28, args=[Var(lat2.1, haversine.py:123)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,841 - DEBUG - on stmt: $76binary_multiply.31 = $68call_function.27 * $74call_function.30
2024-03-17 20:07:02,841 - DEBUG - on stmt: $78load_deref.32 = freevar(sin: <built-in function sin>)
2024-03-17 20:07:02,841 - DEBUG - on stmt: $const82.34 = const(float, 0.5)
2024-03-17 20:07:02,841 - DEBUG - on stmt: $84binary_multiply.35 = lng * $const82.34
2024-03-17 20:07:02,841 - DEBUG - on stmt: $86call_function.36 = call $78load_deref.32($84binary_multiply.35, func=$78load_deref.32, args=[Var($84binary_multiply.35, haversine.py:128)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,841 - DEBUG - on stmt: $const88.37 = const(int, 2)
2024-03-17 20:07:02,841 - DEBUG - on stmt: $90binary_power.38 = $86call_function.36 ** $const88.37
2024-03-17 20:07:02,841 - DEBUG - on stmt: $92binary_multiply.39 = $76binary_multiply.31 * $90binary_power.38
2024-03-17 20:07:02,841 - DEBUG - on stmt: d = $62binary_power.24 + $92binary_multiply.39
2024-03-17 20:07:02,841 - DEBUG - on stmt: $const98.41 = const(int, 2)
2024-03-17 20:07:02,842 - DEBUG - on stmt: $100load_deref.42 = freevar(asin: <built-in function asin>)
2024-03-17 20:07:02,842 - DEBUG - on stmt: $102load_deref.43 = freevar(sqrt: <built-in function sqrt>)
2024-03-17 20:07:02,842 - DEBUG - on stmt: $106call_function.45 = call $102load_deref.43(d, func=$102load_deref.43, args=[Var(d, haversine.py:127)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,842 - DEBUG - on stmt: $108call_function.46 = call $100load_deref.42($106call_function.45, func=$100load_deref.42, args=[Var($106call_function.45, haversine.py:131)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,842 - DEBUG - on stmt: $110binary_multiply.47 = $const98.41 * $108call_function.46
2024-03-17 20:07:02,842 - DEBUG - on stmt: $112return_value.48 = cast(value=$110binary_multiply.47)
2024-03-17 20:07:02,842 - DEBUG - on stmt: return $112return_value.48
2024-03-17 20:07:02,842 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100load_deref.42': [<numba.core.ir.Assign object at 0x000001E178733250>],
             '$102load_deref.43': [<numba.core.ir.Assign object at 0x000001E1787333D0>],
             '$106call_function.45': [<numba.core.ir.Assign object at 0x000001E1787336D0>],
             '$108call_function.46': [<numba.core.ir.Assign object at 0x000001E178733850>],
             '$10load_deref.3': [<numba.core.ir.Assign object at 0x000001E17870D760>],
             '$110binary_multiply.47': [<numba.core.ir.Assign object at 0x000001E1787339A0>],
             '$112return_value.48': [<numba.core.ir.Assign object at 0x000001E178733AF0>],
             '$18load_deref.6': [<numba.core.ir.Assign object at 0x000001E17870DCA0>],
             '$26load_deref.9': [<numba.core.ir.Assign object at 0x000001E17872B220>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x000001E17870D220>],
             '$50load_deref.18': [<numba.core.ir.Assign object at 0x000001E17872BDF0>],
             '$56binary_multiply.21': [<numba.core.ir.Assign object at 0x000001E17872F280>],
             '$58call_function.22': [<numba.core.ir.Assign object at 0x000001E17872F430>],
             '$62binary_power.24': [<numba.core.ir.Assign object at 0x000001E17872F700>],
             '$64load_deref.25': [<numba.core.ir.Assign object at 0x000001E17872F850>],
             '$68call_function.27': [<numba.core.ir.Assign object at 0x000001E17872FB50>],
             '$70load_deref.28': [<numba.core.ir.Assign object at 0x000001E17872FC70>],
             '$74call_function.30': [<numba.core.ir.Assign object at 0x000001E17872FF70>],
             '$76binary_multiply.31': [<numba.core.ir.Assign object at 0x000001E178731100>],
             '$78load_deref.32': [<numba.core.ir.Assign object at 0x000001E178731250>],
             '$84binary_multiply.35': [<numba.core.ir.Assign object at 0x000001E1787316A0>],
             '$86call_function.36': [<numba.core.ir.Assign object at 0x000001E178731850>],
             '$90binary_power.38': [<numba.core.ir.Assign object at 0x000001E178731B20>],
             '$92binary_multiply.39': [<numba.core.ir.Assign object at 0x000001E178731CA0>],
             '$const54.20': [<numba.core.ir.Assign object at 0x000001E17872F0D0>],
             '$const60.23': [<numba.core.ir.Assign object at 0x000001E17872F550>],
             '$const82.34': [<numba.core.ir.Assign object at 0x000001E1787314F0>],
             '$const88.37': [<numba.core.ir.Assign object at 0x000001E178731970>],
             '$const98.41': [<numba.core.ir.Assign object at 0x000001E1787330D0>],
             'd': [<numba.core.ir.Assign object at 0x000001E178731E20>],
             'lat': [<numba.core.ir.Assign object at 0x000001E17872B9D0>],
             'lat1': [<numba.core.ir.Assign object at 0x000001E1786FAA90>],
             'lat1.1': [<numba.core.ir.Assign object at 0x000001E17870D520>],
             'lat2': [<numba.core.ir.Assign object at 0x000001E1786FACD0>],
             'lat2.1': [<numba.core.ir.Assign object at 0x000001E17870DFA0>],
             'lng': [<numba.core.ir.Assign object at 0x000001E17872BB80>],
             'lng1': [<numba.core.ir.Assign object at 0x000001E1786FAC10>],
             'lng1.1': [<numba.core.ir.Assign object at 0x000001E17870DA60>],
             'lng2': [<numba.core.ir.Assign object at 0x000001E17870D0A0>],
             'lng2.1': [<numba.core.ir.Assign object at 0x000001E17872B520>]})
2024-03-17 20:07:02,842 - DEBUG - SSA violators set()
2024-03-17 20:07:02,890 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=216)
           2	LOAD_DEREF(arg=1, lineno=216)
           4	LOAD_CONST(arg=1, lineno=216)
           6	CALL_FUNCTION(arg=1, lineno=216)
           8	STORE_FAST(arg=2, lineno=216)
          10	LOAD_DEREF(arg=1, lineno=217)
          12	LOAD_FAST(arg=0, lineno=217)
          14	CALL_FUNCTION(arg=1, lineno=217)
          16	STORE_FAST(arg=0, lineno=217)
          18	LOAD_FAST(arg=1, lineno=218)
          20	LOAD_CONST(arg=2, lineno=218)
          22	COMPARE_OP(arg=0, lineno=218)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=218)
          26	LOAD_CONST(arg=3, lineno=219)
          28	STORE_FAST(arg=3, lineno=219)
          30	LOAD_FAST(arg=1, lineno=220)
          32	UNARY_NEGATIVE(arg=None, lineno=220)
          34	STORE_FAST(arg=4, lineno=220)
          36	LOAD_FAST(arg=4, lineno=221)
          38	LOAD_CONST(arg=2, lineno=221)
          40	COMPARE_OP(arg=0, lineno=221)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=221)
          44	LOAD_GLOBAL(arg=0, lineno=222)
          46	RAISE_VARARGS(arg=1, lineno=222)
>         48	LOAD_DEREF(arg=0, lineno=223)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=223)
          52	LOAD_FAST(arg=0, lineno=224)
          54	LOAD_CONST(arg=2, lineno=224)
          56	COMPARE_OP(arg=2, lineno=224)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=224)
          60	LOAD_DEREF(arg=2, lineno=225)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=225)
          64	LOAD_DEREF(arg=2, lineno=226)
          66	RETURN_VALUE(arg=None, lineno=226)
>         68	LOAD_GLOBAL(arg=1, lineno=228)
          70	LOAD_CONST(arg=4, lineno=228)
          72	CALL_FUNCTION(arg=1, lineno=228)
          74	RAISE_VARARGS(arg=1, lineno=228)
>         76	LOAD_FAST(arg=0, lineno=229)
          78	LOAD_CONST(arg=1, lineno=229)
          80	COMPARE_OP(arg=3, lineno=229)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=229)
          84	LOAD_FAST(arg=0, lineno=229)
          86	LOAD_CONST(arg=5, lineno=229)
          88	COMPARE_OP(arg=3, lineno=229)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=229)
          92	LOAD_CONST(arg=2, lineno=230)
          94	RETURN_VALUE(arg=None, lineno=230)
          96	JUMP_FORWARD(arg=8, lineno=230)
>         98	LOAD_CONST(arg=6, lineno=232)
         100	STORE_FAST(arg=3, lineno=232)
         102	LOAD_FAST(arg=1, lineno=233)
         104	STORE_FAST(arg=4, lineno=233)
>        106	LOAD_FAST(arg=4, lineno=234)
         108	LOAD_CONST(arg=7, lineno=234)
         110	COMPARE_OP(arg=4, lineno=234)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=234)
         114	LOAD_GLOBAL(arg=2, lineno=236)
         116	LOAD_METHOD(arg=3, lineno=236)
         118	LOAD_FAST(arg=0, lineno=236)
         120	LOAD_GLOBAL(arg=4, lineno=236)
         122	LOAD_FAST(arg=1, lineno=236)
         124	CALL_FUNCTION(arg=1, lineno=236)
         126	CALL_METHOD(arg=2, lineno=236)
         128	RETURN_VALUE(arg=None, lineno=236)
>        130	LOAD_FAST(arg=4, lineno=237)
         132	LOAD_CONST(arg=2, lineno=237)
         134	COMPARE_OP(arg=3, lineno=237)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=237)
         138	LOAD_FAST(arg=4, lineno=238)
         140	LOAD_CONST(arg=1, lineno=238)
         142	BINARY_AND(arg=None, lineno=238)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=238)
         146	LOAD_FAST(arg=2, lineno=239)
         148	LOAD_FAST(arg=0, lineno=239)
         150	INPLACE_MULTIPLY(arg=None, lineno=239)
         152	STORE_FAST(arg=2, lineno=239)
>        154	LOAD_FAST(arg=4, lineno=240)
         156	LOAD_CONST(arg=1, lineno=240)
         158	INPLACE_RSHIFT(arg=None, lineno=240)
         160	STORE_FAST(arg=4, lineno=240)
         162	LOAD_FAST(arg=0, lineno=241)
         164	LOAD_FAST(arg=0, lineno=241)
         166	INPLACE_MULTIPLY(arg=None, lineno=241)
         168	STORE_FAST(arg=0, lineno=241)
         170	JUMP_ABSOLUTE(arg=130, lineno=241)
>        172	LOAD_FAST(arg=3, lineno=243)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=243)
         176	LOAD_CONST(arg=8, lineno=243)
         178	LOAD_FAST(arg=2, lineno=243)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=243)
         182	RETURN_VALUE(arg=None, lineno=243)
>        184	LOAD_FAST(arg=2, lineno=243)
         186	RETURN_VALUE(arg=None, lineno=243)
2024-03-17 20:07:02,890 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-03-17 20:07:02,890 - DEBUG - stack: []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=216)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=216)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=216)
2024-03-17 20:07:02,890 - DEBUG - stack ['$2load_deref.0']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=216)
2024-03-17 20:07:02,890 - DEBUG - stack ['$2load_deref.0', '$const4.1']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=2, lineno=216)
2024-03-17 20:07:02,890 - DEBUG - stack ['$6call_function.2']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=217)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=217)
2024-03-17 20:07:02,890 - DEBUG - stack ['$10load_deref.3']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=217)
2024-03-17 20:07:02,890 - DEBUG - stack ['$10load_deref.3', '$a12.4']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=0, lineno=217)
2024-03-17 20:07:02,890 - DEBUG - stack ['$14call_function.5']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=218)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=218)
2024-03-17 20:07:02,890 - DEBUG - stack ['$b18.6']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=218)
2024-03-17 20:07:02,890 - DEBUG - stack ['$b18.6', '$const20.7']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=218)
2024-03-17 20:07:02,890 - DEBUG - stack ['$22compare_op.8']
2024-03-17 20:07:02,890 - DEBUG - end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
2024-03-17 20:07:02,890 - DEBUG - pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
2024-03-17 20:07:02,890 - DEBUG - stack: []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=219)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=3, lineno=219)
2024-03-17 20:07:02,890 - DEBUG - stack ['$const26.0']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=220)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2024-03-17 20:07:02,890 - DEBUG - stack ['$b30.1']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=34, inst=STORE_FAST(arg=4, lineno=220)
2024-03-17 20:07:02,890 - DEBUG - stack ['$32unary_negative.2']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=221)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=221)
2024-03-17 20:07:02,890 - DEBUG - stack ['$exp36.3']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=221)
2024-03-17 20:07:02,890 - DEBUG - stack ['$exp36.3', '$const38.4']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=221)
2024-03-17 20:07:02,890 - DEBUG - stack ['$40compare_op.5']
2024-03-17 20:07:02,890 - DEBUG - end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
2024-03-17 20:07:02,890 - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2024-03-17 20:07:02,890 - DEBUG - stack: []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=232)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=3, lineno=232)
2024-03-17 20:07:02,890 - DEBUG - stack ['$const98.0']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=233)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=104, inst=STORE_FAST(arg=4, lineno=233)
2024-03-17 20:07:02,890 - DEBUG - stack ['$b102.1']
2024-03-17 20:07:02,890 - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
2024-03-17 20:07:02,890 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-17 20:07:02,890 - DEBUG - stack: []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=222)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=222)
2024-03-17 20:07:02,890 - DEBUG - stack ['$44load_global.0']
2024-03-17 20:07:02,890 - DEBUG - end state. edges=[]
2024-03-17 20:07:02,890 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-17 20:07:02,890 - DEBUG - stack: []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=223)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=223)
2024-03-17 20:07:02,890 - DEBUG - stack ['$48load_deref.0']
2024-03-17 20:07:02,890 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
2024-03-17 20:07:02,890 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-17 20:07:02,890 - DEBUG - stack: []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=234)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=234)
2024-03-17 20:07:02,890 - DEBUG - stack ['$exp106.0']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=234)
2024-03-17 20:07:02,890 - DEBUG - stack ['$exp106.0', '$const108.1']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=234)
2024-03-17 20:07:02,890 - DEBUG - stack ['$110compare_op.2']
2024-03-17 20:07:02,890 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
2024-03-17 20:07:02,890 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-17 20:07:02,890 - DEBUG - stack: []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=224)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=224)
2024-03-17 20:07:02,890 - DEBUG - stack ['$a52.0']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=224)
2024-03-17 20:07:02,890 - DEBUG - stack ['$a52.0', '$const54.1']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=224)
2024-03-17 20:07:02,890 - DEBUG - stack ['$56compare_op.2']
2024-03-17 20:07:02,890 - DEBUG - end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
2024-03-17 20:07:02,890 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2024-03-17 20:07:02,890 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2024-03-17 20:07:02,890 - DEBUG - stack: []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=236)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=236)
2024-03-17 20:07:02,890 - DEBUG - stack ['$114load_global.0']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=236)
2024-03-17 20:07:02,890 - DEBUG - stack ['$116load_method.1']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=236)
2024-03-17 20:07:02,890 - DEBUG - stack ['$116load_method.1', '$a118.2']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=236)
2024-03-17 20:07:02,890 - DEBUG - stack ['$116load_method.1', '$a118.2', '$120load_global.3']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=236)
2024-03-17 20:07:02,890 - DEBUG - stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=236)
2024-03-17 20:07:02,890 - DEBUG - stack ['$116load_method.1', '$a118.2', '$124call_function.5']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=236)
2024-03-17 20:07:02,890 - DEBUG - stack ['$126call_method.6']
2024-03-17 20:07:02,890 - DEBUG - end state. edges=[]
2024-03-17 20:07:02,890 - DEBUG - pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2024-03-17 20:07:02,890 - DEBUG - stack: []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=237)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=237)
2024-03-17 20:07:02,890 - DEBUG - stack ['$exp130.0']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=237)
2024-03-17 20:07:02,890 - DEBUG - stack ['$exp130.0', '$const132.1']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=237)
2024-03-17 20:07:02,890 - DEBUG - stack ['$134compare_op.2']
2024-03-17 20:07:02,890 - DEBUG - end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
2024-03-17 20:07:02,890 - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
2024-03-17 20:07:02,890 - DEBUG - stack: []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=225)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=225)
2024-03-17 20:07:02,890 - DEBUG - stack ['$60load_deref.0']
2024-03-17 20:07:02,890 - DEBUG - end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
2024-03-17 20:07:02,890 - DEBUG - pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
2024-03-17 20:07:02,890 - DEBUG - stack: []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=229)
2024-03-17 20:07:02,890 - DEBUG - stack []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=229)
2024-03-17 20:07:02,890 - DEBUG - stack ['$a76.0']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=229)
2024-03-17 20:07:02,890 - DEBUG - stack ['$a76.0', '$const78.1']
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=229)
2024-03-17 20:07:02,890 - DEBUG - stack ['$80compare_op.2']
2024-03-17 20:07:02,890 - DEBUG - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
2024-03-17 20:07:02,890 - DEBUG - pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-17 20:07:02,890 - DEBUG - stack: []
2024-03-17 20:07:02,890 - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=238)
2024-03-17 20:07:02,900 - DEBUG - stack []
2024-03-17 20:07:02,900 - DEBUG - dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=238)
2024-03-17 20:07:02,900 - DEBUG - stack ['$exp138.0']
2024-03-17 20:07:02,900 - DEBUG - dispatch pc=142, inst=BINARY_AND(arg=None, lineno=238)
2024-03-17 20:07:02,900 - DEBUG - stack ['$exp138.0', '$const140.1']
2024-03-17 20:07:02,900 - DEBUG - dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=238)
2024-03-17 20:07:02,900 - DEBUG - stack ['$142binary_and.2']
2024-03-17 20:07:02,900 - DEBUG - end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2024-03-17 20:07:02,900 - DEBUG - pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-03-17 20:07:02,900 - DEBUG - stack: []
2024-03-17 20:07:02,900 - DEBUG - dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=243)
2024-03-17 20:07:02,900 - DEBUG - stack []
2024-03-17 20:07:02,900 - DEBUG - dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=243)
2024-03-17 20:07:02,900 - DEBUG - stack ['$invert172.0']
2024-03-17 20:07:02,900 - DEBUG - end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
2024-03-17 20:07:02,900 - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
2024-03-17 20:07:02,900 - DEBUG - stack: []
2024-03-17 20:07:02,900 - DEBUG - dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=226)
2024-03-17 20:07:02,900 - DEBUG - stack []
2024-03-17 20:07:02,900 - DEBUG - dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=226)
2024-03-17 20:07:02,900 - DEBUG - stack ['$64load_deref.0']
2024-03-17 20:07:02,900 - DEBUG - end state. edges=[]
2024-03-17 20:07:02,901 - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
2024-03-17 20:07:02,901 - DEBUG - stack: []
2024-03-17 20:07:02,901 - DEBUG - dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=228)
2024-03-17 20:07:02,901 - DEBUG - stack []
2024-03-17 20:07:02,901 - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=228)
2024-03-17 20:07:02,901 - DEBUG - stack ['$68load_global.0']
2024-03-17 20:07:02,901 - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=228)
2024-03-17 20:07:02,901 - DEBUG - stack ['$68load_global.0', '$const70.1']
2024-03-17 20:07:02,901 - DEBUG - dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=228)
2024-03-17 20:07:02,901 - DEBUG - stack ['$72call_function.2']
2024-03-17 20:07:02,901 - DEBUG - end state. edges=[]
2024-03-17 20:07:02,901 - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
2024-03-17 20:07:02,901 - DEBUG - stack: []
2024-03-17 20:07:02,901 - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=229)
2024-03-17 20:07:02,901 - DEBUG - stack []
2024-03-17 20:07:02,901 - DEBUG - dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=229)
2024-03-17 20:07:02,901 - DEBUG - stack ['$a84.0']
2024-03-17 20:07:02,901 - DEBUG - dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=229)
2024-03-17 20:07:02,901 - DEBUG - stack ['$a84.0', '$const86.1']
2024-03-17 20:07:02,902 - DEBUG - dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=229)
2024-03-17 20:07:02,902 - DEBUG - stack ['$88compare_op.2']
2024-03-17 20:07:02,902 - DEBUG - end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
2024-03-17 20:07:02,902 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-17 20:07:02,902 - DEBUG - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2024-03-17 20:07:02,902 - DEBUG - stack: []
2024-03-17 20:07:02,902 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=239)
2024-03-17 20:07:02,902 - DEBUG - stack []
2024-03-17 20:07:02,902 - DEBUG - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=239)
2024-03-17 20:07:02,902 - DEBUG - stack ['$r146.0']
2024-03-17 20:07:02,902 - DEBUG - dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=239)
2024-03-17 20:07:02,902 - DEBUG - stack ['$r146.0', '$a148.1']
2024-03-17 20:07:02,902 - DEBUG - dispatch pc=152, inst=STORE_FAST(arg=2, lineno=239)
2024-03-17 20:07:02,902 - DEBUG - stack ['$150inplace_multiply.2']
2024-03-17 20:07:02,902 - DEBUG - end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
2024-03-17 20:07:02,903 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-03-17 20:07:02,903 - DEBUG - stack: []
2024-03-17 20:07:02,903 - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=240)
2024-03-17 20:07:02,903 - DEBUG - stack []
2024-03-17 20:07:02,903 - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=240)
2024-03-17 20:07:02,903 - DEBUG - stack ['$exp154.0']
2024-03-17 20:07:02,903 - DEBUG - dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=240)
2024-03-17 20:07:02,903 - DEBUG - stack ['$exp154.0', '$const156.1']
2024-03-17 20:07:02,903 - DEBUG - dispatch pc=160, inst=STORE_FAST(arg=4, lineno=240)
2024-03-17 20:07:02,903 - DEBUG - stack ['$158inplace_rshift.2']
2024-03-17 20:07:02,903 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=241)
2024-03-17 20:07:02,903 - DEBUG - stack []
2024-03-17 20:07:02,903 - DEBUG - dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=241)
2024-03-17 20:07:02,903 - DEBUG - stack ['$a162.3']
2024-03-17 20:07:02,903 - DEBUG - dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=241)
2024-03-17 20:07:02,903 - DEBUG - stack ['$a162.3', '$a164.4']
2024-03-17 20:07:02,904 - DEBUG - dispatch pc=168, inst=STORE_FAST(arg=0, lineno=241)
2024-03-17 20:07:02,904 - DEBUG - stack ['$166inplace_multiply.5']
2024-03-17 20:07:02,904 - DEBUG - dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=241)
2024-03-17 20:07:02,904 - DEBUG - stack []
2024-03-17 20:07:02,904 - DEBUG - end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
2024-03-17 20:07:02,904 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-17 20:07:02,904 - DEBUG - stack: []
2024-03-17 20:07:02,904 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=243)
2024-03-17 20:07:02,904 - DEBUG - stack []
2024-03-17 20:07:02,904 - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=243)
2024-03-17 20:07:02,904 - DEBUG - stack ['$const176.0']
2024-03-17 20:07:02,904 - DEBUG - dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=243)
2024-03-17 20:07:02,904 - DEBUG - stack ['$const176.0', '$r178.1']
2024-03-17 20:07:02,904 - DEBUG - dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=243)
2024-03-17 20:07:02,904 - DEBUG - stack ['$180binary_true_divide.2']
2024-03-17 20:07:02,904 - DEBUG - end state. edges=[]
2024-03-17 20:07:02,904 - DEBUG - pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-17 20:07:02,905 - DEBUG - stack: []
2024-03-17 20:07:02,905 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=243)
2024-03-17 20:07:02,905 - DEBUG - stack []
2024-03-17 20:07:02,905 - DEBUG - dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=243)
2024-03-17 20:07:02,905 - DEBUG - stack ['$r184.0']
2024-03-17 20:07:02,905 - DEBUG - end state. edges=[]
2024-03-17 20:07:02,905 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-17 20:07:02,905 - DEBUG - stack: []
2024-03-17 20:07:02,905 - DEBUG - dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=230)
2024-03-17 20:07:02,905 - DEBUG - stack []
2024-03-17 20:07:02,905 - DEBUG - dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=230)
2024-03-17 20:07:02,905 - DEBUG - stack ['$const92.0']
2024-03-17 20:07:02,905 - DEBUG - end state. edges=[]
2024-03-17 20:07:02,905 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-17 20:07:02,905 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-03-17 20:07:02,905 - DEBUG - pending: deque([State(pc_initial=130 nstack_initial=0)])
2024-03-17 20:07:02,906 - DEBUG - -------------------------Prune PHIs-------------------------
2024-03-17 20:07:02,906 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
2024-03-17 20:07:02,906 - DEBUG - defmap: {}
2024-03-17 20:07:02,906 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-03-17 20:07:02,906 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-03-17 20:07:02,906 - DEBUG - keep phismap: {}
2024-03-17 20:07:02,906 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-03-17 20:07:02,906 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-03-17 20:07:02,906 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
2024-03-17 20:07:02,907 - DEBUG - block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
2024-03-17 20:07:02,907 - DEBUG - block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-17 20:07:02,907 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
2024-03-17 20:07:02,907 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
2024-03-17 20:07:02,907 - DEBUG - block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
2024-03-17 20:07:02,907 - DEBUG - block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-17 20:07:02,907 - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-17 20:07:02,907 - DEBUG - block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
2024-03-17 20:07:02,907 - DEBUG - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
2024-03-17 20:07:02,907 - DEBUG - block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-17 20:07:02,907 - DEBUG - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
2024-03-17 20:07:02,907 - DEBUG - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
2024-03-17 20:07:02,907 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-17 20:07:02,908 - DEBUG - block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
2024-03-17 20:07:02,908 - DEBUG - block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
2024-03-17 20:07:02,908 - DEBUG - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
2024-03-17 20:07:02,908 - DEBUG - block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
2024-03-17 20:07:02,908 - DEBUG - block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
2024-03-17 20:07:02,908 - DEBUG - block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-17 20:07:02,908 - DEBUG - block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-03-17 20:07:02,911 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' (built-in)>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

2024-03-17 20:07:02,930 - DEBUG - ==== SSA block analysis pass on 0
2024-03-17 20:07:02,930 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E17878D760>
2024-03-17 20:07:02,930 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 20:07:02,930 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 20:07:02,930 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 20:07:02,930 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 20:07:02,930 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,931 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 20:07:02,931 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,931 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 20:07:02,931 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 20:07:02,931 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,931 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,931 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 20:07:02,931 - DEBUG - ==== SSA block analysis pass on 26
2024-03-17 20:07:02,931 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E17878D760>
2024-03-17 20:07:02,931 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 20:07:02,931 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 20:07:02,931 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 20:07:02,931 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 20:07:02,931 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,932 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,932 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 20:07:02,932 - DEBUG - ==== SSA block analysis pass on 44
2024-03-17 20:07:02,932 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E17878D760>
2024-03-17 20:07:02,932 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 20:07:02,932 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 20:07:02,932 - DEBUG - ==== SSA block analysis pass on 48
2024-03-17 20:07:02,932 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E17878D760>
2024-03-17 20:07:02,932 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 20:07:02,932 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,932 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,932 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,932 - DEBUG - ==== SSA block analysis pass on 98
2024-03-17 20:07:02,932 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E17878D760>
2024-03-17 20:07:02,932 - DEBUG - on stmt: invert = const(bool, False)
2024-03-17 20:07:02,932 - DEBUG - on stmt: exp = b
2024-03-17 20:07:02,933 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,933 - DEBUG - ==== SSA block analysis pass on 106
2024-03-17 20:07:02,933 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E17878D760>
2024-03-17 20:07:02,933 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 20:07:02,933 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-17 20:07:02,933 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,933 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,933 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 20:07:02,933 - DEBUG - ==== SSA block analysis pass on 114
2024-03-17 20:07:02,933 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E17878D760>
2024-03-17 20:07:02,933 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 20:07:02,933 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 20:07:02,933 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 20:07:02,933 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,933 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,934 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 20:07:02,934 - DEBUG - on stmt: return $128return_value.7
2024-03-17 20:07:02,934 - DEBUG - ==== SSA block analysis pass on 130
2024-03-17 20:07:02,934 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E17878D760>
2024-03-17 20:07:02,934 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 20:07:02,934 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-17 20:07:02,934 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,934 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,934 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 20:07:02,934 - DEBUG - ==== SSA block analysis pass on 138
2024-03-17 20:07:02,934 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E17878D760>
2024-03-17 20:07:02,934 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 20:07:02,934 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-17 20:07:02,934 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,934 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,935 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 20:07:02,935 - DEBUG - ==== SSA block analysis pass on 146
2024-03-17 20:07:02,935 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E17878D760>
2024-03-17 20:07:02,935 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,935 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-17 20:07:02,935 - DEBUG - on stmt: jump 154
2024-03-17 20:07:02,935 - DEBUG - ==== SSA block analysis pass on 154
2024-03-17 20:07:02,935 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E17878D760>
2024-03-17 20:07:02,935 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 20:07:02,935 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,935 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-17 20:07:02,935 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,935 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-17 20:07:02,935 - DEBUG - on stmt: jump 130
2024-03-17 20:07:02,935 - DEBUG - ==== SSA block analysis pass on 172
2024-03-17 20:07:02,935 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E17878D760>
2024-03-17 20:07:02,935 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,935 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,935 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 20:07:02,935 - DEBUG - ==== SSA block analysis pass on 176
2024-03-17 20:07:02,935 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E17878D760>
2024-03-17 20:07:02,935 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 20:07:02,935 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-17 20:07:02,935 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 20:07:02,935 - DEBUG - on stmt: return $182return_value.3
2024-03-17 20:07:02,935 - DEBUG - ==== SSA block analysis pass on 184
2024-03-17 20:07:02,935 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E17878D760>
2024-03-17 20:07:02,935 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-17 20:07:02,935 - DEBUG - on stmt: return $186return_value.1
2024-03-17 20:07:02,935 - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x000001E1787C4D00>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x000001E1787E7D00>],
             '$112pred': [<numba.core.ir.Assign object at 0x000001E1787E7F70>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x000001E1787E91F0>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x000001E1787E9370>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x000001E1787E9610>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x000001E1787E9910>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x000001E1787E9AC0>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x000001E1787E9BB0>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x000001E1787EB0A0>],
             '$136pred': [<numba.core.ir.Assign object at 0x000001E1787EB310>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x000001E1787EB820>],
             '$144pred': [<numba.core.ir.Assign object at 0x000001E1787EBA90>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x000001E1787EBF40>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x000001E1787EE4C0>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x000001E1787EE940>],
             '$174pred': [<numba.core.ir.Assign object at 0x000001E1787EEDF0>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x000001E1787F0340>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x000001E1787F0490>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x000001E1787F07F0>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x000001E1787CE550>],
             '$24pred': [<numba.core.ir.Assign object at 0x000001E1787CE7C0>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x000001E1787C42B0>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x000001E1787DF250>],
             '$42pred': [<numba.core.ir.Assign object at 0x000001E1787DF4C0>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x000001E1787DF5E0>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x000001E17878D1C0>],
             '$50pred': [<numba.core.ir.Assign object at 0x000001E1787DF8B0>],
             '$const108.1': [<numba.core.ir.Assign object at 0x000001E1787E7B50>],
             '$const132.1': [<numba.core.ir.Assign object at 0x000001E1787E9EB0>],
             '$const140.1': [<numba.core.ir.Assign object at 0x000001E1787EB670>],
             '$const156.1': [<numba.core.ir.Assign object at 0x000001E1787EE310>],
             '$const176.0': [<numba.core.ir.Assign object at 0x000001E1787F0070>],
             '$const20.7': [<numba.core.ir.Assign object at 0x000001E1787CE3A0>],
             '$const38.4': [<numba.core.ir.Assign object at 0x000001E1787DF0A0>],
             '$const4.1': [<numba.core.ir.Assign object at 0x000001E1787C4A30>],
             'a': [<numba.core.ir.Assign object at 0x000001E1787C4850>],
             'a.1': [<numba.core.ir.Assign object at 0x000001E1787CE040>,
                     <numba.core.ir.Assign object at 0x000001E1787EEA00>],
             'b': [<numba.core.ir.Assign object at 0x000001E1787C4430>],
             'bool112': [<numba.core.ir.Assign object at 0x000001E1787E7E50>],
             'bool136': [<numba.core.ir.Assign object at 0x000001E1787EB1F0>],
             'bool144': [<numba.core.ir.Assign object at 0x000001E1787EB970>],
             'bool174': [<numba.core.ir.Assign object at 0x000001E1787EECD0>],
             'bool24': [<numba.core.ir.Assign object at 0x000001E1787CE6A0>],
             'bool42': [<numba.core.ir.Assign object at 0x000001E1787DF3A0>],
             'bool50': [<numba.core.ir.Assign object at 0x000001E1787DF790>],
             'exp': [<numba.core.ir.Assign object at 0x000001E1787CECA0>,
                     <numba.core.ir.Assign object at 0x000001E1787E78E0>,
                     <numba.core.ir.Assign object at 0x000001E1787EE580>],
             'invert': [<numba.core.ir.Assign object at 0x000001E1787CE8E0>,
                        <numba.core.ir.Assign object at 0x000001E1787E7610>],
             'r': [<numba.core.ir.Assign object at 0x000001E1787C41C0>,
                   <numba.core.ir.Assign object at 0x000001E1787EE040>]})
2024-03-17 20:07:02,935 - DEBUG - SSA violators {'exp', 'invert', 'a.1', 'r'}
2024-03-17 20:07:02,935 - DEBUG - Fix SSA violator on var exp
2024-03-17 20:07:02,935 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-17 20:07:02,935 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178792A60>
2024-03-17 20:07:02,935 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 20:07:02,935 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 20:07:02,935 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 20:07:02,935 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 20:07:02,935 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,935 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 20:07:02,935 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,935 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 20:07:02,935 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 20:07:02,935 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,935 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,935 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 20:07:02,935 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-17 20:07:02,935 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178792A60>
2024-03-17 20:07:02,935 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 20:07:02,935 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 20:07:02,935 - DEBUG - first assign: exp
2024-03-17 20:07:02,935 - DEBUG - replaced with: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 20:07:02,935 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 20:07:02,935 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 20:07:02,935 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,935 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,935 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 20:07:02,935 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-17 20:07:02,935 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178792A60>
2024-03-17 20:07:02,935 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 20:07:02,935 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 20:07:02,935 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-17 20:07:02,935 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178792A60>
2024-03-17 20:07:02,935 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 20:07:02,935 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,935 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,935 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,935 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-17 20:07:02,935 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178792A60>
2024-03-17 20:07:02,935 - DEBUG - on stmt: invert = const(bool, False)
2024-03-17 20:07:02,935 - DEBUG - on stmt: exp = b
2024-03-17 20:07:02,935 - DEBUG - replaced with: exp.1 = b
2024-03-17 20:07:02,935 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,935 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-17 20:07:02,935 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178792A60>
2024-03-17 20:07:02,935 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 20:07:02,935 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-17 20:07:02,935 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,935 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,940 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 20:07:02,940 - DEBUG - on stmt: return $128return_value.7
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-17 20:07:02,940 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,940 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-17 20:07:02,940 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,940 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,940 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-17 20:07:02,940 - DEBUG - on stmt: jump 154
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,940 - DEBUG - on stmt: exp = $158inplace_rshift.2
2024-03-17 20:07:02,940 - DEBUG - replaced with: exp.2 = $158inplace_rshift.2
2024-03-17 20:07:02,940 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,940 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-17 20:07:02,940 - DEBUG - on stmt: jump 130
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,940 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-17 20:07:02,940 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 20:07:02,940 - DEBUG - on stmt: return $182return_value.3
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-17 20:07:02,940 - DEBUG - on stmt: return $186return_value.1
2024-03-17 20:07:02,940 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x000001E178792AF0>],
             98: [<numba.core.ir.Assign object at 0x000001E1787F0E80>],
             154: [<numba.core.ir.Assign object at 0x000001E1787F0FA0>]})
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 20:07:02,940 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 20:07:02,940 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 20:07:02,940 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 20:07:02,940 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,940 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 20:07:02,940 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 20:07:02,940 - DEBUG - find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
2024-03-17 20:07:02,940 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,940 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 20:07:02,940 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 20:07:02,940 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,940 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: invert = const(bool, False)
2024-03-17 20:07:02,940 - DEBUG - on stmt: exp.1 = b
2024-03-17 20:07:02,940 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2024-03-17 20:07:02,940 - DEBUG - find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
2024-03-17 20:07:02,940 - DEBUG - find_def_from_top label 106
2024-03-17 20:07:02,940 - DEBUG - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
2024-03-17 20:07:02,940 - DEBUG - find_def_from_bottom label 48
2024-03-17 20:07:02,940 - DEBUG - find_def_from_top label 48
2024-03-17 20:07:02,940 - DEBUG - idom 26 from label 48
2024-03-17 20:07:02,940 - DEBUG - find_def_from_bottom label 26
2024-03-17 20:07:02,940 - DEBUG - incoming_def exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 20:07:02,940 - DEBUG - find_def_from_bottom label 98
2024-03-17 20:07:02,940 - DEBUG - incoming_def exp.1 = b
2024-03-17 20:07:02,940 - DEBUG - replaced with: $110compare_op.2 = exp.3 > $const108.1
2024-03-17 20:07:02,940 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,940 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 20:07:02,940 - DEBUG - on stmt: return $128return_value.7
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2024-03-17 20:07:02,940 - DEBUG - find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
2024-03-17 20:07:02,940 - DEBUG - find_def_from_top label 130
2024-03-17 20:07:02,940 - DEBUG - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
2024-03-17 20:07:02,940 - DEBUG - find_def_from_bottom label 106
2024-03-17 20:07:02,940 - DEBUG - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
2024-03-17 20:07:02,940 - DEBUG - find_def_from_bottom label 154
2024-03-17 20:07:02,940 - DEBUG - incoming_def exp.2 = $158inplace_rshift.2
2024-03-17 20:07:02,940 - DEBUG - replaced with: $134compare_op.2 = exp.4 != $const132.1
2024-03-17 20:07:02,940 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,940 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2024-03-17 20:07:02,940 - DEBUG - find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
2024-03-17 20:07:02,940 - DEBUG - find_def_from_top label 138
2024-03-17 20:07:02,940 - DEBUG - idom 130 from label 138
2024-03-17 20:07:02,940 - DEBUG - find_def_from_bottom label 130
2024-03-17 20:07:02,940 - DEBUG - replaced with: $142binary_and.2 = exp.4 & $const140.1
2024-03-17 20:07:02,940 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,940 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,940 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,940 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,940 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-17 20:07:02,940 - DEBUG - on stmt: jump 154
2024-03-17 20:07:02,940 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-17 20:07:02,940 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,950 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,951 - DEBUG - find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,951 - DEBUG - find_def_from_top label 154
2024-03-17 20:07:02,951 - DEBUG - idom 138 from label 154
2024-03-17 20:07:02,951 - DEBUG - find_def_from_bottom label 138
2024-03-17 20:07:02,951 - DEBUG - find_def_from_top label 138
2024-03-17 20:07:02,951 - DEBUG - idom 130 from label 138
2024-03-17 20:07:02,951 - DEBUG - find_def_from_bottom label 130
2024-03-17 20:07:02,951 - DEBUG - replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,951 - DEBUG - on stmt: exp.2 = $158inplace_rshift.2
2024-03-17 20:07:02,951 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,951 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-17 20:07:02,951 - DEBUG - on stmt: jump 130
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,951 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,951 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,951 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-17 20:07:02,951 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 20:07:02,951 - DEBUG - on stmt: return $182return_value.3
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,951 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-17 20:07:02,951 - DEBUG - on stmt: return $186return_value.1
2024-03-17 20:07:02,951 - DEBUG - Fix SSA violator on var invert
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178772970>
2024-03-17 20:07:02,951 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 20:07:02,951 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 20:07:02,951 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 20:07:02,951 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 20:07:02,951 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,951 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178772970>
2024-03-17 20:07:02,951 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 20:07:02,951 - DEBUG - first assign: invert
2024-03-17 20:07:02,951 - DEBUG - replaced with: invert = const(bool, True)
2024-03-17 20:07:02,951 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 20:07:02,951 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,951 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178772970>
2024-03-17 20:07:02,951 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 20:07:02,951 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178772970>
2024-03-17 20:07:02,951 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 20:07:02,951 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,951 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178772970>
2024-03-17 20:07:02,951 - DEBUG - on stmt: invert = const(bool, False)
2024-03-17 20:07:02,951 - DEBUG - replaced with: invert.1 = const(bool, False)
2024-03-17 20:07:02,951 - DEBUG - on stmt: exp.1 = b
2024-03-17 20:07:02,951 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178772970>
2024-03-17 20:07:02,951 - DEBUG - on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
2024-03-17 20:07:02,951 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $110compare_op.2 = exp.3 > $const108.1
2024-03-17 20:07:02,951 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,951 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178772970>
2024-03-17 20:07:02,951 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 20:07:02,951 - DEBUG - on stmt: return $128return_value.7
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178772970>
2024-03-17 20:07:02,951 - DEBUG - on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:234), Var(exp.2, numbers.py:240)], incoming_blocks=[106, 154])
2024-03-17 20:07:02,951 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $134compare_op.2 = exp.4 != $const132.1
2024-03-17 20:07:02,951 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,951 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178772970>
2024-03-17 20:07:02,951 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $142binary_and.2 = exp.4 & $const140.1
2024-03-17 20:07:02,951 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,951 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178772970>
2024-03-17 20:07:02,951 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,951 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-17 20:07:02,951 - DEBUG - on stmt: jump 154
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178772970>
2024-03-17 20:07:02,951 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,951 - DEBUG - on stmt: exp.2 = $158inplace_rshift.2
2024-03-17 20:07:02,951 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,951 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-17 20:07:02,951 - DEBUG - on stmt: jump 130
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178772970>
2024-03-17 20:07:02,951 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,951 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178772970>
2024-03-17 20:07:02,951 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-17 20:07:02,951 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 20:07:02,951 - DEBUG - on stmt: return $182return_value.3
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E178772970>
2024-03-17 20:07:02,951 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-17 20:07:02,951 - DEBUG - on stmt: return $186return_value.1
2024-03-17 20:07:02,951 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x000001E1787F0D00>],
             98: [<numba.core.ir.Assign object at 0x000001E1787F09D0>]})
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,951 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 20:07:02,951 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 20:07:02,951 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 20:07:02,951 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 20:07:02,951 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,951 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,951 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 20:07:02,951 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 20:07:02,951 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,951 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,951 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 20:07:02,951 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-17 20:07:02,951 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,951 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 20:07:02,961 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 20:07:02,961 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-17 20:07:02,961 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,961 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 20:07:02,961 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,961 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,961 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,961 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-17 20:07:02,961 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,961 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-03-17 20:07:02,961 - DEBUG - on stmt: exp.1 = b
2024-03-17 20:07:02,961 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,961 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-17 20:07:02,961 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,961 - DEBUG - on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
2024-03-17 20:07:02,961 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 20:07:02,961 - DEBUG - on stmt: $110compare_op.2 = exp.3 > $const108.1
2024-03-17 20:07:02,961 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,961 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,961 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 20:07:02,961 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-17 20:07:02,961 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,961 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 20:07:02,961 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 20:07:02,961 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 20:07:02,961 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,961 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,961 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 20:07:02,961 - DEBUG - on stmt: return $128return_value.7
2024-03-17 20:07:02,961 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-17 20:07:02,961 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,961 - DEBUG - on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:234), Var(exp.2, numbers.py:240)], incoming_blocks=[106, 154])
2024-03-17 20:07:02,961 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 20:07:02,961 - DEBUG - on stmt: $134compare_op.2 = exp.4 != $const132.1
2024-03-17 20:07:02,961 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,961 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,961 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 20:07:02,961 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-17 20:07:02,961 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,961 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 20:07:02,961 - DEBUG - on stmt: $142binary_and.2 = exp.4 & $const140.1
2024-03-17 20:07:02,961 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,961 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,961 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 20:07:02,961 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-17 20:07:02,961 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,961 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,961 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-17 20:07:02,961 - DEBUG - on stmt: jump 154
2024-03-17 20:07:02,961 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-17 20:07:02,961 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,961 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 20:07:02,961 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,961 - DEBUG - on stmt: exp.2 = $158inplace_rshift.2
2024-03-17 20:07:02,961 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,961 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-17 20:07:02,961 - DEBUG - on stmt: jump 130
2024-03-17 20:07:02,961 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-17 20:07:02,961 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,961 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,961 - DEBUG - on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,961 - DEBUG - find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,961 - DEBUG - find_def_from_top label 172
2024-03-17 20:07:02,961 - DEBUG - idom 130 from label 172
2024-03-17 20:07:02,961 - DEBUG - find_def_from_bottom label 130
2024-03-17 20:07:02,961 - DEBUG - find_def_from_top label 130
2024-03-17 20:07:02,961 - DEBUG - idom 106 from label 130
2024-03-17 20:07:02,961 - DEBUG - find_def_from_bottom label 106
2024-03-17 20:07:02,961 - DEBUG - find_def_from_top label 106
2024-03-17 20:07:02,961 - DEBUG - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
2024-03-17 20:07:02,961 - DEBUG - find_def_from_bottom label 48
2024-03-17 20:07:02,961 - DEBUG - find_def_from_top label 48
2024-03-17 20:07:02,961 - DEBUG - idom 26 from label 48
2024-03-17 20:07:02,961 - DEBUG - find_def_from_bottom label 26
2024-03-17 20:07:02,961 - DEBUG - incoming_def invert = const(bool, True)
2024-03-17 20:07:02,961 - DEBUG - find_def_from_bottom label 98
2024-03-17 20:07:02,961 - DEBUG - incoming_def invert.1 = const(bool, False)
2024-03-17 20:07:02,961 - DEBUG - replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,961 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 20:07:02,961 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-17 20:07:02,961 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,961 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 20:07:02,961 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-17 20:07:02,961 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 20:07:02,961 - DEBUG - on stmt: return $182return_value.3
2024-03-17 20:07:02,961 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-17 20:07:02,961 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E178792A60>
2024-03-17 20:07:02,961 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-17 20:07:02,961 - DEBUG - on stmt: return $186return_value.1
2024-03-17 20:07:02,961 - DEBUG - Fix SSA violator on var a.1
2024-03-17 20:07:02,961 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-17 20:07:02,961 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17878D400>
2024-03-17 20:07:02,961 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 20:07:02,961 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 20:07:02,961 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 20:07:02,967 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 20:07:02,967 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,967 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 20:07:02,967 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,967 - DEBUG - first assign: a.1
2024-03-17 20:07:02,967 - DEBUG - replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,967 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 20:07:02,967 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 20:07:02,967 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,967 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,967 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 20:07:02,967 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-17 20:07:02,967 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17878D400>
2024-03-17 20:07:02,967 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 20:07:02,967 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 20:07:02,967 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 20:07:02,967 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 20:07:02,967 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,967 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,967 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 20:07:02,968 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-17 20:07:02,968 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17878D400>
2024-03-17 20:07:02,968 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 20:07:02,968 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 20:07:02,968 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-17 20:07:02,968 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17878D400>
2024-03-17 20:07:02,968 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 20:07:02,968 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,968 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,968 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,968 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-17 20:07:02,968 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17878D400>
2024-03-17 20:07:02,968 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-03-17 20:07:02,968 - DEBUG - on stmt: exp.1 = b
2024-03-17 20:07:02,968 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,968 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-17 20:07:02,968 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17878D400>
2024-03-17 20:07:02,968 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[48, 98])
2024-03-17 20:07:02,969 - DEBUG - on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
2024-03-17 20:07:02,969 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 20:07:02,969 - DEBUG - on stmt: $110compare_op.2 = exp.3 > $const108.1
2024-03-17 20:07:02,969 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,969 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,969 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 20:07:02,969 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-17 20:07:02,969 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17878D400>
2024-03-17 20:07:02,969 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 20:07:02,969 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 20:07:02,969 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 20:07:02,969 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,969 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,969 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 20:07:02,969 - DEBUG - on stmt: return $128return_value.7
2024-03-17 20:07:02,970 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-17 20:07:02,970 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17878D400>
2024-03-17 20:07:02,970 - DEBUG - on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:234), Var(exp.2, numbers.py:240)], incoming_blocks=[106, 154])
2024-03-17 20:07:02,970 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 20:07:02,970 - DEBUG - on stmt: $134compare_op.2 = exp.4 != $const132.1
2024-03-17 20:07:02,970 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,970 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,970 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 20:07:02,970 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-17 20:07:02,970 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17878D400>
2024-03-17 20:07:02,970 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 20:07:02,970 - DEBUG - on stmt: $142binary_and.2 = exp.4 & $const140.1
2024-03-17 20:07:02,970 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,970 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,970 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 20:07:02,971 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-17 20:07:02,971 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17878D400>
2024-03-17 20:07:02,971 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,971 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-17 20:07:02,971 - DEBUG - on stmt: jump 154
2024-03-17 20:07:02,971 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-17 20:07:02,971 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17878D400>
2024-03-17 20:07:02,971 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 20:07:02,971 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,972 - DEBUG - on stmt: exp.2 = $158inplace_rshift.2
2024-03-17 20:07:02,972 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,972 - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2024-03-17 20:07:02,972 - DEBUG - replaced with: a.1.1 = $166inplace_multiply.5
2024-03-17 20:07:02,972 - DEBUG - on stmt: jump 130
2024-03-17 20:07:02,972 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-17 20:07:02,972 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17878D400>
2024-03-17 20:07:02,972 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,972 - DEBUG - on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,972 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 20:07:02,972 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-17 20:07:02,972 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17878D400>
2024-03-17 20:07:02,972 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 20:07:02,972 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-17 20:07:02,972 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 20:07:02,972 - DEBUG - on stmt: return $182return_value.3
2024-03-17 20:07:02,973 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-17 20:07:02,973 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17878D400>
2024-03-17 20:07:02,973 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-17 20:07:02,973 - DEBUG - on stmt: return $186return_value.1
2024-03-17 20:07:02,973 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001E1787F0670>],
             154: [<numba.core.ir.Assign object at 0x000001E17882A610>]})
2024-03-17 20:07:02,973 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-17 20:07:02,973 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E1787725B0>
2024-03-17 20:07:02,973 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 20:07:02,973 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 20:07:02,973 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 20:07:02,973 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 20:07:02,973 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,973 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 20:07:02,973 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,973 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 20:07:02,973 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 20:07:02,974 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,974 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,974 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 20:07:02,974 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-17 20:07:02,974 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E1787725B0>
2024-03-17 20:07:02,974 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 20:07:02,974 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 20:07:02,974 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 20:07:02,974 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 20:07:02,974 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,974 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,974 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 20:07:02,974 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-17 20:07:02,974 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E1787725B0>
2024-03-17 20:07:02,974 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 20:07:02,975 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 20:07:02,975 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-17 20:07:02,975 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E1787725B0>
2024-03-17 20:07:02,975 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 20:07:02,975 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,975 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,975 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,975 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-17 20:07:02,975 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E1787725B0>
2024-03-17 20:07:02,975 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-03-17 20:07:02,975 - DEBUG - on stmt: exp.1 = b
2024-03-17 20:07:02,975 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,975 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-17 20:07:02,975 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E1787725B0>
2024-03-17 20:07:02,975 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[48, 98])
2024-03-17 20:07:02,975 - DEBUG - on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
2024-03-17 20:07:02,976 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 20:07:02,976 - DEBUG - on stmt: $110compare_op.2 = exp.3 > $const108.1
2024-03-17 20:07:02,976 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,976 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,976 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 20:07:02,976 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-17 20:07:02,976 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E1787725B0>
2024-03-17 20:07:02,976 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 20:07:02,976 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 20:07:02,976 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 20:07:02,976 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,976 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,976 - DEBUG - find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,976 - DEBUG - find_def_from_top label 114
2024-03-17 20:07:02,977 - DEBUG - idom 106 from label 114
2024-03-17 20:07:02,977 - DEBUG - find_def_from_bottom label 106
2024-03-17 20:07:02,977 - DEBUG - find_def_from_top label 106
2024-03-17 20:07:02,977 - DEBUG - idom 0 from label 106
2024-03-17 20:07:02,977 - DEBUG - find_def_from_bottom label 0
2024-03-17 20:07:02,977 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 20:07:02,977 - DEBUG - on stmt: return $128return_value.7
2024-03-17 20:07:02,977 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-17 20:07:02,977 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E1787725B0>
2024-03-17 20:07:02,977 - DEBUG - on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:234), Var(exp.2, numbers.py:240)], incoming_blocks=[106, 154])
2024-03-17 20:07:02,977 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 20:07:02,977 - DEBUG - on stmt: $134compare_op.2 = exp.4 != $const132.1
2024-03-17 20:07:02,977 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,977 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,977 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 20:07:02,977 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-17 20:07:02,977 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E1787725B0>
2024-03-17 20:07:02,978 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 20:07:02,978 - DEBUG - on stmt: $142binary_and.2 = exp.4 & $const140.1
2024-03-17 20:07:02,978 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,978 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,978 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 20:07:02,978 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-17 20:07:02,978 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E1787725B0>
2024-03-17 20:07:02,978 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,978 - DEBUG - find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,978 - DEBUG - find_def_from_top label 146
2024-03-17 20:07:02,978 - DEBUG - idom 138 from label 146
2024-03-17 20:07:02,978 - DEBUG - find_def_from_bottom label 138
2024-03-17 20:07:02,978 - DEBUG - find_def_from_top label 138
2024-03-17 20:07:02,978 - DEBUG - idom 130 from label 138
2024-03-17 20:07:02,978 - DEBUG - find_def_from_bottom label 130
2024-03-17 20:07:02,979 - DEBUG - find_def_from_top label 130
2024-03-17 20:07:02,979 - DEBUG - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
2024-03-17 20:07:02,979 - DEBUG - find_def_from_bottom label 106
2024-03-17 20:07:02,979 - DEBUG - find_def_from_top label 106
2024-03-17 20:07:02,979 - DEBUG - idom 0 from label 106
2024-03-17 20:07:02,979 - DEBUG - find_def_from_bottom label 0
2024-03-17 20:07:02,979 - DEBUG - incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,979 - DEBUG - find_def_from_bottom label 154
2024-03-17 20:07:02,979 - DEBUG - incoming_def a.1.1 = $166inplace_multiply.5
2024-03-17 20:07:02,979 - DEBUG - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,979 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-17 20:07:02,979 - DEBUG - on stmt: jump 154
2024-03-17 20:07:02,979 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-17 20:07:02,979 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E1787725B0>
2024-03-17 20:07:02,979 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 20:07:02,979 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,980 - DEBUG - on stmt: exp.2 = $158inplace_rshift.2
2024-03-17 20:07:02,980 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,980 - DEBUG - find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,980 - DEBUG - find_def_from_top label 154
2024-03-17 20:07:02,980 - DEBUG - idom 138 from label 154
2024-03-17 20:07:02,980 - DEBUG - find_def_from_bottom label 138
2024-03-17 20:07:02,980 - DEBUG - find_def_from_top label 138
2024-03-17 20:07:02,980 - DEBUG - idom 130 from label 138
2024-03-17 20:07:02,980 - DEBUG - find_def_from_bottom label 130
2024-03-17 20:07:02,980 - DEBUG - replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,980 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-17 20:07:02,980 - DEBUG - on stmt: jump 130
2024-03-17 20:07:02,980 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-17 20:07:02,980 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E1787725B0>
2024-03-17 20:07:02,980 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,980 - DEBUG - on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,981 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 20:07:02,981 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-17 20:07:02,981 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E1787725B0>
2024-03-17 20:07:02,981 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 20:07:02,981 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-17 20:07:02,981 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 20:07:02,981 - DEBUG - on stmt: return $182return_value.3
2024-03-17 20:07:02,981 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-17 20:07:02,981 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E1787725B0>
2024-03-17 20:07:02,981 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-17 20:07:02,981 - DEBUG - on stmt: return $186return_value.1
2024-03-17 20:07:02,981 - DEBUG - Fix SSA violator on var r
2024-03-17 20:07:02,981 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-17 20:07:02,981 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17877A790>
2024-03-17 20:07:02,981 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 20:07:02,981 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 20:07:02,981 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 20:07:02,982 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 20:07:02,982 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,982 - DEBUG - first assign: r
2024-03-17 20:07:02,982 - DEBUG - replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,982 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 20:07:02,982 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,982 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 20:07:02,982 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 20:07:02,982 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,982 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,982 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 20:07:02,982 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-17 20:07:02,982 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17877A790>
2024-03-17 20:07:02,982 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 20:07:02,982 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 20:07:02,982 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 20:07:02,982 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 20:07:02,982 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,982 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,982 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 20:07:02,982 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-17 20:07:02,982 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17877A790>
2024-03-17 20:07:02,982 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 20:07:02,983 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 20:07:02,983 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-17 20:07:02,983 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17877A790>
2024-03-17 20:07:02,983 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 20:07:02,983 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,983 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,983 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,983 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-17 20:07:02,983 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17877A790>
2024-03-17 20:07:02,983 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-03-17 20:07:02,983 - DEBUG - on stmt: exp.1 = b
2024-03-17 20:07:02,983 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,983 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-17 20:07:02,983 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17877A790>
2024-03-17 20:07:02,983 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[48, 98])
2024-03-17 20:07:02,983 - DEBUG - on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
2024-03-17 20:07:02,984 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 20:07:02,984 - DEBUG - on stmt: $110compare_op.2 = exp.3 > $const108.1
2024-03-17 20:07:02,984 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,984 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,984 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 20:07:02,984 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-17 20:07:02,984 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17877A790>
2024-03-17 20:07:02,984 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 20:07:02,985 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 20:07:02,985 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 20:07:02,985 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,985 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,985 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 20:07:02,985 - DEBUG - on stmt: return $128return_value.7
2024-03-17 20:07:02,985 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-17 20:07:02,985 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17877A790>
2024-03-17 20:07:02,985 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[106, 154])
2024-03-17 20:07:02,985 - DEBUG - on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:234), Var(exp.2, numbers.py:240)], incoming_blocks=[106, 154])
2024-03-17 20:07:02,985 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 20:07:02,985 - DEBUG - on stmt: $134compare_op.2 = exp.4 != $const132.1
2024-03-17 20:07:02,985 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,985 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,985 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 20:07:02,985 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-17 20:07:02,985 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17877A790>
2024-03-17 20:07:02,986 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 20:07:02,986 - DEBUG - on stmt: $142binary_and.2 = exp.4 & $const140.1
2024-03-17 20:07:02,986 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,986 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,986 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 20:07:02,986 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-17 20:07:02,986 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17877A790>
2024-03-17 20:07:02,986 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,986 - DEBUG - on stmt: r = $150inplace_multiply.2
2024-03-17 20:07:02,986 - DEBUG - replaced with: r.1 = $150inplace_multiply.2
2024-03-17 20:07:02,986 - DEBUG - on stmt: jump 154
2024-03-17 20:07:02,986 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-17 20:07:02,986 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17877A790>
2024-03-17 20:07:02,986 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 20:07:02,986 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,986 - DEBUG - on stmt: exp.2 = $158inplace_rshift.2
2024-03-17 20:07:02,987 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,987 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-17 20:07:02,987 - DEBUG - on stmt: jump 130
2024-03-17 20:07:02,987 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-17 20:07:02,987 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17877A790>
2024-03-17 20:07:02,987 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,987 - DEBUG - on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,987 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 20:07:02,987 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-17 20:07:02,987 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17877A790>
2024-03-17 20:07:02,987 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 20:07:02,987 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-17 20:07:02,987 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 20:07:02,987 - DEBUG - on stmt: return $182return_value.3
2024-03-17 20:07:02,987 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-17 20:07:02,987 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E17877A790>
2024-03-17 20:07:02,987 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-17 20:07:02,988 - DEBUG - on stmt: return $186return_value.1
2024-03-17 20:07:02,988 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001E178792BB0>],
             146: [<numba.core.ir.Assign object at 0x000001E17882A670>]})
2024-03-17 20:07:02,988 - DEBUG - ==== SSA block rewrite pass on 0
2024-03-17 20:07:02,988 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E17878D400>
2024-03-17 20:07:02,988 - DEBUG - on stmt: a = arg(0, name=a)
2024-03-17 20:07:02,988 - DEBUG - on stmt: b = arg(1, name=b)
2024-03-17 20:07:02,988 - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2024-03-17 20:07:02,988 - DEBUG - on stmt: $const4.1 = const(int, 1)
2024-03-17 20:07:02,988 - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,988 - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2024-03-17 20:07:02,988 - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,988 - DEBUG - on stmt: $const20.7 = const(int, 0)
2024-03-17 20:07:02,988 - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2024-03-17 20:07:02,988 - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,988 - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,989 - DEBUG - on stmt: branch $24pred, 26, 98
2024-03-17 20:07:02,989 - DEBUG - ==== SSA block rewrite pass on 26
2024-03-17 20:07:02,989 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E17878D400>
2024-03-17 20:07:02,989 - DEBUG - on stmt: invert = const(bool, True)
2024-03-17 20:07:02,989 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-03-17 20:07:02,989 - DEBUG - on stmt: $const38.4 = const(int, 0)
2024-03-17 20:07:02,989 - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2024-03-17 20:07:02,989 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,989 - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,989 - DEBUG - on stmt: branch $42pred, 44, 48
2024-03-17 20:07:02,989 - DEBUG - ==== SSA block rewrite pass on 44
2024-03-17 20:07:02,989 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E17878D400>
2024-03-17 20:07:02,989 - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-03-17 20:07:02,989 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-03-17 20:07:02,989 - DEBUG - ==== SSA block rewrite pass on 48
2024-03-17 20:07:02,989 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E17878D400>
2024-03-17 20:07:02,990 - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2024-03-17 20:07:02,990 - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,990 - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,990 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,990 - DEBUG - ==== SSA block rewrite pass on 98
2024-03-17 20:07:02,990 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E17878D400>
2024-03-17 20:07:02,990 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-03-17 20:07:02,990 - DEBUG - on stmt: exp.1 = b
2024-03-17 20:07:02,990 - DEBUG - on stmt: jump 106
2024-03-17 20:07:02,990 - DEBUG - ==== SSA block rewrite pass on 106
2024-03-17 20:07:02,990 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E17878D400>
2024-03-17 20:07:02,990 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[48, 98])
2024-03-17 20:07:02,990 - DEBUG - on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
2024-03-17 20:07:02,990 - DEBUG - on stmt: $const108.1 = const(int, 65536)
2024-03-17 20:07:02,990 - DEBUG - on stmt: $110compare_op.2 = exp.3 > $const108.1
2024-03-17 20:07:02,991 - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,991 - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,991 - DEBUG - on stmt: branch $112pred, 114, 130
2024-03-17 20:07:02,991 - DEBUG - ==== SSA block rewrite pass on 114
2024-03-17 20:07:02,991 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E17878D400>
2024-03-17 20:07:02,991 - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2024-03-17 20:07:02,991 - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2024-03-17 20:07:02,991 - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2024-03-17 20:07:02,991 - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,991 - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,991 - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2024-03-17 20:07:02,991 - DEBUG - on stmt: return $128return_value.7
2024-03-17 20:07:02,991 - DEBUG - ==== SSA block rewrite pass on 130
2024-03-17 20:07:02,991 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E17878D400>
2024-03-17 20:07:02,991 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[106, 154])
2024-03-17 20:07:02,992 - DEBUG - on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:234), Var(exp.2, numbers.py:240)], incoming_blocks=[106, 154])
2024-03-17 20:07:02,992 - DEBUG - on stmt: $const132.1 = const(int, 0)
2024-03-17 20:07:02,992 - DEBUG - on stmt: $134compare_op.2 = exp.4 != $const132.1
2024-03-17 20:07:02,992 - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,992 - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,992 - DEBUG - on stmt: branch $136pred, 138, 172
2024-03-17 20:07:02,992 - DEBUG - ==== SSA block rewrite pass on 138
2024-03-17 20:07:02,992 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E17878D400>
2024-03-17 20:07:02,992 - DEBUG - on stmt: $const140.1 = const(int, 1)
2024-03-17 20:07:02,992 - DEBUG - on stmt: $142binary_and.2 = exp.4 & $const140.1
2024-03-17 20:07:02,992 - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,992 - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,992 - DEBUG - on stmt: branch $144pred, 146, 154
2024-03-17 20:07:02,992 - DEBUG - ==== SSA block rewrite pass on 146
2024-03-17 20:07:02,992 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E17878D400>
2024-03-17 20:07:02,992 - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,992 - DEBUG - find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,992 - DEBUG - find_def_from_top label 146
2024-03-17 20:07:02,992 - DEBUG - idom 138 from label 146
2024-03-17 20:07:02,992 - DEBUG - find_def_from_bottom label 138
2024-03-17 20:07:02,992 - DEBUG - find_def_from_top label 138
2024-03-17 20:07:02,992 - DEBUG - idom 130 from label 138
2024-03-17 20:07:02,992 - DEBUG - find_def_from_bottom label 130
2024-03-17 20:07:02,992 - DEBUG - find_def_from_top label 130
2024-03-17 20:07:02,993 - DEBUG - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
2024-03-17 20:07:02,993 - DEBUG - find_def_from_bottom label 106
2024-03-17 20:07:02,993 - DEBUG - find_def_from_top label 106
2024-03-17 20:07:02,993 - DEBUG - idom 0 from label 106
2024-03-17 20:07:02,993 - DEBUG - find_def_from_bottom label 0
2024-03-17 20:07:02,993 - DEBUG - incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,993 - DEBUG - find_def_from_bottom label 154
2024-03-17 20:07:02,993 - DEBUG - find_def_from_top label 154
2024-03-17 20:07:02,993 - DEBUG - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
2024-03-17 20:07:02,993 - DEBUG - find_def_from_bottom label 138
2024-03-17 20:07:02,993 - DEBUG - find_def_from_top label 138
2024-03-17 20:07:02,993 - DEBUG - idom 130 from label 138
2024-03-17 20:07:02,993 - DEBUG - find_def_from_bottom label 130
2024-03-17 20:07:02,993 - DEBUG - incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:216)], incoming_blocks=[106])
2024-03-17 20:07:02,993 - DEBUG - find_def_from_bottom label 146
2024-03-17 20:07:02,993 - DEBUG - incoming_def r.1 = $150inplace_multiply.2
2024-03-17 20:07:02,993 - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2024-03-17 20:07:02,994 - DEBUG - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,994 - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2024-03-17 20:07:02,994 - DEBUG - on stmt: jump 154
2024-03-17 20:07:02,994 - DEBUG - ==== SSA block rewrite pass on 154
2024-03-17 20:07:02,994 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E17878D400>
2024-03-17 20:07:02,994 - DEBUG - on stmt: $const156.1 = const(int, 1)
2024-03-17 20:07:02,994 - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,994 - DEBUG - on stmt: exp.2 = $158inplace_rshift.2
2024-03-17 20:07:02,994 - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-03-17 20:07:02,994 - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2024-03-17 20:07:02,994 - DEBUG - on stmt: jump 130
2024-03-17 20:07:02,994 - DEBUG - ==== SSA block rewrite pass on 172
2024-03-17 20:07:02,994 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E17878D400>
2024-03-17 20:07:02,994 - DEBUG - on stmt: bool174 = global(bool: <class 'bool'>)
2024-03-17 20:07:02,994 - DEBUG - on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-03-17 20:07:02,995 - DEBUG - on stmt: branch $174pred, 176, 184
2024-03-17 20:07:02,995 - DEBUG - ==== SSA block rewrite pass on 176
2024-03-17 20:07:02,995 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E17878D400>
2024-03-17 20:07:02,995 - DEBUG - on stmt: $const176.0 = const(float, 1.0)
2024-03-17 20:07:02,995 - DEBUG - on stmt: $180binary_true_divide.2 = $const176.0 / r
2024-03-17 20:07:02,995 - DEBUG - find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
2024-03-17 20:07:02,995 - DEBUG - find_def_from_top label 176
2024-03-17 20:07:02,995 - DEBUG - idom 172 from label 176
2024-03-17 20:07:02,995 - DEBUG - find_def_from_bottom label 172
2024-03-17 20:07:02,995 - DEBUG - find_def_from_top label 172
2024-03-17 20:07:02,995 - DEBUG - idom 130 from label 172
2024-03-17 20:07:02,995 - DEBUG - find_def_from_bottom label 130
2024-03-17 20:07:02,995 - DEBUG - replaced with: $180binary_true_divide.2 = $const176.0 / r.2
2024-03-17 20:07:02,995 - DEBUG - on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
2024-03-17 20:07:02,995 - DEBUG - on stmt: return $182return_value.3
2024-03-17 20:07:02,995 - DEBUG - ==== SSA block rewrite pass on 184
2024-03-17 20:07:02,996 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E17878D400>
2024-03-17 20:07:02,996 - DEBUG - on stmt: $186return_value.1 = cast(value=r)
2024-03-17 20:07:02,996 - DEBUG - find_def var='r' stmt=$186return_value.1 = cast(value=r)
2024-03-17 20:07:02,996 - DEBUG - find_def_from_top label 184
2024-03-17 20:07:02,996 - DEBUG - idom 172 from label 184
2024-03-17 20:07:02,996 - DEBUG - find_def_from_bottom label 172
2024-03-17 20:07:02,996 - DEBUG - find_def_from_top label 172
2024-03-17 20:07:02,996 - DEBUG - idom 130 from label 172
2024-03-17 20:07:02,996 - DEBUG - find_def_from_bottom label 130
2024-03-17 20:07:02,996 - DEBUG - replaced with: $186return_value.1 = cast(value=r.2)
2024-03-17 20:07:02,996 - DEBUG - on stmt: return $186return_value.1
2024-03-17 20:07:03,173 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'I have this list of activities and the distances in km between each activity. Write a new list that is divided into 7 days. And in each day, write to me which attractions and restaurants to go to. I need you to also take into account the distances so we won\'t have too long trips. Also, don\'t repeat attractions on separate days. Don\'t assume any activity as a starting point. Just give the plan and also try to combine restaurants and attractions. If there is a bit of travel that\'s also ok; we don\'t need the closest attractions each day.\n{\n  "teamLab Planets TOKYO to Little Tokyo": 8811.197817791051,\n  "teamLab Planets TOKYO to Tokyo Tower": 4.135015472644106,\n  "teamLab Planets TOKYO to Tokyo Skytree": 7.0150617126516055,\n  "teamLab Planets TOKYO to Tokyo Disneyland": 8.392217763537737,\n  "teamLab Planets TOKYO to Tokyo Metro": 5.954032744460858,\n  "teamLab Planets TOKYO to Tokyo Localized - Free Walking Tour in Tokyo & More": 5.737941297891147,\n  "teamLab Planets TOKYO to Waho-An NATURE Tokyo": 7.627152918162808,\n  "teamLab Planets TOKYO to Tokyo Central Railway Station": 4.205173985387373,\n  "teamLab Planets TOKYO to Tokyo DisneySea": 8.963852776598237,\n  "teamLab Planets TOKYO to Tokyo Bay": 8827.426881886113,\n  "teamLab Planets TOKYO to NINJA TOKYO": 4.460968554128433,\n  "teamLab Planets TOKYO to Tokyo": 8700.281765643073,\n  "teamLab Planets TOKYO to Tokyo Restaurant": 9564.172623855065,\n  "teamLab Planets TOKYO to Starbucks Reserve(R) Roastery Tokyo": 8.780898806668041,\n  "teamLab Planets TOKYO to Tokyo Sushi": 10887.647579810606,\n  "teamLab Planets TOKYO to Tokyo Jo\'s": 12802.16153309465,\n  "teamLab Planets TOKYO to Tokyo Tokyo Central": 7934.728083918277,\n  "teamLab Planets TOKYO to Tokyo Pot": 10106.32645115756,\n  "teamLab Planets TOKYO to Tokyo Japanese Restaurant": 8862.338733678802,\n  "Little Tokyo to Tokyo Tower": 8813.918275333936,\n  "Little Tokyo to Tokyo Skytree": 8805.823764938723,\n  "Little Tokyo to Tokyo Disneyland": 8805.47377072589,\n  "Little Tokyo to Tokyo Metro": 8812.88031305338,\n  "Little Tokyo to Tokyo Localized - Free Walking Tour in Tokyo & More": 8809.334212222395,\n  "Little Tokyo to Waho-An NATURE Tokyo": 8817.367197940146,\n  "Little Tokyo to Tokyo Central Railway Station": 8810.983924597826,\n  "Little Tokyo to Tokyo DisneySea": 8805.50728334144,\n  "Little Tokyo to Tokyo Bay": 10491.66302046837,\n  "Little Tokyo to NINJA TOKYO": 8810.647619250398,\n  "Little Tokyo to Tokyo": 13288.966351208515,\n  "Little Tokyo to Tokyo Restaurant": 12199.9096149629,\n  "Little Tokyo to Starbucks Reserve(R) Roastery Tokyo": 8818.436052933388,\n  "Little Tokyo to Tokyo Sushi": 8991.65438696015,\n  "Little Tokyo to Tokyo Jo\'s": 4341.403849148749,\n  "Little Tokyo to Tokyo Tokyo Central": 13383.859439583257,\n  "Little Tokyo to Tokyo Pot": 1936.8583954228507,\n  "Little Tokyo to Tokyo Japanese Restaurant": 10251.18739155637,\n  "Tokyo Tower to Tokyo Skytree": 8.213889903337146,\n  "Tokyo Tower to Tokyo Disneyland": 12.525753567177098,\n  "Tokyo Tower to Tokyo Metro": 2.797157293748747,\n  "Tokyo Tower to Tokyo Localized - Free Walking Tour in Tokyo & More": 5.134596840379827,\n  "Tokyo Tower to Waho-An NATURE Tokyo": 3.7112389980622926,\n  "Tokyo Tower to Tokyo Central Railway Station": 3.128810254400667,\n  "Tokyo Tower to Tokyo DisneySea": 13.097586696445354,\n  "Tokyo Tower to Tokyo Bay": 8830.210118127101,\n  "Tokyo Tower to NINJA TOKYO": 3.5243810892747476,\n  "Tokyo Tower to Tokyo": 8696.18360635475,\n  "Tokyo Tower to Tokyo Restaurant": 9560.291762745408,\n  "Tokyo Tower to Starbucks Reserve(R) Roastery Tokyo": 4.8845133102841265,\n  "Tokyo Tower to Tokyo Sushi": 10885.105506482565,\n  "Tokyo Tower to Tokyo Jo\'s": 12803.932899650215,\n  "Tokyo Tower to Tokyo Tokyo Central": 7930.601952270996,\n  "Tokyo Tower to Tokyo Pot": 10108.275016587551,\n  "Tokyo Tower to Tokyo Japanese Restaurant": 8859.031650682731,\n  "Tokyo Skytree to Tokyo Disneyland": 10.650973885279516,\n  "Tokyo Skytree to Tokyo Metro": 7.158163180600412,\n  "Tokyo Skytree to Tokyo Localized - Free Walking Tour in Tokyo & More": 3.628394811361775,\n  "Tokyo Skytree to Waho-An NATURE Tokyo": 11.543460207581022,\n  "Tokyo Skytree to Tokyo Central Railway Station": 5.169435666026619,\n  "Tokyo Skytree to Tokyo DisneySea": 11.438318023870755,\n  "Tokyo Skytree to Tokyo Bay": 8832.520177657918,\n  "Tokyo Skytree to NINJA TOKYO": 4.824557368971413,\n  "Tokyo Skytree to Tokyo": 8699.487120062606,\n  "Tokyo Skytree to Tokyo Restaurant": 9561.883411806246,\n  "Tokyo Skytree to Starbucks Reserve(R) Roastery Tokyo": 12.620721072193188,\n  "Tokyo Skytree to Tokyo Sushi": 10882.201598241214,\n  "Tokyo Skytree to Tokyo Jo\'s": 12795.76408274421,\n  "Tokyo Skytree to Tokyo Tokyo Central": 7934.4097211396875,\n  "Tokyo Skytree to Tokyo Pot": 10100.074334587627,\n  "Tokyo Skytree to Tokyo Japanese Restaurant": 8858.241140326772,\n  "Tokyo Disneyland to Tokyo Metro": 13.972698517686116,\n  "Tokyo Disneyland to Tokyo Localized - Free Walking Tour in Tokyo & More": 12.190772005650029,\n  "Tokyo Disneyland to Waho-An NATURE Tokyo": 15.946171684789565,\n  "Tokyo Disneyland to Tokyo Central Railway Station": 11.713456300540646,\n  "Tokyo Disneyland to Tokyo DisneySea": 0.7894192111742601,\n  "Tokyo Disneyland to Tokyo Bay": 8821.98489989564,\n  "Tokyo Disneyland to NINJA TOKYO": 11.762609119991005,\n  "Tokyo Disneyland to Tokyo": 8708.558247871384,\n  "Tokyo Disneyland to Tokyo Restaurant": 9571.950227087083,\n  "Tokyo Disneyland to Starbucks Reserve(R) Roastery Tokyo": 17.071025896485512,\n  "Tokyo Disneyland to Tokyo Sushi": 10892.5870361196,\n  "Tokyo Disneyland to Tokyo Jo\'s": 12798.317487057548,\n  "Tokyo Disneyland to Tokyo Tokyo Central": 7943.079854621317,\n  "Tokyo Disneyland to Tokyo Pot": 10102.131863457127,\n  "Tokyo Disneyland to Tokyo Japanese Restaurant": 8868.882980916867,\n  "Tokyo Metro to Tokyo Localized - Free Walking Tour in Tokyo & More": 3.557471105667721,\n  "Tokyo Metro to Waho-An NATURE Tokyo": 4.6516607904663125,\n  "Tokyo Metro to Tokyo Central Railway Station": 2.425069214639181,\n  "Tokyo Metro to Tokyo DisneySea": 14.630615889909867,\n  "Tokyo Metro to Tokyo Bay": 8832.908967785435,\n  "Tokyo Metro to NINJA TOKYO": 2.575723076600498,\n  "Tokyo Metro to Tokyo": 8694.590179092567,\n  "Tokyo Metro to Tokyo Restaurant": 9558.237241258788,\n  "Tokyo Metro to Starbucks Reserve(R) Roastery Tokyo": 5.604901683052084,\n  "Tokyo Metro to Tokyo Sushi": 10882.358483339243,\n  "Tokyo Metro to Tokyo Jo\'s": 12802.227191868225,\n  "Tokyo Metro to Tokyo Tokyo Central": 7929.1686075730095,\n  "Tokyo Metro to Tokyo Pot": 10106.678106111867,\n  "Tokyo Metro to Tokyo Japanese Restaurant": 8856.518333104455,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Waho-An NATURE Tokyo": 8.088126557852785,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Central Railway Station": 2.056130331502995,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo DisneySea": 12.931391558087347,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Bay": 8833.031024620439,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to NINJA TOKYO": 1.6507944573933817,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo": 8696.78430506213,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Restaurant": 9559.770922236501,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Starbucks Reserve(R) Roastery Tokyo": 9.113279578810547,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Sushi": 10881.965864990136,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Jo\'s": 12798.892387543652,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Tokyo Central": 7931.548278903899,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Pot": 10103.287448088757,\n  "Tokyo Localized - Free Walking Tour in Tokyo & More to Tokyo Japanese Restaurant": 8857.065089816233,\n  "Waho-An NATURE Tokyo to Tokyo Central Railway Station": 6.389611700932529,\n  "Waho-An NATURE Tokyo to Tokyo DisneySea": 16.457977649573362,\n  "Waho-An NATURE Tokyo to Tokyo Bay": 8831.178604315166,\n  "Waho-An NATURE Tokyo to NINJA TOKYO": 6.719823092420816,\n  "Waho-An NATURE Tokyo to Tokyo": 8693.137700429264,\n  "Waho-An NATURE Tokyo to Tokyo Restaurant": 9557.778697978676,\n  "Waho-An NATURE Tokyo to Starbucks Reserve(R) Roastery Tokyo": 1.1743400722765946,\n  "Waho-An NATURE Tokyo to Tokyo Sushi": 10884.41296380771,\n  "Waho-An NATURE Tokyo to Tokyo Jo\'s": 12806.87867328609,\n  "Waho-An NATURE Tokyo to Tokyo Tokyo Central": 7927.418941722609,\n  "Waho-An NATURE Tokyo to Tokyo Pot": 10111.326138507902,\n  "Waho-An NATURE Tokyo to Tokyo Japanese Restaurant": 8857.409446448097,\n  "Tokyo Central Railway Station to Tokyo DisneySea": 12.400219243482875,\n  "Tokyo Central Railway Station to Tokyo Bay": 8831.623575373893,\n  "Tokyo Central Railway Station to NINJA TOKYO": 0.40585766498951203,\n  "Tokyo Central Railway Station to Tokyo": 8696.897232849338,\n  "Tokyo Central Railway Station to Tokyo Restaurant": 9560.326989898429,\n  "Tokyo Central Railway Station to Starbucks Reserve(R) Roastery Tokyo": 7.491899076881146,\n  "Tokyo Central Railway Station to Tokyo Sushi": 10883.483429053842,\n  "Tokyo Central Railway Station to Tokyo Jo\'s": 12800.81381646971,\n  "Tokyo Central Railway Station to Tokyo Tokyo Central": 7931.521171685702,\n  "Tokyo Central Railway Station to Tokyo Pot": 10105.171406400828,\n  "Tokyo Central Railway Station to Tokyo Japanese Restaurant": 8858.166425772439,\n  "Tokyo DisneySea to Tokyo Bay": 8821.197548282538,\n  "Tokyo DisneySea to NINJA TOKYO": 12.461946575206555,\n  "Tokyo DisneySea to Tokyo": 8709.197655323742,\n  "Tokyo DisneySea to Tokyo Restaurant": 9572.674888935611,\n  "Tokyo DisneySea to Starbucks Reserve(R) Roastery Tokyo": 17.569883766517393,\n  "Tokyo DisneySea to Tokyo Sushi": 10893.367751851234,\n  "Tokyo DisneySea to Tokyo Jo\'s": 12798.563446189875,\n  "Tokyo DisneySea to Tokyo Tokyo Central": 7943.686304849698,\n  "Tokyo DisneySea to Tokyo Pot": 10102.342081377912,\n  "Tokyo DisneySea to Tokyo Japanese Restaurant": 8869.667042842935,\n  "Tokyo Bay to NINJA TOKYO": 8831.887659837299,\n  "Tokyo Bay to Tokyo": 14940.212789376603,\n  "Tokyo Bay to Tokyo Restaurant": 16564.588877978913,\n  "Tokyo Bay to Starbucks Reserve(R) Roastery Tokyo": 8831.54016650305,\n  "Tokyo Bay to Tokyo Sushi": 19449.411700450462,\n  "Tokyo Bay to Tokyo Jo\'s": 12742.527669438521,\n  "Tokyo Bay to Tokyo Tokyo Central": 14201.33748823976,\n  "Tokyo Bay to Tokyo Pot": 12165.239942037651,\n  "Tokyo Bay to Tokyo Japanese Restaurant": 17400.67777156807,\n  "NINJA TOKYO to Tokyo": 8696.89336059579,\n  "NINJA TOKYO to Tokyo Restaurant": 9560.23508532595,\n  "NINJA TOKYO to Starbucks Reserve(R) Roastery Tokyo": 7.8073883582054755,\n  "NINJA TOKYO to Tokyo Sushi": 10883.196629119515,\n  "NINJA TOKYO to Tokyo Jo\'s": 12800.428379149746,\n  "NINJA TOKYO to Tokyo Tokyo Central": 7931.544931719195,\n  "NINJA TOKYO to Tokyo Pot": 10104.792533230335,\n  "NINJA TOKYO to Tokyo Japanese Restaurant": 8857.964818233182,\n  "Tokyo to Tokyo Restaurant": 1627.9152994233568,\n  "Tokyo to Starbucks Reserve(R) Roastery Tokyo": 8692.142285267944,\n  "Tokyo to Tokyo Sushi": 5375.908537313108,\n  "Tokyo to Tokyo Jo\'s": 12328.372374226441,\n  "Tokyo to Tokyo Tokyo Central": 872.2715749670297,\n  "Tokyo to Tokyo Pot": 12253.937589299188,\n  "Tokyo to Tokyo Japanese Restaurant": 3193.399954217947,\n  "Tokyo Restaurant to Starbucks Reserve(R) Roastery Tokyo": 9556.94223465533,\n  "Tokyo Restaurant to Tokyo Sushi": 3775.3070252306284,\n  "Tokyo Restaurant to Tokyo Jo\'s": 10716.70958295395,\n  "Tokyo Restaurant to Tokyo Tokyo Central": 2417.9068583399135,\n  "Tokyo Restaurant to Tokyo Pot": 10893.166758880021,\n  "Tokyo Restaurant to Tokyo Japanese Restaurant": 1970.3584626872782,\n  "Starbucks Reserve(R) Roastery Tokyo to Tokyo Sushi": 10884.13765073737,\n  "Starbucks Reserve(R) Roastery Tokyo to Tokyo Jo\'s": 12807.774697111814,\n  "Starbucks Reserve(R) Roastery Tokyo to Tokyo Tokyo Central": 7926.3834805403785,\n  "Starbucks Reserve(R) Roastery Tokyo to Tokyo Pot": 10112.257774767299,\n  "Starbucks Reserve(R) Roastery Tokyo to Tokyo Japanese Restaurant": 8856.845201881451,\n  "Tokyo Sushi to Tokyo Jo\'s": 6952.854690291814,\n  "Tokyo Sushi to Tokyo Tokyo Central": 6064.247941222804,\n  "Tokyo Sushi to Tokyo Pot": 7356.597399649553,\n  "Tokyo Sushi to Tokyo Japanese Restaurant": 2631.5080580354766,\n  "Tokyo Jo\'s to Tokyo Tokyo Central": 12994.024647983984,\n  "Tokyo Jo\'s to Tokyo Pot": 2711.870048111382,\n  "Tokyo Jo\'s to Tokyo Japanese Restaurant": 9357.201273336948,\n  "Tokyo Tokyo Central to Tokyo Pot": 12599.604809957538,\n  "Tokyo Tokyo Central to Tokyo Japanese Restaurant": 3679.221696114399,\n  "Tokyo Pot to Tokyo Japanese Restaurant": 9065.684493795221\n}'}], 'model': 'gpt-3.5-turbo'}}
2024-03-17 20:07:03,174 - DEBUG - close.started
2024-03-17 20:07:03,174 - DEBUG - close.complete
2024-03-17 20:07:03,174 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-03-17 20:07:03,186 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E160ECA700>
2024-03-17 20:07:03,186 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E160D7EC40> server_hostname='api.openai.com' timeout=5.0
2024-03-17 20:07:03,210 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E160ECA910>
2024-03-17 20:07:03,210 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-17 20:07:03,210 - DEBUG - send_request_headers.complete
2024-03-17 20:07:03,211 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-17 20:07:03,211 - DEBUG - send_request_body.complete
2024-03-17 20:07:03,211 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-17 20:07:06,953 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:07:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0125'), (b'openai-organization', b'reichman-university-wxioss'), (b'openai-processing-ms', b'2961'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'996796'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'192ms'), (b'x-request-id', b'req_86c9e6ad9fb4cbe65a704351aa8b60d1'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'865eeb9d1dde09bf-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 20:07:06,953 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-03-17 20:07:06,953 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-17 20:07:06,953 - DEBUG - receive_response_body.complete
2024-03-17 20:07:06,953 - DEBUG - response_closed.started
2024-03-17 20:07:06,953 - DEBUG - response_closed.complete
2024-03-17 20:07:06,953 - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-03-17 20:07:06,953 - INFO - Destination: Tokyo
    Budget: 8000
    Dates: From 2024-04-20 to 2024-04-27
    Number of people: 2
    Flights Info: {'search_metadata': {'id': '65f73062a74fe0bead716dc2', 'status': 'Success', 'json_endpoint': 'https://serpapi.com/searches/7df5542011fc5cb6/65f73062a74fe0bead716dc2.json', 'created_at': '2024-03-17 18:03:14 UTC', 'processed_at': '2024-03-17 18:03:14 UTC', 'google_flights_url': 'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&q=Flights+to+NRT+from+TLV+on+2024-04-20+through+2024-04-27', 'raw_html_file': 'https://serpapi.com/searches/7df5542011fc5cb6/65f73062a74fe0bead716dc2.html', 'prettify_html_file': 'https://serpapi.com/searches/7df5542011fc5cb6/65f73062a74fe0bead716dc2.prettify', 'total_time_taken': 0.48}, 'search_parameters': {'engine': 'google_flights', 'hl': 'en', 'gl': 'us', 'departure_id': 'TLV', 'arrival_id': 'NRT', 'outbound_date': '2024-04-20', 'return_date': '2024-04-27', 'currency': 'USD'}, 'best_flights': [{'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-20 15:35'}, 'arrival_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2024-04-20 19:50'}, 'duration': 255, 'airplane': 'Boeing 737MAX 8 Passenger', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 419', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Stream media to your device', 'Carbon emissions estimate: 188 kg']}, {'departure_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2024-04-20 22:35'}, 'arrival_airport': {'name': 'Incheon International Airport', 'id': 'ICN', 'time': '2024-04-21 16:00'}, 'duration': 685, 'airplane': 'Boeing 787', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 672', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 664 kg'], 'overnight': True}, {'departure_airport': {'name': 'Incheon International Airport', 'id': 'ICN', 'time': '2024-04-21 17:40'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-04-21 20:05'}, 'duration': 145, 'airplane': 'Boeing 787', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 672', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 118 kg']}], 'layovers': [{'duration': 165, 'name': 'Bole Addis Ababa International Airport', 'id': 'ADD'}, {'duration': 100, 'name': 'Incheon International Airport', 'id': 'ICN'}], 'total_duration': 1350, 'carbon_emissions': {'this_flight': 971000, 'typical_for_this_route': 893000, 'difference_percent': 9}, 'price': 2303, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'departure_token': 'WyJDalJJZWpKNlFtVjFjVnBZVW05QlRVMWFSbmRDUnkwdExTMHRMUzB0TFhWcVptTXhOa0ZCUVVGQlIxZ3pUVWRKUjNCRmRHdEJFaEZGVkRReE9YeEZWRFkzTW54RlZEWTNNaG9MQ0kySERoQUNHZ05WVTBRNEhIQ05odzQ9IixbWyJUTFYiLCIyMDI0LTA0LTIwIiwiQUREIixudWxsLCJFVCIsIjQxOSJdLFsiQUREIiwiMjAyNC0wNC0yMCIsIklDTiIsbnVsbCwiRVQiLCI2NzIiXSxbIklDTiIsIjIwMjQtMDQtMjEiLCJOUlQiLG51bGwsIkVUIiwiNjcyIl1dXQ=='}], 'other_flights': [{'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-20 15:35'}, 'arrival_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2024-04-20 19:50'}, 'duration': 255, 'airplane': 'Boeing 737MAX 8 Passenger', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 419', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Stream media to your device', 'Carbon emissions estimate: 188 kg']}, {'departure_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2024-04-21 22:35'}, 'arrival_airport': {'name': 'Incheon International Airport', 'id': 'ICN', 'time': '2024-04-22 16:00'}, 'duration': 685, 'airplane': 'Boeing 787', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 672', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 664 kg'], 'overnight': True}, {'departure_airport': {'name': 'Incheon International Airport', 'id': 'ICN', 'time': '2024-04-22 17:40'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-04-22 20:05'}, 'duration': 145, 'airplane': 'Boeing 787', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 672', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 118 kg']}], 'layovers': [{'duration': 1605, 'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'overnight': True}, {'duration': 100, 'name': 'Incheon International Airport', 'id': 'ICN'}], 'total_duration': 2790, 'carbon_emissions': {'this_flight': 971000, 'typical_for_this_route': 893000, 'difference_percent': 9}, 'price': 1902, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'departure_token': 'WyJDalJJZWpKNlFtVjFjVnBZVW05QlRVMWFSbmRDUnkwdExTMHRMUzB0TFhWcVptTXhOa0ZCUVVGQlIxZ3pUVWRKUjNCRmRHdEJFaE5GVkRReE9YeEZWRFkzTW54RlZEWTNNaU14R2dzSXQ4MExFQUlhQTFWVFJEZ2NjTGZOQ3c9PSIsW1siVExWIiwiMjAyNC0wNC0yMCIsIkFERCIsbnVsbCwiRVQiLCI0MTkiXSxbIkFERCIsIjIwMjQtMDQtMjEiLCJJQ04iLG51bGwsIkVUIiwiNjcyIl0sWyJJQ04iLCIyMDI0LTA0LTIyIiwiTlJUIixudWxsLCJFVCIsIjY3MiJdXV0='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-20 18:15'}, 'arrival_airport': {'name': 'Zurich Airport', 'id': 'ZRH', 'time': '2024-04-20 21:35'}, 'duration': 260, 'airplane': 'Airbus A330', 'airline': 'SWISS', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LX.png', 'travel_class': 'Economy', 'flight_number': 'LX 253', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 226 kg'], 'often_delayed_by_over_30_min': True}, {'departure_airport': {'name': 'Zurich Airport', 'id': 'ZRH', 'time': '2024-04-21 13:05'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-04-22 08:50'}, 'duration': 765, 'airplane': 'Boeing 777', 'airline': 'SWISS', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LX.png', 'travel_class': 'Economy', 'flight_number': 'LX 160', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 788 kg'], 'overnight': True}], 'layovers': [{'duration': 930, 'name': 'Zurich Airport', 'id': 'ZRH', 'overnight': True}], 'total_duration': 1955, 'carbon_emissions': {'this_flight': 1016000, 'typical_for_this_route': 893000, 'difference_percent': 14}, 'price': 2083, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LX.png', 'departure_token': 'WyJDalJJZWpKNlFtVjFjVnBZVW05QlRVMWFSbmRDUnkwdExTMHRMUzB0TFhWcVptTXhOa0ZCUVVGQlIxZ3pUVWRKUjNCRmRHdEJFZ3RNV0RJMU0zeE1XREUyTUJvTENQM2FEQkFDR2dOVlUwUTRISEQ5Mmd3PSIsW1siVExWIiwiMjAyNC0wNC0yMCIsIlpSSCIsbnVsbCwiTFgiLCIyNTMiXSxbIlpSSCIsIjIwMjQtMDQtMjEiLCJOUlQiLG51bGwsIkxYIiwiMTYwIl1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-20 01:00'}, 'arrival_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2024-04-20 05:10'}, 'duration': 250, 'airplane': 'Boeing 737MAX 8 Passenger', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 405', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Stream media to your device', 'Carbon emissions estimate: 188 kg'], 'overnight': True}, {'departure_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2024-04-20 22:35'}, 'arrival_airport': {'name': 'Incheon International Airport', 'id': 'ICN', 'time': '2024-04-21 16:00'}, 'duration': 685, 'airplane': 'Boeing 787', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 672', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 664 kg'], 'overnight': True}, {'departure_airport': {'name': 'Incheon International Airport', 'id': 'ICN', 'time': '2024-04-21 17:40'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-04-21 20:05'}, 'duration': 145, 'airplane': 'Boeing 787', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 672', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 118 kg']}], 'layovers': [{'duration': 1045, 'name': 'Bole Addis Ababa International Airport', 'id': 'ADD'}, {'duration': 100, 'name': 'Incheon International Airport', 'id': 'ICN'}], 'total_duration': 2225, 'carbon_emissions': {'this_flight': 971000, 'typical_for_this_route': 893000, 'difference_percent': 9}, 'price': 2148, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'departure_token': 'WyJDalJJZWpKNlFtVjFjVnBZVW05QlRVMWFSbmRDUnkwdExTMHRMUzB0TFhWcVptTXhOa0ZCUVVGQlIxZ3pUVWRKUjNCRmRHdEJFaEZGVkRRd05YeEZWRFkzTW54RlZEWTNNaG9MQ0lHT0RSQUNHZ05WVTBRNEhIQ0JqZzA9IixbWyJUTFYiLCIyMDI0LTA0LTIwIiwiQUREIixudWxsLCJFVCIsIjQwNSJdLFsiQUREIiwiMjAyNC0wNC0yMCIsIklDTiIsbnVsbCwiRVQiLCI2NzIiXSxbIklDTiIsIjIwMjQtMDQtMjEiLCJOUlQiLG51bGwsIkVUIiwiNjcyIl1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-20 15:35'}, 'arrival_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2024-04-20 19:50'}, 'duration': 255, 'airplane': 'Boeing 737MAX 8 Passenger', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 419', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Stream media to your device', 'Carbon emissions estimate: 188 kg']}, {'departure_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2024-04-20 22:35'}, 'arrival_airport': {'name': 'Incheon International Airport', 'id': 'ICN', 'time': '2024-04-21 16:00'}, 'duration': 685, 'airplane': 'Boeing 787', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 672', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 664 kg'], 'overnight': True}, {'departure_airport': {'name': 'Incheon International Airport', 'id': 'ICN', 'time': '2024-04-21 18:30'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-04-21 21:00'}, 'duration': 150, 'airplane': 'Airbus A330', 'airline': 'Asiana', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/OZ.png', 'travel_class': 'Business Class', 'flight_number': 'OZ 108', 'extensions': ['Angled flat seat', 'In-seat power outlet', 'On-demand video', 'Carbon emissions estimate: 503 kg']}], 'layovers': [{'duration': 165, 'name': 'Bole Addis Ababa International Airport', 'id': 'ADD'}, {'duration': 150, 'name': 'Incheon International Airport', 'id': 'ICN'}], 'total_duration': 1405, 'carbon_emissions': {'this_flight': 1356000, 'typical_for_this_route': 893000, 'difference_percent': 52}, 'price': 2622, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'departure_token': 'WyJDalJJZWpKNlFtVjFjVnBZVW05QlRVMWFSbmRDUnkwdExTMHRMUzB0TFhWcVptTXhOa0ZCUVVGQlIxZ3pUVWRKUjNCRmRHdEJFaEZGVkRReE9YeEZWRFkzTW54UFdqRXdPQm9MQ0pXQUVCQUNHZ05WVTBRNEhIQ1ZnQkE9IixbWyJUTFYiLCIyMDI0LTA0LTIwIiwiQUREIixudWxsLCJFVCIsIjQxOSJdLFsiQUREIiwiMjAyNC0wNC0yMCIsIklDTiIsbnVsbCwiRVQiLCI2NzIiXSxbIklDTiIsIjIwMjQtMDQtMjEiLCJOUlQiLG51bGwsIk9aIiwiMTA4Il1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-20 05:00'}, 'arrival_airport': {'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH', 'time': '2024-04-20 07:10'}, 'duration': 130, 'airplane': 'Airbus A320', 'airline': 'Aegean', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/A3.png', 'travel_class': 'Economy', 'flight_number': 'A3 929', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Carbon emissions estimate: 115 kg']}, {'departure_airport': {'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH', 'time': '2024-04-20 08:30'}, 'arrival_airport': {'name': 'Zurich Airport', 'id': 'ZRH', 'time': '2024-04-20 10:20'}, 'duration': 170, 'airplane': 'Airbus A320neo', 'airline': 'Aegean', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/A3.png', 'travel_class': 'Economy', 'flight_number': 'A3 850', 'ticket_also_sold_by': ['SWISS'], 'legroom': '28 in', 'extensions': ['Below average legroom (28 in)', 'Free Wi-Fi', 'In-seat USB outlet', 'Carbon emissions estimate: 116 kg']}, {'departure_airport': {'name': 'Zurich Airport', 'id': 'ZRH', 'time': '2024-04-20 13:05'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-04-21 08:50'}, 'duration': 765, 'airplane': 'Boeing 777', 'airline': 'SWISS', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LX.png', 'travel_class': 'Economy', 'flight_number': 'LX 160', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 788 kg'], 'overnight': True}], 'layovers': [{'duration': 80, 'name': 'Athens International Airport "Eleftherios Venizelos"', 'id': 'ATH'}, {'duration': 165, 'name': 'Zurich Airport', 'id': 'ZRH'}], 'total_duration': 1310, 'carbon_emissions': {'this_flight': 1021000, 'typical_for_this_route': 893000, 'difference_percent': 14}, 'price': 2824, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'departure_token': 'WyJDalJJZWpKNlFtVjFjVnBZVW05QlRVMWFSbmRDUnkwdExTMHRMUzB0TFhWcVptTXhOa0ZCUVVGQlIxZ3pUVWRKUjNCRmRHdEJFaEZCTXpreU9YeEJNemcxTUh4TVdERTJNQm9MQ1AyZEVSQUNHZ05WVTBRNEhIRDluUkU9IixbWyJUTFYiLCIyMDI0LTA0LTIwIiwiQVRIIixudWxsLCJBMyIsIjkyOSJdLFsiQVRIIiwiMjAyNC0wNC0yMCIsIlpSSCIsbnVsbCwiQTMiLCI4NTAiXSxbIlpSSCIsIjIwMjQtMDQtMjAiLCJOUlQiLG51bGwsIkxYIiwiMTYwIl1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-20 05:05'}, 'arrival_airport': {'name': 'Warsaw Chopin Airport', 'id': 'WAW', 'time': '2024-04-20 08:00'}, 'duration': 235, 'airline': 'LOT', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LO.png', 'travel_class': 'Economy', 'flight_number': 'LO 152', 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'In-seat power & USB outlets', 'Stream media to your device', 'Carbon emissions estimate: 170 kg']}, {'departure_airport': {'name': 'Warsaw Chopin Airport', 'id': 'WAW', 'time': '2024-04-20 15:00'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-04-21 10:45'}, 'duration': 765, 'airline': 'LOT', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LO.png', 'travel_class': 'Economy', 'flight_number': 'LO 1079', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 505 kg'], 'overnight': True}], 'layovers': [{'duration': 420, 'name': 'Warsaw Chopin Airport', 'id': 'WAW'}], 'total_duration': 1420, 'carbon_emissions': {'this_flight': 677000, 'typical_for_this_route': 893000, 'difference_percent': -24}, 'price': 3060, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LO.png', 'departure_token': 'WyJDalJJZWpKNlFtVjFjVnBZVW05QlRVMWFSbmRDUnkwdExTMHRMUzB0TFhWcVptTXhOa0ZCUVVGQlIxZ3pUVWRKUjNCRmRHdEJFZ3hNVHpFMU1ueE1UekV3TnprYUN3aU0xaElRQWhvRFZWTkVPQnh3ak5ZUyIsW1siVExWIiwiMjAyNC0wNC0yMCIsIldBVyIsbnVsbCwiTE8iLCIxNTIiXSxbIldBVyIsIjIwMjQtMDQtMjAiLCJOUlQiLG51bGwsIkxPIiwiMTA3OSJdXV0='}, {'flights': [{'departure_airport': {'name': 'Ben Gurion Airport', 'id': 'TLV', 'time': '2024-04-20 23:30'}, 'arrival_airport': {'name': 'Narita International Airport', 'id': 'NRT', 'time': '2024-04-21 17:05'}, 'duration': 695, 'airplane': 'Boeing 787', 'airline': 'El Al', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'travel_class': 'Premium Economy', 'flight_number': 'LY 91', 'extensions': ['Extra reclining seat', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 951 kg'], 'overnight': True}], 'total_duration': 695, 'carbon_emissions': {'this_flight': 952000, 'typical_for_this_route': 893000, 'difference_percent': 7}, 'price': 4443, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LY.png', 'departure_token': 'WyJDalJJZWpKNlFtVjFjVnBZVW05QlRVMWFSbmRDUnkwdExTMHRMUzB0TFhWcVptTXhOa0ZCUVVGQlIxZ3pUVWRKUjNCRmRHdEJFZ1JNV1RreEdnc0kxWTRiRUFJYUExVlRSRGdjY05XT0d3PT0iLFtbIlRMViIsIjIwMjQtMDQtMjAiLCJOUlQiLG51bGwsIkxZIiwiOTEiXV1d'}], 'price_insights': {'lowest_price': 1902, 'price_level': 'high', 'typical_price_range': [1000, 1450], 'price_history': [[1705442400, 1168], [1705528800, 1179], [1705615200, 1178], [1705701600, 1180], [1705788000, 1180], [1705874400, 1180], [1705960800, 1110], [1706047200, 1110], [1706133600, 1110], [1706220000, 1110], [1706306400, 1110], [1706392800, 1110], [1706479200, 1110], [1706565600, 1113], [1706652000, 1113], [1706738400, 1113], [1706824800, 1113], [1706911200, 1113], [1706997600, 1056], [1707084000, 1056], [1707170400, 1055], [1707256800, 1055], [1707343200, 1122], [1707429600, 1055], [1707516000, 1055], [1707602400, 1055], [1707688800, 1055], [1707775200, 1055], [1707861600, 1055], [1707948000, 1055], [1708034400, 1055], [1708120800, 1109], [1708207200, 1109], [1708293600, 1216], [1708380000, 1216], [1708466400, 1316], [1708552800, 1319], [1708639200, 1303], [1708725600, 1391], [1708812000, 1391], [1708898400, 1346], [1708984800, 1346], [1709071200, 1386], [1709157600, 1281], [1709244000, 1281], [1709330400, 1386], [1709416800, 1387], [1709503200, 1387], [1709589600, 1561], [1709676000, 1561], [1709762400, 1627], [1709848800, 1627], [1709935200, 1460], [1710021600, 1486], [1710108000, 1661], [1710194400, 1752], [1710280800, 1759], [1710367200, 1753], [1710453600, 1902], [1710540000, 1902], [1710626400, 1902]]}}
    Accommodation Info: Top Hotels in Tokyo:
1. Tokyo Bay Shiomi Prince Hotel
- Check-in Time: 3:00 PM
- Check-out Time: 11:00 AM
- Rate Per Night (Lowest): $159
- Total Rate (Lowest): $1,113
- Nearby Places: Shiomi Station, Haneda Airport
- Link: https://www.princehotels.com/shiomi/

2. Shinjuku Granbell Hotel
- Check-in Time: 3:00 PM
- Check-out Time: 12:00 PM
- Rate Per Night (Lowest): $138
- Total Rate (Lowest): $966
- Nearby Places: Shinjuku Golden Gai, Higashi-Shinjuku Station, Haneda Airport, ペキンリョウリギョクラン
- Link: https://www.granbellhotel.jp/shinjuku/

3. ONE@Tokyo
- Check-in Time: 3:00 PM
- Check-out Time: 11:00 AM
- Rate Per Night (Lowest): $144
- Total Rate (Lowest): $1,006
- Nearby Places: Tokyo Skytree, Oshiage Sta.(SKYTREE), Haneda Airport
- Link: https://onetokyo.com/

4. APA Hotel & Resort Ryogoku Eki Tower
- Check-in Time: 3:00 PM
- Check-out Time: 10:00 AM
- Rate Per Night (Lowest): $68
- Total Rate (Lowest): $479
- Nearby Places: Edo-Tokyo Museum, Ryogoku Sta., Haneda Airport, Ryogoku Terrace
- Link: https://www.apahotel.com/resort/ryogokueki/?utm_source=google&utm_medium=maps

5. Citadines Central Shinjuku Tokyo
- Check-in Time: 2:00 PM
- Check-out Time: 10:00 AM
- Rate Per Night (Lowest): $144
- Total Rate (Lowest): $1,008
- Nearby Places: Shinjuku Golden Gai, Seibu-Shinjuku Station, Haneda Airport, Miyabi
- Link: https://www.discoverasr.com/en/citadines/japan/citadines-central-shinjuku-tokyo?utm_source=google&utm_medium=organic&utm_campaign=HQ-google-organic-alwayson-20230628-all-en-jp-jp-citadinescentralshinjukutokyo-eme-gbp
    how to arrange the activities: Day 1:
- Visit Tokyo Localized - Free Walking Tour in Tokyo & More
- Lunch at Waho-An NATURE Tokyo

Day 2:
- Visit Tokyo Tower
- Lunch at Tokyo Sushi
- Dinner at Ninja Tokyo

Day 3:
- Visit Tokyo Disneyland
- Lunch at Starbucks Reserve(R) Roastery Tokyo
- Dinner at Tokyo Japanese Restaurant

Day 4:
- Visit Tokyo Central Railway Station
- Lunch at Tokyo Pot
- Dinner at Tokyo Bay

Day 5:
- Visit Tokyo Metro
- Lunch at Tokyo Jo's
- Dinner at Tokyo Restaurant

Day 6:
- Visit Tokyo DisneySea
- Lunch at Tokyo Tokyo Central
- Dinner at Tokyo Sushi

Day 7:
- Visit Little Tokyo
- Lunch at Waho-An NATURE Tokyo
- Dinner at Tokyo Restaurant
    Activities Info: [{'location_id': '14951238', 'name': 'teamLab Planets TOKYO', 'address_obj': {'street1': '6-1-16', 'city': 'Toyosu', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '135-0061', 'address_string': '6-1-16, Toyosu, Koto 135-0061 Tokyo Prefecture'}}, {'location_id': '144151', 'name': 'Little Tokyo', 'address_obj': {'street1': 'Downtown', 'street2': 'Southeast of the Civic Center; bounded by 1st', 'city': 'Los Angeles', 'state': 'California', 'country': 'United States', 'postalcode': '', 'address_string': 'Downtown Southeast of the Civic Center; bounded by 1st, Los Angeles, CA'}}, {'location_id': '320047', 'name': 'Tokyo Tower', 'address_obj': {'street1': '4-chome 2-8', 'street2': '', 'city': 'Shibakoen', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '105-0011', 'address_string': '4-chome 2-8, Shibakoen, Minato 105-0011 Tokyo Prefecture'}}, {'location_id': '1872416', 'name': 'Tokyo Skytree', 'address_obj': {'street1': '1 Chome-1-2', 'street2': '', 'city': 'Oshiage', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '131-8634', 'address_string': '1 Chome-1-2, Oshiage, Sumida 131-8634 Tokyo Prefecture'}}, {'location_id': '320634', 'name': 'Tokyo Disneyland', 'address_obj': {'street1': '1-1 Maihama', 'street2': '', 'city': 'Maihama', 'state': 'Chiba Prefecture', 'country': 'Japan', 'postalcode': '279-0031', 'address_string': '1-1 Maihama, Maihama, Urayasu 279-0031 Chiba Prefecture'}}, {'location_id': '1509275', 'name': 'Tokyo Metro', 'address_obj': {'street1': '', 'street2': '', 'city': 'Kanto', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'address_string': 'Tokyo Prefecture'}}, {'location_id': '12310322', 'name': 'Tokyo Localized - Free Walking Tour in Tokyo & More', 'address_obj': {'street2': 'Meeting Place: AKB48 Cafe', 'city': 'Chiyoda', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '110-0006', 'address_string': 'Meeting Place: AKB48 Cafe, Chiyoda 110-0006 Tokyo Prefecture'}}, {'location_id': '7744338', 'name': 'Waho-An NATURE Tokyo', 'address_obj': {'street1': '7-8', 'street2': 'Dokken-Daikanyama-Heights1F', 'city': 'Daikanyama', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '150-0034', 'address_string': '7-8 Dokken-Daikanyama-Heights1F, Daikanyama, Shibuya 150-0034 Tokyo Prefecture'}}, {'location_id': '550327', 'name': 'Tokyo Central Railway Station', 'address_obj': {'street1': '1-9-1', 'street2': '', 'city': 'Marunouchi', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '100-0005', 'address_string': '1-9-1, Marunouchi, Chiyoda 100-0005 Tokyo Prefecture'}}, {'location_id': '320639', 'name': 'Tokyo DisneySea', 'address_obj': {'street1': '1-13', 'city': 'Maihama', 'state': 'Chiba Prefecture', 'country': 'Japan', 'postalcode': '279-0031', 'address_string': '1-13, Maihama, Urayasu 279-0031 Chiba Prefecture'}}, {'location_id': '7604418', 'name': 'Tokyo Bay', 'address_obj': {'street1': '20 The Strand', 'street2': 'Takapuna Beach', 'city': 'Takapuna', 'country': 'New Zealand', 'postalcode': '0622', 'address_string': '20 The Strand Takapuna Beach, Takapuna, Auckland 0622 New Zealand'}}, {'location_id': '1010352', 'name': 'NINJA TOKYO', 'address_obj': {'street1': '2-2-1 Otemachi', 'street2': 'Shinotemachi Bldg. B1F', 'city': 'Chiyoda', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '100-0004', 'address_string': '2-2-1 Otemachi Shinotemachi Bldg. B1F, Chiyoda 100-0004 Tokyo Prefecture'}}, {'location_id': '1160290', 'name': 'Tokyo', 'address_obj': {'street1': 'Al uruba Street', 'street2': '', 'city': 'Riyadh', 'state': 'Riyadh Province', 'country': 'Saudi Arabia', 'postalcode': '11323', 'address_string': 'Al uruba Street, Riyadh 11323 Saudi Arabia'}}, {'location_id': '24035984', 'name': 'Tokyo Restaurant', 'address_obj': {'street1': '13 El Thawra St', 'street2': 'Korba, Heliopolis', 'city': 'Cairo', 'state': 'Cairo Governorate', 'country': 'Egypt', 'postalcode': '4460242', 'address_string': '13 El Thawra St Korba, Heliopolis, Cairo 4460242 Egypt'}}, {'location_id': '16714835', 'name': 'Starbucks Reserve(R) Roastery Tokyo', 'address_obj': {'street1': '2-19-23 Aodabai', 'city': 'Meguro', 'state': 'Tokyo Prefecture', 'country': 'Japan', 'postalcode': '153-0042', 'address_string': '2-19-23 Aodabai, Meguro 153-0042 Tokyo Prefecture'}}, {'location_id': '9798604', 'name': 'Tokyo Sushi', 'address_obj': {'street1': 'Rua de Alexandre Herculano 345', 'city': 'Porto', 'country': 'Portugal', 'postalcode': '4000-055', 'address_string': 'Rua de Alexandre Herculano 345, Porto 4000-055 Portugal'}}, {'location_id': '5113133', 'name': "Tokyo Jo's", 'address_obj': {'street1': 'Kent Avenue', 'street2': 'Sandals Montego Bay', 'city': 'Montego Bay', 'state': 'Jamaica', 'country': 'Caribbean', 'address_string': 'Kent Avenue Sandals Montego Bay, Montego Bay Jamaica'}}, {'location_id': '21356820', 'name': 'Tokyo Tokyo Central', 'address_obj': {'street1': '157 Salah Al Din St - Deira', 'street2': 'at Ramada By Wyndham Dubai Deira', 'city': 'Dubai', 'state': 'Emirate of Dubai', 'country': 'United Arab Emirates', 'address_string': '157 Salah Al Din St - Deira at Ramada By Wyndham Dubai Deira, Dubai United Arab Emirates'}}, {'location_id': '2167155', 'name': 'Tokyo Pot', 'address_obj': {'street1': '108 W 10th Ave', 'street2': '', 'city': 'Stillwater', 'state': 'Oklahoma', 'country': 'United States', 'postalcode': '74074-4627', 'address_string': '108 W 10th Ave, Stillwater, OK 74074-4627'}}, {'location_id': '1106443', 'name': 'Tokyo Japanese Restaurant', 'address_obj': {'street1': 'Strada profesor Marinescu Gheorghe No. 5', 'street2': '', 'city': 'Cluj-Napoca', 'country': 'Romania', 'postalcode': '400337', 'address_string': 'Strada profesor Marinescu Gheorghe No. 5, Cluj-Napoca 400337 Romania'}}]
    activities websites: [{'location_id': '14951238', 'name': 'teamLab Planets TOKYO', 'location': (35.649307, 139.78976), 'website': 'http://www.teamlab.art/e/planets/'}, {'location_id': '144151', 'name': 'Little Tokyo', 'location': (34.05114, -118.23803), 'website': 'http://www.visitlittletokyo.com/'}, {'location_id': '320047', 'name': 'Tokyo Tower', 'location': (35.65858, 139.74544), 'website': 'http://www.tokyotower.co.jp/'}, {'location_id': '1872416', 'name': 'Tokyo Skytree', 'location': (35.71007, 139.81065), 'website': 'http://www.tokyo-skytree.jp/en/'}, {'location_id': '320634', 'name': 'Tokyo Disneyland', 'location': (35.632835, 139.88039), 'website': 'https://www.tokyodisneyresort.jp/en/index.html'}, {'location_id': '1509275', 'name': 'Tokyo Metro', 'location': (35.683125, 139.73866), 'website': 'http://www.tokyometro.jp/index.html'}, {'location_id': '12310322', 'name': 'Tokyo Localized - Free Walking Tour in Tokyo & More', 'location': (35.699043, 139.77283), 'website': 'http://www.tokyolocalized.com/'}, {'location_id': '7744338', 'name': 'Waho-An NATURE Tokyo', 'location': (35.651203, 139.70538), 'website': 'http://www.natura-w.com/'}, {'location_id': '550327', 'name': 'Tokyo Central Railway Station', 'location': (35.681553, 139.76544), 'website': 'http://www.tokyostationcity.com/'}, {'location_id': '320639', 'name': 'Tokyo DisneySea', 'location': (35.62681, 139.88501), 'website': 'https://www.tokyodisneyresort.jp/tds/'}, {'location_id': '7604418', 'name': 'Tokyo Bay', 'location': (-36.786903, 174.77399), 'website': 'http://www.tokyobay.co.nz/'}, {'location_id': '1010352', 'name': 'NINJA TOKYO', 'location': (35.684948, 139.76709), 'website': 'https://www.ninja-tokyo.jp/home/home-en/'}, {'location_id': '1160290', 'name': 'Tokyo', 'location': (24.718328, 46.686707), 'website': 'http://www.tokyoarabia.com'}, {'location_id': '24035984', 'name': 'Tokyo Restaurant', 'location': (30.090359, 31.326263), 'website': 'https://www.instagram.com/tokyorestaurant_/?igshid=YmMyMTA2M2Y%3D'}, {'location_id': '16714835', 'name': 'Starbucks Reserve(R) Roastery Tokyo', 'location': (35.649372, 139.69258), 'website': 'http://store.starbucks.co.jp/detail-2381/'}, {'location_id': '9798604', 'name': 'Tokyo Sushi', 'location': (41.14435, -8.605821), 'website': 'http://www.facebook.com/Tokyosushi2'}, {'location_id': '5113133', 'name': "Tokyo Jo's", 'location': (18.509495, -77.9045), 'website': 'http://www.sandals.com/main/montego/mo-dining.cfm'}, {'location_id': '21356820', 'name': 'Tokyo Tokyo Central', 'location': (25.270615, 55.321823), 'website': 'https://www.facebook.com/TokyoTokyoCentralOfiicial'}, {'location_id': '2167155', 'name': 'Tokyo Pot', 'location': (36.111465, -97.059135), 'website': 'http://www.facebook.com/TokyoPot?rf=123605501023078'}, {'location_id': '1106443', 'name': 'Tokyo Japanese Restaurant', 'location': (46.763035, 23.583824), 'website': 'http://www.tokyorestaurant.ro/'}]
2024-03-17 20:07:06,962 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'Destination: Tokyo\n    Budget: 8000\n    Dates: From 2024-04-20 to 2024-04-27\n    Number of people: 2\n    Flights Info: {\'search_metadata\': {\'id\': \'65f73062a74fe0bead716dc2\', \'status\': \'Success\', \'json_endpoint\': \'https://serpapi.com/searches/7df5542011fc5cb6/65f73062a74fe0bead716dc2.json\', \'created_at\': \'2024-03-17 18:03:14 UTC\', \'processed_at\': \'2024-03-17 18:03:14 UTC\', \'google_flights_url\': \'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&q=Flights+to+NRT+from+TLV+on+2024-04-20+through+2024-04-27\', \'raw_html_file\': \'https://serpapi.com/searches/7df5542011fc5cb6/65f73062a74fe0bead716dc2.html\', \'prettify_html_file\': \'https://serpapi.com/searches/7df5542011fc5cb6/65f73062a74fe0bead716dc2.prettify\', \'total_time_taken\': 0.48}, \'search_parameters\': {\'engine\': \'google_flights\', \'hl\': \'en\', \'gl\': \'us\', \'departure_id\': \'TLV\', \'arrival_id\': \'NRT\', \'outbound_date\': \'2024-04-20\', \'return_date\': \'2024-04-27\', \'currency\': \'USD\'}, \'best_flights\': [{\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-20 15:35\'}, \'arrival_airport\': {\'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'time\': \'2024-04-20 19:50\'}, \'duration\': 255, \'airplane\': \'Boeing 737MAX 8 Passenger\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 419\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Stream media to your device\', \'Carbon emissions estimate: 188 kg\']}, {\'departure_airport\': {\'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'time\': \'2024-04-20 22:35\'}, \'arrival_airport\': {\'name\': \'Incheon International Airport\', \'id\': \'ICN\', \'time\': \'2024-04-21 16:00\'}, \'duration\': 685, \'airplane\': \'Boeing 787\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 672\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 664 kg\'], \'overnight\': True}, {\'departure_airport\': {\'name\': \'Incheon International Airport\', \'id\': \'ICN\', \'time\': \'2024-04-21 17:40\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-04-21 20:05\'}, \'duration\': 145, \'airplane\': \'Boeing 787\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 672\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 118 kg\']}], \'layovers\': [{\'duration\': 165, \'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\'}, {\'duration\': 100, \'name\': \'Incheon International Airport\', \'id\': \'ICN\'}], \'total_duration\': 1350, \'carbon_emissions\': {\'this_flight\': 971000, \'typical_for_this_route\': 893000, \'difference_percent\': 9}, \'price\': 2303, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'departure_token\': \'WyJDalJJZWpKNlFtVjFjVnBZVW05QlRVMWFSbmRDUnkwdExTMHRMUzB0TFhWcVptTXhOa0ZCUVVGQlIxZ3pUVWRKUjNCRmRHdEJFaEZGVkRReE9YeEZWRFkzTW54RlZEWTNNaG9MQ0kySERoQUNHZ05WVTBRNEhIQ05odzQ9IixbWyJUTFYiLCIyMDI0LTA0LTIwIiwiQUREIixudWxsLCJFVCIsIjQxOSJdLFsiQUREIiwiMjAyNC0wNC0yMCIsIklDTiIsbnVsbCwiRVQiLCI2NzIiXSxbIklDTiIsIjIwMjQtMDQtMjEiLCJOUlQiLG51bGwsIkVUIiwiNjcyIl1dXQ==\'}], \'other_flights\': [{\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-20 15:35\'}, \'arrival_airport\': {\'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'time\': \'2024-04-20 19:50\'}, \'duration\': 255, \'airplane\': \'Boeing 737MAX 8 Passenger\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 419\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Stream media to your device\', \'Carbon emissions estimate: 188 kg\']}, {\'departure_airport\': {\'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'time\': \'2024-04-21 22:35\'}, \'arrival_airport\': {\'name\': \'Incheon International Airport\', \'id\': \'ICN\', \'time\': \'2024-04-22 16:00\'}, \'duration\': 685, \'airplane\': \'Boeing 787\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 672\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 664 kg\'], \'overnight\': True}, {\'departure_airport\': {\'name\': \'Incheon International Airport\', \'id\': \'ICN\', \'time\': \'2024-04-22 17:40\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-04-22 20:05\'}, \'duration\': 145, \'airplane\': \'Boeing 787\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 672\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 118 kg\']}], \'layovers\': [{\'duration\': 1605, \'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'overnight\': True}, {\'duration\': 100, \'name\': \'Incheon International Airport\', \'id\': \'ICN\'}], \'total_duration\': 2790, \'carbon_emissions\': {\'this_flight\': 971000, \'typical_for_this_route\': 893000, \'difference_percent\': 9}, \'price\': 1902, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'departure_token\': \'WyJDalJJZWpKNlFtVjFjVnBZVW05QlRVMWFSbmRDUnkwdExTMHRMUzB0TFhWcVptTXhOa0ZCUVVGQlIxZ3pUVWRKUjNCRmRHdEJFaE5GVkRReE9YeEZWRFkzTW54RlZEWTNNaU14R2dzSXQ4MExFQUlhQTFWVFJEZ2NjTGZOQ3c9PSIsW1siVExWIiwiMjAyNC0wNC0yMCIsIkFERCIsbnVsbCwiRVQiLCI0MTkiXSxbIkFERCIsIjIwMjQtMDQtMjEiLCJJQ04iLG51bGwsIkVUIiwiNjcyIl0sWyJJQ04iLCIyMDI0LTA0LTIyIiwiTlJUIixudWxsLCJFVCIsIjY3MiJdXV0=\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-20 18:15\'}, \'arrival_airport\': {\'name\': \'Zurich Airport\', \'id\': \'ZRH\', \'time\': \'2024-04-20 21:35\'}, \'duration\': 260, \'airplane\': \'Airbus A330\', \'airline\': \'SWISS\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LX.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LX 253\', \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'Wi-Fi for a fee\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 226 kg\'], \'often_delayed_by_over_30_min\': True}, {\'departure_airport\': {\'name\': \'Zurich Airport\', \'id\': \'ZRH\', \'time\': \'2024-04-21 13:05\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-04-22 08:50\'}, \'duration\': 765, \'airplane\': \'Boeing 777\', \'airline\': \'SWISS\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LX.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LX 160\', \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'Wi-Fi for a fee\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 788 kg\'], \'overnight\': True}], \'layovers\': [{\'duration\': 930, \'name\': \'Zurich Airport\', \'id\': \'ZRH\', \'overnight\': True}], \'total_duration\': 1955, \'carbon_emissions\': {\'this_flight\': 1016000, \'typical_for_this_route\': 893000, \'difference_percent\': 14}, \'price\': 2083, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LX.png\', \'departure_token\': \'WyJDalJJZWpKNlFtVjFjVnBZVW05QlRVMWFSbmRDUnkwdExTMHRMUzB0TFhWcVptTXhOa0ZCUVVGQlIxZ3pUVWRKUjNCRmRHdEJFZ3RNV0RJMU0zeE1XREUyTUJvTENQM2FEQkFDR2dOVlUwUTRISEQ5Mmd3PSIsW1siVExWIiwiMjAyNC0wNC0yMCIsIlpSSCIsbnVsbCwiTFgiLCIyNTMiXSxbIlpSSCIsIjIwMjQtMDQtMjEiLCJOUlQiLG51bGwsIkxYIiwiMTYwIl1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-20 01:00\'}, \'arrival_airport\': {\'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'time\': \'2024-04-20 05:10\'}, \'duration\': 250, \'airplane\': \'Boeing 737MAX 8 Passenger\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 405\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Stream media to your device\', \'Carbon emissions estimate: 188 kg\'], \'overnight\': True}, {\'departure_airport\': {\'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'time\': \'2024-04-20 22:35\'}, \'arrival_airport\': {\'name\': \'Incheon International Airport\', \'id\': \'ICN\', \'time\': \'2024-04-21 16:00\'}, \'duration\': 685, \'airplane\': \'Boeing 787\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 672\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 664 kg\'], \'overnight\': True}, {\'departure_airport\': {\'name\': \'Incheon International Airport\', \'id\': \'ICN\', \'time\': \'2024-04-21 17:40\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-04-21 20:05\'}, \'duration\': 145, \'airplane\': \'Boeing 787\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 672\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 118 kg\']}], \'layovers\': [{\'duration\': 1045, \'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\'}, {\'duration\': 100, \'name\': \'Incheon International Airport\', \'id\': \'ICN\'}], \'total_duration\': 2225, \'carbon_emissions\': {\'this_flight\': 971000, \'typical_for_this_route\': 893000, \'difference_percent\': 9}, \'price\': 2148, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'departure_token\': \'WyJDalJJZWpKNlFtVjFjVnBZVW05QlRVMWFSbmRDUnkwdExTMHRMUzB0TFhWcVptTXhOa0ZCUVVGQlIxZ3pUVWRKUjNCRmRHdEJFaEZGVkRRd05YeEZWRFkzTW54RlZEWTNNaG9MQ0lHT0RSQUNHZ05WVTBRNEhIQ0JqZzA9IixbWyJUTFYiLCIyMDI0LTA0LTIwIiwiQUREIixudWxsLCJFVCIsIjQwNSJdLFsiQUREIiwiMjAyNC0wNC0yMCIsIklDTiIsbnVsbCwiRVQiLCI2NzIiXSxbIklDTiIsIjIwMjQtMDQtMjEiLCJOUlQiLG51bGwsIkVUIiwiNjcyIl1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-20 15:35\'}, \'arrival_airport\': {\'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'time\': \'2024-04-20 19:50\'}, \'duration\': 255, \'airplane\': \'Boeing 737MAX 8 Passenger\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 419\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Stream media to your device\', \'Carbon emissions estimate: 188 kg\']}, {\'departure_airport\': {\'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\', \'time\': \'2024-04-20 22:35\'}, \'arrival_airport\': {\'name\': \'Incheon International Airport\', \'id\': \'ICN\', \'time\': \'2024-04-21 16:00\'}, \'duration\': 685, \'airplane\': \'Boeing 787\', \'airline\': \'Ethiopian\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/ET.png\', \'travel_class\': \'Economy\', \'flight_number\': \'ET 672\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 664 kg\'], \'overnight\': True}, {\'departure_airport\': {\'name\': \'Incheon International Airport\', \'id\': \'ICN\', \'time\': \'2024-04-21 18:30\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-04-21 21:00\'}, \'duration\': 150, \'airplane\': \'Airbus A330\', \'airline\': \'Asiana\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/OZ.png\', \'travel_class\': \'Business Class\', \'flight_number\': \'OZ 108\', \'extensions\': [\'Angled flat seat\', \'In-seat power outlet\', \'On-demand video\', \'Carbon emissions estimate: 503 kg\']}], \'layovers\': [{\'duration\': 165, \'name\': \'Bole Addis Ababa International Airport\', \'id\': \'ADD\'}, {\'duration\': 150, \'name\': \'Incheon International Airport\', \'id\': \'ICN\'}], \'total_duration\': 1405, \'carbon_emissions\': {\'this_flight\': 1356000, \'typical_for_this_route\': 893000, \'difference_percent\': 52}, \'price\': 2622, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'departure_token\': \'WyJDalJJZWpKNlFtVjFjVnBZVW05QlRVMWFSbmRDUnkwdExTMHRMUzB0TFhWcVptTXhOa0ZCUVVGQlIxZ3pUVWRKUjNCRmRHdEJFaEZGVkRReE9YeEZWRFkzTW54UFdqRXdPQm9MQ0pXQUVCQUNHZ05WVTBRNEhIQ1ZnQkE9IixbWyJUTFYiLCIyMDI0LTA0LTIwIiwiQUREIixudWxsLCJFVCIsIjQxOSJdLFsiQUREIiwiMjAyNC0wNC0yMCIsIklDTiIsbnVsbCwiRVQiLCI2NzIiXSxbIklDTiIsIjIwMjQtMDQtMjEiLCJOUlQiLG51bGwsIk9aIiwiMTA4Il1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-20 05:00\'}, \'arrival_airport\': {\'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\', \'time\': \'2024-04-20 07:10\'}, \'duration\': 130, \'airplane\': \'Airbus A320\', \'airline\': \'Aegean\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/A3.png\', \'travel_class\': \'Economy\', \'flight_number\': \'A3 929\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'Carbon emissions estimate: 115 kg\']}, {\'departure_airport\': {\'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\', \'time\': \'2024-04-20 08:30\'}, \'arrival_airport\': {\'name\': \'Zurich Airport\', \'id\': \'ZRH\', \'time\': \'2024-04-20 10:20\'}, \'duration\': 170, \'airplane\': \'Airbus A320neo\', \'airline\': \'Aegean\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/A3.png\', \'travel_class\': \'Economy\', \'flight_number\': \'A3 850\', \'ticket_also_sold_by\': [\'SWISS\'], \'legroom\': \'28 in\', \'extensions\': [\'Below average legroom (28 in)\', \'Free Wi-Fi\', \'In-seat USB outlet\', \'Carbon emissions estimate: 116 kg\']}, {\'departure_airport\': {\'name\': \'Zurich Airport\', \'id\': \'ZRH\', \'time\': \'2024-04-20 13:05\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-04-21 08:50\'}, \'duration\': 765, \'airplane\': \'Boeing 777\', \'airline\': \'SWISS\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LX.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LX 160\', \'legroom\': \'31 in\', \'extensions\': [\'Average legroom (31 in)\', \'Wi-Fi for a fee\', \'In-seat USB outlet\', \'On-demand video\', \'Carbon emissions estimate: 788 kg\'], \'overnight\': True}], \'layovers\': [{\'duration\': 80, \'name\': \'Athens International Airport "Eleftherios Venizelos"\', \'id\': \'ATH\'}, {\'duration\': 165, \'name\': \'Zurich Airport\', \'id\': \'ZRH\'}], \'total_duration\': 1310, \'carbon_emissions\': {\'this_flight\': 1021000, \'typical_for_this_route\': 893000, \'difference_percent\': 14}, \'price\': 2824, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/multi.png\', \'departure_token\': \'WyJDalJJZWpKNlFtVjFjVnBZVW05QlRVMWFSbmRDUnkwdExTMHRMUzB0TFhWcVptTXhOa0ZCUVVGQlIxZ3pUVWRKUjNCRmRHdEJFaEZCTXpreU9YeEJNemcxTUh4TVdERTJNQm9MQ1AyZEVSQUNHZ05WVTBRNEhIRDluUkU9IixbWyJUTFYiLCIyMDI0LTA0LTIwIiwiQVRIIixudWxsLCJBMyIsIjkyOSJdLFsiQVRIIiwiMjAyNC0wNC0yMCIsIlpSSCIsbnVsbCwiQTMiLCI4NTAiXSxbIlpSSCIsIjIwMjQtMDQtMjAiLCJOUlQiLG51bGwsIkxYIiwiMTYwIl1dXQ==\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-20 05:05\'}, \'arrival_airport\': {\'name\': \'Warsaw Chopin Airport\', \'id\': \'WAW\', \'time\': \'2024-04-20 08:00\'}, \'duration\': 235, \'airline\': \'LOT\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LO.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LO 152\', \'legroom\': \'30 in\', \'extensions\': [\'Average legroom (30 in)\', \'In-seat power & USB outlets\', \'Stream media to your device\', \'Carbon emissions estimate: 170 kg\']}, {\'departure_airport\': {\'name\': \'Warsaw Chopin Airport\', \'id\': \'WAW\', \'time\': \'2024-04-20 15:00\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-04-21 10:45\'}, \'duration\': 765, \'airline\': \'LOT\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LO.png\', \'travel_class\': \'Economy\', \'flight_number\': \'LO 1079\', \'legroom\': \'32 in\', \'extensions\': [\'Above average legroom (32 in)\', \'In-seat power & USB outlets\', \'On-demand video\', \'Carbon emissions estimate: 505 kg\'], \'overnight\': True}], \'layovers\': [{\'duration\': 420, \'name\': \'Warsaw Chopin Airport\', \'id\': \'WAW\'}], \'total_duration\': 1420, \'carbon_emissions\': {\'this_flight\': 677000, \'typical_for_this_route\': 893000, \'difference_percent\': -24}, \'price\': 3060, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LO.png\', \'departure_token\': \'WyJDalJJZWpKNlFtVjFjVnBZVW05QlRVMWFSbmRDUnkwdExTMHRMUzB0TFhWcVptTXhOa0ZCUVVGQlIxZ3pUVWRKUjNCRmRHdEJFZ3hNVHpFMU1ueE1UekV3TnprYUN3aU0xaElRQWhvRFZWTkVPQnh3ak5ZUyIsW1siVExWIiwiMjAyNC0wNC0yMCIsIldBVyIsbnVsbCwiTE8iLCIxNTIiXSxbIldBVyIsIjIwMjQtMDQtMjAiLCJOUlQiLG51bGwsIkxPIiwiMTA3OSJdXV0=\'}, {\'flights\': [{\'departure_airport\': {\'name\': \'Ben Gurion Airport\', \'id\': \'TLV\', \'time\': \'2024-04-20 23:30\'}, \'arrival_airport\': {\'name\': \'Narita International Airport\', \'id\': \'NRT\', \'time\': \'2024-04-21 17:05\'}, \'duration\': 695, \'airplane\': \'Boeing 787\', \'airline\': \'El Al\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'travel_class\': \'Premium Economy\', \'flight_number\': \'LY 91\', \'extensions\': [\'Extra reclining seat\', \'Wi-Fi for a fee\', \'In-seat power & USB outlets\', \'On-demand video\', \'Carbon emissions estimate: 951 kg\'], \'overnight\': True}], \'total_duration\': 695, \'carbon_emissions\': {\'this_flight\': 952000, \'typical_for_this_route\': 893000, \'difference_percent\': 7}, \'price\': 4443, \'type\': \'Round trip\', \'airline_logo\': \'https://www.gstatic.com/flights/airline_logos/70px/LY.png\', \'departure_token\': \'WyJDalJJZWpKNlFtVjFjVnBZVW05QlRVMWFSbmRDUnkwdExTMHRMUzB0TFhWcVptTXhOa0ZCUVVGQlIxZ3pUVWRKUjNCRmRHdEJFZ1JNV1RreEdnc0kxWTRiRUFJYUExVlRSRGdjY05XT0d3PT0iLFtbIlRMViIsIjIwMjQtMDQtMjAiLCJOUlQiLG51bGwsIkxZIiwiOTEiXV1d\'}], \'price_insights\': {\'lowest_price\': 1902, \'price_level\': \'high\', \'typical_price_range\': [1000, 1450], \'price_history\': [[1705442400, 1168], [1705528800, 1179], [1705615200, 1178], [1705701600, 1180], [1705788000, 1180], [1705874400, 1180], [1705960800, 1110], [1706047200, 1110], [1706133600, 1110], [1706220000, 1110], [1706306400, 1110], [1706392800, 1110], [1706479200, 1110], [1706565600, 1113], [1706652000, 1113], [1706738400, 1113], [1706824800, 1113], [1706911200, 1113], [1706997600, 1056], [1707084000, 1056], [1707170400, 1055], [1707256800, 1055], [1707343200, 1122], [1707429600, 1055], [1707516000, 1055], [1707602400, 1055], [1707688800, 1055], [1707775200, 1055], [1707861600, 1055], [1707948000, 1055], [1708034400, 1055], [1708120800, 1109], [1708207200, 1109], [1708293600, 1216], [1708380000, 1216], [1708466400, 1316], [1708552800, 1319], [1708639200, 1303], [1708725600, 1391], [1708812000, 1391], [1708898400, 1346], [1708984800, 1346], [1709071200, 1386], [1709157600, 1281], [1709244000, 1281], [1709330400, 1386], [1709416800, 1387], [1709503200, 1387], [1709589600, 1561], [1709676000, 1561], [1709762400, 1627], [1709848800, 1627], [1709935200, 1460], [1710021600, 1486], [1710108000, 1661], [1710194400, 1752], [1710280800, 1759], [1710367200, 1753], [1710453600, 1902], [1710540000, 1902], [1710626400, 1902]]}}\n    Accommodation Info: Top Hotels in Tokyo:\n1. Tokyo Bay Shiomi Prince Hotel\n- Check-in Time: 3:00\u202fPM\n- Check-out Time: 11:00\u202fAM\n- Rate Per Night (Lowest): $159\n- Total Rate (Lowest): $1,113\n- Nearby Places: Shiomi Station, Haneda Airport\n- Link: https://www.princehotels.com/shiomi/\n\n2. Shinjuku Granbell Hotel\n- Check-in Time: 3:00\u202fPM\n- Check-out Time: 12:00\u202fPM\n- Rate Per Night (Lowest): $138\n- Total Rate (Lowest): $966\n- Nearby Places: Shinjuku Golden Gai, Higashi-Shinjuku Station, Haneda Airport, ペキンリョウリギョクラン\n- Link: https://www.granbellhotel.jp/shinjuku/\n\n3. ONE@Tokyo\n- Check-in Time: 3:00\u202fPM\n- Check-out Time: 11:00\u202fAM\n- Rate Per Night (Lowest): $144\n- Total Rate (Lowest): $1,006\n- Nearby Places: Tokyo Skytree, Oshiage Sta.(SKYTREE), Haneda Airport\n- Link: https://onetokyo.com/\n\n4. APA Hotel & Resort Ryogoku Eki Tower\n- Check-in Time: 3:00\u202fPM\n- Check-out Time: 10:00\u202fAM\n- Rate Per Night (Lowest): $68\n- Total Rate (Lowest): $479\n- Nearby Places: Edo-Tokyo Museum, Ryogoku Sta., Haneda Airport, Ryogoku Terrace\n- Link: https://www.apahotel.com/resort/ryogokueki/?utm_source=google&utm_medium=maps\n\n5. Citadines Central Shinjuku Tokyo\n- Check-in Time: 2:00\u202fPM\n- Check-out Time: 10:00\u202fAM\n- Rate Per Night (Lowest): $144\n- Total Rate (Lowest): $1,008\n- Nearby Places: Shinjuku Golden Gai, Seibu-Shinjuku Station, Haneda Airport, Miyabi\n- Link: https://www.discoverasr.com/en/citadines/japan/citadines-central-shinjuku-tokyo?utm_source=google&utm_medium=organic&utm_campaign=HQ-google-organic-alwayson-20230628-all-en-jp-jp-citadinescentralshinjukutokyo-eme-gbp\n    how to arrange the activities: Day 1:\n- Visit Tokyo Localized - Free Walking Tour in Tokyo & More\n- Lunch at Waho-An NATURE Tokyo\n\nDay 2:\n- Visit Tokyo Tower\n- Lunch at Tokyo Sushi\n- Dinner at Ninja Tokyo\n\nDay 3:\n- Visit Tokyo Disneyland\n- Lunch at Starbucks Reserve(R) Roastery Tokyo\n- Dinner at Tokyo Japanese Restaurant\n\nDay 4:\n- Visit Tokyo Central Railway Station\n- Lunch at Tokyo Pot\n- Dinner at Tokyo Bay\n\nDay 5:\n- Visit Tokyo Metro\n- Lunch at Tokyo Jo\'s\n- Dinner at Tokyo Restaurant\n\nDay 6:\n- Visit Tokyo DisneySea\n- Lunch at Tokyo Tokyo Central\n- Dinner at Tokyo Sushi\n\nDay 7:\n- Visit Little Tokyo\n- Lunch at Waho-An NATURE Tokyo\n- Dinner at Tokyo Restaurant\n    Activities Info: [{\'location_id\': \'14951238\', \'name\': \'teamLab Planets TOKYO\', \'address_obj\': {\'street1\': \'6-1-16\', \'city\': \'Toyosu\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'135-0061\', \'address_string\': \'6-1-16, Toyosu, Koto 135-0061 Tokyo Prefecture\'}}, {\'location_id\': \'144151\', \'name\': \'Little Tokyo\', \'address_obj\': {\'street1\': \'Downtown\', \'street2\': \'Southeast of the Civic Center; bounded by 1st\', \'city\': \'Los Angeles\', \'state\': \'California\', \'country\': \'United States\', \'postalcode\': \'\', \'address_string\': \'Downtown Southeast of the Civic Center; bounded by 1st, Los Angeles, CA\'}}, {\'location_id\': \'320047\', \'name\': \'Tokyo Tower\', \'address_obj\': {\'street1\': \'4-chome 2-8\', \'street2\': \'\', \'city\': \'Shibakoen\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'105-0011\', \'address_string\': \'4-chome 2-8, Shibakoen, Minato 105-0011 Tokyo Prefecture\'}}, {\'location_id\': \'1872416\', \'name\': \'Tokyo Skytree\', \'address_obj\': {\'street1\': \'1 Chome-1-2\', \'street2\': \'\', \'city\': \'Oshiage\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'131-8634\', \'address_string\': \'1 Chome-1-2, Oshiage, Sumida 131-8634 Tokyo Prefecture\'}}, {\'location_id\': \'320634\', \'name\': \'Tokyo Disneyland\', \'address_obj\': {\'street1\': \'1-1 Maihama\', \'street2\': \'\', \'city\': \'Maihama\', \'state\': \'Chiba Prefecture\', \'country\': \'Japan\', \'postalcode\': \'279-0031\', \'address_string\': \'1-1 Maihama, Maihama, Urayasu 279-0031 Chiba Prefecture\'}}, {\'location_id\': \'1509275\', \'name\': \'Tokyo Metro\', \'address_obj\': {\'street1\': \'\', \'street2\': \'\', \'city\': \'Kanto\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'address_string\': \'Tokyo Prefecture\'}}, {\'location_id\': \'12310322\', \'name\': \'Tokyo Localized - Free Walking Tour in Tokyo & More\', \'address_obj\': {\'street2\': \'Meeting Place: AKB48 Cafe\', \'city\': \'Chiyoda\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'110-0006\', \'address_string\': \'Meeting Place: AKB48 Cafe, Chiyoda 110-0006 Tokyo Prefecture\'}}, {\'location_id\': \'7744338\', \'name\': \'Waho-An NATURE Tokyo\', \'address_obj\': {\'street1\': \'7-8\', \'street2\': \'Dokken-Daikanyama-Heights1F\', \'city\': \'Daikanyama\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'150-0034\', \'address_string\': \'7-8 Dokken-Daikanyama-Heights1F, Daikanyama, Shibuya 150-0034 Tokyo Prefecture\'}}, {\'location_id\': \'550327\', \'name\': \'Tokyo Central Railway Station\', \'address_obj\': {\'street1\': \'1-9-1\', \'street2\': \'\', \'city\': \'Marunouchi\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'100-0005\', \'address_string\': \'1-9-1, Marunouchi, Chiyoda 100-0005 Tokyo Prefecture\'}}, {\'location_id\': \'320639\', \'name\': \'Tokyo DisneySea\', \'address_obj\': {\'street1\': \'1-13\', \'city\': \'Maihama\', \'state\': \'Chiba Prefecture\', \'country\': \'Japan\', \'postalcode\': \'279-0031\', \'address_string\': \'1-13, Maihama, Urayasu 279-0031 Chiba Prefecture\'}}, {\'location_id\': \'7604418\', \'name\': \'Tokyo Bay\', \'address_obj\': {\'street1\': \'20 The Strand\', \'street2\': \'Takapuna Beach\', \'city\': \'Takapuna\', \'country\': \'New Zealand\', \'postalcode\': \'0622\', \'address_string\': \'20 The Strand Takapuna Beach, Takapuna, Auckland 0622 New Zealand\'}}, {\'location_id\': \'1010352\', \'name\': \'NINJA TOKYO\', \'address_obj\': {\'street1\': \'2-2-1 Otemachi\', \'street2\': \'Shinotemachi Bldg. B1F\', \'city\': \'Chiyoda\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'100-0004\', \'address_string\': \'2-2-1 Otemachi Shinotemachi Bldg. B1F, Chiyoda 100-0004 Tokyo Prefecture\'}}, {\'location_id\': \'1160290\', \'name\': \'Tokyo\', \'address_obj\': {\'street1\': \'Al uruba Street\', \'street2\': \'\', \'city\': \'Riyadh\', \'state\': \'Riyadh Province\', \'country\': \'Saudi Arabia\', \'postalcode\': \'11323\', \'address_string\': \'Al uruba Street, Riyadh 11323 Saudi Arabia\'}}, {\'location_id\': \'24035984\', \'name\': \'Tokyo Restaurant\', \'address_obj\': {\'street1\': \'13 El Thawra St\', \'street2\': \'Korba, Heliopolis\', \'city\': \'Cairo\', \'state\': \'Cairo Governorate\', \'country\': \'Egypt\', \'postalcode\': \'4460242\', \'address_string\': \'13 El Thawra St Korba, Heliopolis, Cairo 4460242 Egypt\'}}, {\'location_id\': \'16714835\', \'name\': \'Starbucks Reserve(R) Roastery Tokyo\', \'address_obj\': {\'street1\': \'2-19-23 Aodabai\', \'city\': \'Meguro\', \'state\': \'Tokyo Prefecture\', \'country\': \'Japan\', \'postalcode\': \'153-0042\', \'address_string\': \'2-19-23 Aodabai, Meguro 153-0042 Tokyo Prefecture\'}}, {\'location_id\': \'9798604\', \'name\': \'Tokyo Sushi\', \'address_obj\': {\'street1\': \'Rua de Alexandre Herculano 345\', \'city\': \'Porto\', \'country\': \'Portugal\', \'postalcode\': \'4000-055\', \'address_string\': \'Rua de Alexandre Herculano 345, Porto 4000-055 Portugal\'}}, {\'location_id\': \'5113133\', \'name\': "Tokyo Jo\'s", \'address_obj\': {\'street1\': \'Kent Avenue\', \'street2\': \'Sandals Montego Bay\', \'city\': \'Montego Bay\', \'state\': \'Jamaica\', \'country\': \'Caribbean\', \'address_string\': \'Kent Avenue Sandals Montego Bay, Montego Bay Jamaica\'}}, {\'location_id\': \'21356820\', \'name\': \'Tokyo Tokyo Central\', \'address_obj\': {\'street1\': \'157 Salah Al Din St - Deira\', \'street2\': \'at Ramada By Wyndham Dubai Deira\', \'city\': \'Dubai\', \'state\': \'Emirate of Dubai\', \'country\': \'United Arab Emirates\', \'address_string\': \'157 Salah Al Din St - Deira at Ramada By Wyndham Dubai Deira, Dubai United Arab Emirates\'}}, {\'location_id\': \'2167155\', \'name\': \'Tokyo Pot\', \'address_obj\': {\'street1\': \'108 W 10th Ave\', \'street2\': \'\', \'city\': \'Stillwater\', \'state\': \'Oklahoma\', \'country\': \'United States\', \'postalcode\': \'74074-4627\', \'address_string\': \'108 W 10th Ave, Stillwater, OK 74074-4627\'}}, {\'location_id\': \'1106443\', \'name\': \'Tokyo Japanese Restaurant\', \'address_obj\': {\'street1\': \'Strada profesor Marinescu Gheorghe No. 5\', \'street2\': \'\', \'city\': \'Cluj-Napoca\', \'country\': \'Romania\', \'postalcode\': \'400337\', \'address_string\': \'Strada profesor Marinescu Gheorghe No. 5, Cluj-Napoca 400337 Romania\'}}]\n    activities websites: [{\'location_id\': \'14951238\', \'name\': \'teamLab Planets TOKYO\', \'location\': (35.649307, 139.78976), \'website\': \'http://www.teamlab.art/e/planets/\'}, {\'location_id\': \'144151\', \'name\': \'Little Tokyo\', \'location\': (34.05114, -118.23803), \'website\': \'http://www.visitlittletokyo.com/\'}, {\'location_id\': \'320047\', \'name\': \'Tokyo Tower\', \'location\': (35.65858, 139.74544), \'website\': \'http://www.tokyotower.co.jp/\'}, {\'location_id\': \'1872416\', \'name\': \'Tokyo Skytree\', \'location\': (35.71007, 139.81065), \'website\': \'http://www.tokyo-skytree.jp/en/\'}, {\'location_id\': \'320634\', \'name\': \'Tokyo Disneyland\', \'location\': (35.632835, 139.88039), \'website\': \'https://www.tokyodisneyresort.jp/en/index.html\'}, {\'location_id\': \'1509275\', \'name\': \'Tokyo Metro\', \'location\': (35.683125, 139.73866), \'website\': \'http://www.tokyometro.jp/index.html\'}, {\'location_id\': \'12310322\', \'name\': \'Tokyo Localized - Free Walking Tour in Tokyo & More\', \'location\': (35.699043, 139.77283), \'website\': \'http://www.tokyolocalized.com/\'}, {\'location_id\': \'7744338\', \'name\': \'Waho-An NATURE Tokyo\', \'location\': (35.651203, 139.70538), \'website\': \'http://www.natura-w.com/\'}, {\'location_id\': \'550327\', \'name\': \'Tokyo Central Railway Station\', \'location\': (35.681553, 139.76544), \'website\': \'http://www.tokyostationcity.com/\'}, {\'location_id\': \'320639\', \'name\': \'Tokyo DisneySea\', \'location\': (35.62681, 139.88501), \'website\': \'https://www.tokyodisneyresort.jp/tds/\'}, {\'location_id\': \'7604418\', \'name\': \'Tokyo Bay\', \'location\': (-36.786903, 174.77399), \'website\': \'http://www.tokyobay.co.nz/\'}, {\'location_id\': \'1010352\', \'name\': \'NINJA TOKYO\', \'location\': (35.684948, 139.76709), \'website\': \'https://www.ninja-tokyo.jp/home/home-en/\'}, {\'location_id\': \'1160290\', \'name\': \'Tokyo\', \'location\': (24.718328, 46.686707), \'website\': \'http://www.tokyoarabia.com\'}, {\'location_id\': \'24035984\', \'name\': \'Tokyo Restaurant\', \'location\': (30.090359, 31.326263), \'website\': \'https://www.instagram.com/tokyorestaurant_/?igshid=YmMyMTA2M2Y%3D\'}, {\'location_id\': \'16714835\', \'name\': \'Starbucks Reserve(R) Roastery Tokyo\', \'location\': (35.649372, 139.69258), \'website\': \'http://store.starbucks.co.jp/detail-2381/\'}, {\'location_id\': \'9798604\', \'name\': \'Tokyo Sushi\', \'location\': (41.14435, -8.605821), \'website\': \'http://www.facebook.com/Tokyosushi2\'}, {\'location_id\': \'5113133\', \'name\': "Tokyo Jo\'s", \'location\': (18.509495, -77.9045), \'website\': \'http://www.sandals.com/main/montego/mo-dining.cfm\'}, {\'location_id\': \'21356820\', \'name\': \'Tokyo Tokyo Central\', \'location\': (25.270615, 55.321823), \'website\': \'https://www.facebook.com/TokyoTokyoCentralOfiicial\'}, {\'location_id\': \'2167155\', \'name\': \'Tokyo Pot\', \'location\': (36.111465, -97.059135), \'website\': \'http://www.facebook.com/TokyoPot?rf=123605501023078\'}, {\'location_id\': \'1106443\', \'name\': \'Tokyo Japanese Restaurant\', \'location\': (46.763035, 23.583824), \'website\': \'http://www.tokyorestaurant.ro/\'}]I\'m planning a trip and need a detailed plan based on this information. Please create a comprehensive trip plan that includes in this order:1. The best flight option considering price and timing.2. Top 3 hotel recommendations based on the data.3. show now the budget that was left after the flight and hotel. take into consideration the number of people in the trip4. A day-by-day itinerary that: (in the first day take into account the arrival time of the flight in the planning)- Allocates activities and attractions based on their proximity (using the data).- Suggests dining options near each activity or attraction.- Utilizes the budget effectively, considering the cost of flights and accommodation.- Incorporates free time for shopping and exploration.- Include addresses and websites of attractions4. Ensure all recommendations are presented in a way that will be visually appealing on a webpage, using HTML formatting where appropriate (e.g., <b> for bold).5. do not write me any instructions on how to put the trip plan in the html, just provide the plan itself.Summarize the trip plan, ensuring it is well-organized and includes all relevant details.'}], 'model': 'gpt-4-0125-preview', 'temperature': 0.4}}
2024-03-17 20:07:06,964 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-17 20:07:06,964 - DEBUG - send_request_headers.complete
2024-03-17 20:07:06,964 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-17 20:07:06,965 - DEBUG - send_request_body.complete
2024-03-17 20:07:06,965 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-17 20:08:00,578 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:08:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-4-0125-preview'), (b'openai-organization', b'reichman-university-wxioss'), (b'openai-processing-ms', b'53321'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'800000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'792109'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'591ms'), (b'x-request-id', b'req_dd952d47d2837febbe68c34b7547935d'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'865eebb498b709bf-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 20:08:00,578 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-03-17 20:08:00,578 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-17 20:08:00,578 - DEBUG - receive_response_body.complete
2024-03-17 20:08:00,578 - DEBUG - response_closed.started
2024-03-17 20:08:00,578 - DEBUG - response_closed.complete
2024-03-17 20:08:00,578 - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-03-17 20:08:00,582 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': "I'm planning a trip to Tokyo. Can you help me to create a photo for the trip?", 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}}
2024-03-17 20:08:00,582 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-03-17 20:08:00,583 - DEBUG - send_request_headers.complete
2024-03-17 20:08:00,583 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-03-17 20:08:00,583 - DEBUG - send_request_body.complete
2024-03-17 20:08:00,583 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-03-17 20:08:16,924 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 17 Mar 2024 18:08:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'reichman-university-wxioss'), (b'x-request-id', b'req_89ea6a19dace19512e4d4748adbe2ea4'), (b'openai-processing-ms', b'16113'), (b'access-control-allow-origin', b'*'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'865eed03bed509bf-HFA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-03-17 20:08:16,924 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2024-03-17 20:08:16,924 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-03-17 20:08:16,925 - DEBUG - receive_response_body.complete
2024-03-17 20:08:16,925 - DEBUG - response_closed.started
2024-03-17 20:08:16,925 - DEBUG - response_closed.complete
2024-03-17 20:08:16,925 - DEBUG - HTTP Request: POST https://api.openai.com/v1/images/generations "200 OK"
2024-03-17 20:15:21,927 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:15:21,928 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 20:15:36,905 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 20:15:36,907 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 21:38:47,335 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 21:38:47,336 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
2024-03-17 21:39:33,564 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-03-17 21:39:33,565 - DEBUG - load_verify_locations cafile='D:\\Python\\lib\\site-packages\\certifi\\cacert.pem'
